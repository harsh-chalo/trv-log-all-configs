const XMLHttpRequest = require('xhr2');
const WebSocket = require('ws');
const axios = require('axios');
const stringChangeMd5 = require('./md5.js');
!(function () {
  var e = {
      955: function (e, t, n) {
        var r;
        e.exports =
          ((r = n(21)),
          n(754),
          n(636),
          n(506),
          n(165),
          (function () {
            var e = r,
              t = e.lib.BlockCipher,
              n = e.algo,
              i = [],
              a = [],
              o = [],
              _ = [],
              s = [],
              c = [],
              l = [],
              u = [],
              f = [],
              h = [];
            !(function () {
              for (var e = [], t = 0; t < 256; t++)
                e[t] = t < 128 ? t << 1 : (t << 1) ^ 283;
              var n = 0,
                r = 0;
              for (t = 0; t < 256; t++) {
                var d = r ^ (r << 1) ^ (r << 2) ^ (r << 3) ^ (r << 4);
                (d = (d >>> 8) ^ (255 & d) ^ 99), (i[n] = d), (a[d] = n);
                var p = e[n],
                  P = e[p],
                  m = e[P],
                  v = (257 * e[d]) ^ (16843008 * d);
                (o[n] = (v << 24) | (v >>> 8)),
                  (_[n] = (v << 16) | (v >>> 16)),
                  (s[n] = (v << 8) | (v >>> 24)),
                  (c[n] = v),
                  (v =
                    (16843009 * m) ^ (65537 * P) ^ (257 * p) ^ (16843008 * n)),
                  (l[d] = (v << 24) | (v >>> 8)),
                  (u[d] = (v << 16) | (v >>> 16)),
                  (f[d] = (v << 8) | (v >>> 24)),
                  (h[d] = v),
                  n ? ((n = p ^ e[e[e[m ^ p]]]), (r ^= e[e[r]])) : (n = r = 1);
              }
            })();
            var d = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54],
              p = (n.AES = t.extend({
                _doReset: function () {
                  if (!this._nRounds || this._keyPriorReset !== this._key) {
                    for (
                      var e = (this._keyPriorReset = this._key),
                        t = e.words,
                        n = e.sigBytes / 4,
                        r = 4 * ((this._nRounds = n + 6) + 1),
                        a = (this._keySchedule = []),
                        o = 0;
                      o < r;
                      o++
                    )
                      o < n
                        ? (a[o] = t[o])
                        : ((c = a[o - 1]),
                          o % n
                            ? n > 6 &&
                              o % n == 4 &&
                              (c =
                                (i[c >>> 24] << 24) |
                                (i[(c >>> 16) & 255] << 16) |
                                (i[(c >>> 8) & 255] << 8) |
                                i[255 & c])
                            : ((c =
                                (i[(c = (c << 8) | (c >>> 24)) >>> 24] << 24) |
                                (i[(c >>> 16) & 255] << 16) |
                                (i[(c >>> 8) & 255] << 8) |
                                i[255 & c]),
                              (c ^= d[(o / n) | 0] << 24)),
                          (a[o] = a[o - n] ^ c));
                    for (
                      var _ = (this._invKeySchedule = []), s = 0;
                      s < r;
                      s++
                    ) {
                      if (((o = r - s), s % 4)) var c = a[o];
                      else c = a[o - 4];
                      _[s] =
                        s < 4 || o <= 4
                          ? c
                          : l[i[c >>> 24]] ^
                            u[i[(c >>> 16) & 255]] ^
                            f[i[(c >>> 8) & 255]] ^
                            h[i[255 & c]];
                    }
                  }
                },
                encryptBlock: function (e, t) {
                  this._doCryptBlock(e, t, this._keySchedule, o, _, s, c, i);
                },
                decryptBlock: function (e, t) {
                  var n = e[t + 1];
                  (e[t + 1] = e[t + 3]),
                    (e[t + 3] = n),
                    this._doCryptBlock(
                      e,
                      t,
                      this._invKeySchedule,
                      l,
                      u,
                      f,
                      h,
                      a
                    ),
                    (n = e[t + 1]),
                    (e[t + 1] = e[t + 3]),
                    (e[t + 3] = n);
                },
                _doCryptBlock: function (e, t, n, r, i, a, o, _) {
                  for (
                    var s = this._nRounds,
                      c = e[t] ^ n[0],
                      l = e[t + 1] ^ n[1],
                      u = e[t + 2] ^ n[2],
                      f = e[t + 3] ^ n[3],
                      h = 4,
                      d = 1;
                    d < s;
                    d++
                  ) {
                    var p =
                        r[c >>> 24] ^
                        i[(l >>> 16) & 255] ^
                        a[(u >>> 8) & 255] ^
                        o[255 & f] ^
                        n[h++],
                      P =
                        r[l >>> 24] ^
                        i[(u >>> 16) & 255] ^
                        a[(f >>> 8) & 255] ^
                        o[255 & c] ^
                        n[h++],
                      m =
                        r[u >>> 24] ^
                        i[(f >>> 16) & 255] ^
                        a[(c >>> 8) & 255] ^
                        o[255 & l] ^
                        n[h++],
                      v =
                        r[f >>> 24] ^
                        i[(c >>> 16) & 255] ^
                        a[(l >>> 8) & 255] ^
                        o[255 & u] ^
                        n[h++];
                    (c = p), (l = P), (u = m), (f = v);
                  }
                  (p =
                    ((_[c >>> 24] << 24) |
                      (_[(l >>> 16) & 255] << 16) |
                      (_[(u >>> 8) & 255] << 8) |
                      _[255 & f]) ^
                    n[h++]),
                    (P =
                      ((_[l >>> 24] << 24) |
                        (_[(u >>> 16) & 255] << 16) |
                        (_[(f >>> 8) & 255] << 8) |
                        _[255 & c]) ^
                      n[h++]),
                    (m =
                      ((_[u >>> 24] << 24) |
                        (_[(f >>> 16) & 255] << 16) |
                        (_[(c >>> 8) & 255] << 8) |
                        _[255 & l]) ^
                      n[h++]),
                    (v =
                      ((_[f >>> 24] << 24) |
                        (_[(c >>> 16) & 255] << 16) |
                        (_[(l >>> 8) & 255] << 8) |
                        _[255 & u]) ^
                      n[h++]),
                    (e[t] = p),
                    (e[t + 1] = P),
                    (e[t + 2] = m),
                    (e[t + 3] = v);
                },
                keySize: 8,
              }));
            e.AES = t._createHelper(p);
          })(),
          r.AES);
      },
      128: function (e, t, n) {
        var r;
        e.exports =
          ((r = n(21)),
          n(754),
          n(636),
          n(506),
          n(165),
          (function () {
            var e = r,
              t = e.lib.BlockCipher,
              n = e.algo;
            const i = 16,
              a = [
                608135816, 2242054355, 320440878, 57701188, 2752067618,
                698298832, 137296536, 3964562569, 1160258022, 953160567,
                3193202383, 887688300, 3232508343, 3380367581, 1065670069,
                3041331479, 2450970073, 2306472731,
              ],
              o = [
                [
                  3509652390, 2564797868, 805139163, 3491422135, 3101798381,
                  1780907670, 3128725573, 4046225305, 614570311, 3012652279,
                  134345442, 2240740374, 1667834072, 1901547113, 2757295779,
                  4103290238, 227898511, 1921955416, 1904987480, 2182433518,
                  2069144605, 3260701109, 2620446009, 720527379, 3318853667,
                  677414384, 3393288472, 3101374703, 2390351024, 1614419982,
                  1822297739, 2954791486, 3608508353, 3174124327, 2024746970,
                  1432378464, 3864339955, 2857741204, 1464375394, 1676153920,
                  1439316330, 715854006, 3033291828, 289532110, 2706671279,
                  2087905683, 3018724369, 1668267050, 732546397, 1947742710,
                  3462151702, 2609353502, 2950085171, 1814351708, 2050118529,
                  680887927, 999245976, 1800124847, 3300911131, 1713906067,
                  1641548236, 4213287313, 1216130144, 1575780402, 4018429277,
                  3917837745, 3693486850, 3949271944, 596196993, 3549867205,
                  258830323, 2213823033, 772490370, 2760122372, 1774776394,
                  2652871518, 566650946, 4142492826, 1728879713, 2882767088,
                  1783734482, 3629395816, 2517608232, 2874225571, 1861159788,
                  326777828, 3124490320, 2130389656, 2716951837, 967770486,
                  1724537150, 2185432712, 2364442137, 1164943284, 2105845187,
                  998989502, 3765401048, 2244026483, 1075463327, 1455516326,
                  1322494562, 910128902, 469688178, 1117454909, 936433444,
                  3490320968, 3675253459, 1240580251, 122909385, 2157517691,
                  634681816, 4142456567, 3825094682, 3061402683, 2540495037,
                  79693498, 3249098678, 1084186820, 1583128258, 426386531,
                  1761308591, 1047286709, 322548459, 995290223, 1845252383,
                  2603652396, 3431023940, 2942221577, 3202600964, 3727903485,
                  1712269319, 422464435, 3234572375, 1170764815, 3523960633,
                  3117677531, 1434042557, 442511882, 3600875718, 1076654713,
                  1738483198, 4213154764, 2393238008, 3677496056, 1014306527,
                  4251020053, 793779912, 2902807211, 842905082, 4246964064,
                  1395751752, 1040244610, 2656851899, 3396308128, 445077038,
                  3742853595, 3577915638, 679411651, 2892444358, 2354009459,
                  1767581616, 3150600392, 3791627101, 3102740896, 284835224,
                  4246832056, 1258075500, 768725851, 2589189241, 3069724005,
                  3532540348, 1274779536, 3789419226, 2764799539, 1660621633,
                  3471099624, 4011903706, 913787905, 3497959166, 737222580,
                  2514213453, 2928710040, 3937242737, 1804850592, 3499020752,
                  2949064160, 2386320175, 2390070455, 2415321851, 4061277028,
                  2290661394, 2416832540, 1336762016, 1754252060, 3520065937,
                  3014181293, 791618072, 3188594551, 3933548030, 2332172193,
                  3852520463, 3043980520, 413987798, 3465142937, 3030929376,
                  4245938359, 2093235073, 3534596313, 375366246, 2157278981,
                  2479649556, 555357303, 3870105701, 2008414854, 3344188149,
                  4221384143, 3956125452, 2067696032, 3594591187, 2921233993,
                  2428461, 544322398, 577241275, 1471733935, 610547355,
                  4027169054, 1432588573, 1507829418, 2025931657, 3646575487,
                  545086370, 48609733, 2200306550, 1653985193, 298326376,
                  1316178497, 3007786442, 2064951626, 458293330, 2589141269,
                  3591329599, 3164325604, 727753846, 2179363840, 146436021,
                  1461446943, 4069977195, 705550613, 3059967265, 3887724982,
                  4281599278, 3313849956, 1404054877, 2845806497, 146425753,
                  1854211946,
                ],
                [
                  1266315497, 3048417604, 3681880366, 3289982499, 290971e4,
                  1235738493, 2632868024, 2414719590, 3970600049, 1771706367,
                  1449415276, 3266420449, 422970021, 1963543593, 2690192192,
                  3826793022, 1062508698, 1531092325, 1804592342, 2583117782,
                  2714934279, 4024971509, 1294809318, 4028980673, 1289560198,
                  2221992742, 1669523910, 35572830, 157838143, 1052438473,
                  1016535060, 1802137761, 1753167236, 1386275462, 3080475397,
                  2857371447, 1040679964, 2145300060, 2390574316, 1461121720,
                  2956646967, 4031777805, 4028374788, 33600511, 2920084762,
                  1018524850, 629373528, 3691585981, 3515945977, 2091462646,
                  2486323059, 586499841, 988145025, 935516892, 3367335476,
                  2599673255, 2839830854, 265290510, 3972581182, 2759138881,
                  3795373465, 1005194799, 847297441, 406762289, 1314163512,
                  1332590856, 1866599683, 4127851711, 750260880, 613907577,
                  1450815602, 3165620655, 3734664991, 3650291728, 3012275730,
                  3704569646, 1427272223, 778793252, 1343938022, 2676280711,
                  2052605720, 1946737175, 3164576444, 3914038668, 3967478842,
                  3682934266, 1661551462, 3294938066, 4011595847, 840292616,
                  3712170807, 616741398, 312560963, 711312465, 1351876610,
                  322626781, 1910503582, 271666773, 2175563734, 1594956187,
                  70604529, 3617834859, 1007753275, 1495573769, 4069517037,
                  2549218298, 2663038764, 504708206, 2263041392, 3941167025,
                  2249088522, 1514023603, 1998579484, 1312622330, 694541497,
                  2582060303, 2151582166, 1382467621, 776784248, 2618340202,
                  3323268794, 2497899128, 2784771155, 503983604, 4076293799,
                  907881277, 423175695, 432175456, 1378068232, 4145222326,
                  3954048622, 3938656102, 3820766613, 2793130115, 2977904593,
                  26017576, 3274890735, 3194772133, 1700274565, 1756076034,
                  4006520079, 3677328699, 720338349, 1533947780, 354530856,
                  688349552, 3973924725, 1637815568, 332179504, 3949051286,
                  53804574, 2852348879, 3044236432, 1282449977, 3583942155,
                  3416972820, 4006381244, 1617046695, 2628476075, 3002303598,
                  1686838959, 431878346, 2686675385, 1700445008, 1080580658,
                  1009431731, 832498133, 3223435511, 2605976345, 2271191193,
                  2516031870, 1648197032, 4164389018, 2548247927, 300782431,
                  375919233, 238389289, 3353747414, 2531188641, 2019080857,
                  1475708069, 455242339, 2609103871, 448939670, 3451063019,
                  1395535956, 2413381860, 1841049896, 1491858159, 885456874,
                  4264095073, 4001119347, 1565136089, 3898914787, 1108368660,
                  540939232, 1173283510, 2745871338, 3681308437, 4207628240,
                  3343053890, 4016749493, 1699691293, 1103962373, 3625875870,
                  2256883143, 3830138730, 1031889488, 3479347698, 1535977030,
                  4236805024, 3251091107, 2132092099, 1774941330, 1199868427,
                  1452454533, 157007616, 2904115357, 342012276, 595725824,
                  1480756522, 206960106, 497939518, 591360097, 863170706,
                  2375253569, 3596610801, 1814182875, 2094937945, 3421402208,
                  1082520231, 3463918190, 2785509508, 435703966, 3908032597,
                  1641649973, 2842273706, 3305899714, 1510255612, 2148256476,
                  2655287854, 3276092548, 4258621189, 236887753, 3681803219,
                  274041037, 1734335097, 3815195456, 3317970021, 1899903192,
                  1026095262, 4050517792, 356393447, 2410691914, 3873677099,
                  3682840055,
                ],
                [
                  3913112168, 2491498743, 4132185628, 2489919796, 1091903735,
                  1979897079, 3170134830, 3567386728, 3557303409, 857797738,
                  1136121015, 1342202287, 507115054, 2535736646, 337727348,
                  3213592640, 1301675037, 2528481711, 1895095763, 1721773893,
                  3216771564, 62756741, 2142006736, 835421444, 2531993523,
                  1442658625, 3659876326, 2882144922, 676362277, 1392781812,
                  170690266, 3921047035, 1759253602, 3611846912, 1745797284,
                  664899054, 1329594018, 3901205900, 3045908486, 2062866102,
                  2865634940, 3543621612, 3464012697, 1080764994, 553557557,
                  3656615353, 3996768171, 991055499, 499776247, 1265440854,
                  648242737, 3940784050, 980351604, 3713745714, 1749149687,
                  3396870395, 4211799374, 3640570775, 1161844396, 3125318951,
                  1431517754, 545492359, 4268468663, 3499529547, 1437099964,
                  2702547544, 3433638243, 2581715763, 2787789398, 1060185593,
                  1593081372, 2418618748, 4260947970, 69676912, 2159744348,
                  86519011, 2512459080, 3838209314, 1220612927, 3339683548,
                  133810670, 1090789135, 1078426020, 1569222167, 845107691,
                  3583754449, 4072456591, 1091646820, 628848692, 1613405280,
                  3757631651, 526609435, 236106946, 48312990, 2942717905,
                  3402727701, 1797494240, 859738849, 992217954, 4005476642,
                  2243076622, 3870952857, 3732016268, 765654824, 3490871365,
                  2511836413, 1685915746, 3888969200, 1414112111, 2273134842,
                  3281911079, 4080962846, 172450625, 2569994100, 980381355,
                  4109958455, 2819808352, 2716589560, 2568741196, 3681446669,
                  3329971472, 1835478071, 660984891, 3704678404, 4045999559,
                  3422617507, 3040415634, 1762651403, 1719377915, 3470491036,
                  2693910283, 3642056355, 3138596744, 1364962596, 2073328063,
                  1983633131, 926494387, 3423689081, 2150032023, 4096667949,
                  1749200295, 3328846651, 309677260, 2016342300, 1779581495,
                  3079819751, 111262694, 1274766160, 443224088, 298511866,
                  1025883608, 3806446537, 1145181785, 168956806, 3641502830,
                  3584813610, 1689216846, 3666258015, 3200248200, 1692713982,
                  2646376535, 4042768518, 1618508792, 1610833997, 3523052358,
                  4130873264, 2001055236, 3610705100, 2202168115, 4028541809,
                  2961195399, 1006657119, 2006996926, 3186142756, 1430667929,
                  3210227297, 1314452623, 4074634658, 4101304120, 2273951170,
                  1399257539, 3367210612, 3027628629, 1190975929, 2062231137,
                  2333990788, 2221543033, 2438960610, 1181637006, 548689776,
                  2362791313, 3372408396, 3104550113, 3145860560, 296247880,
                  1970579870, 3078560182, 3769228297, 1714227617, 3291629107,
                  3898220290, 166772364, 1251581989, 493813264, 448347421,
                  195405023, 2709975567, 677966185, 3703036547, 1463355134,
                  2715995803, 1338867538, 1343315457, 2802222074, 2684532164,
                  233230375, 2599980071, 2000651841, 3277868038, 1638401717,
                  4028070440, 3237316320, 6314154, 819756386, 300326615,
                  590932579, 1405279636, 3267499572, 3150704214, 2428286686,
                  3959192993, 3461946742, 1862657033, 1266418056, 963775037,
                  2089974820, 2263052895, 1917689273, 448879540, 3550394620,
                  3981727096, 150775221, 3627908307, 1303187396, 508620638,
                  2975983352, 2726630617, 1817252668, 1876281319, 1457606340,
                  908771278, 3720792119, 3617206836, 2455994898, 1729034894,
                  1080033504,
                ],
                [
                  976866871, 3556439503, 2881648439, 1522871579, 1555064734,
                  1336096578, 3548522304, 2579274686, 3574697629, 3205460757,
                  3593280638, 3338716283, 3079412587, 564236357, 2993598910,
                  1781952180, 1464380207, 3163844217, 3332601554, 1699332808,
                  1393555694, 1183702653, 3581086237, 1288719814, 691649499,
                  2847557200, 2895455976, 3193889540, 2717570544, 1781354906,
                  1676643554, 2592534050, 3230253752, 1126444790, 2770207658,
                  2633158820, 2210423226, 2615765581, 2414155088, 3127139286,
                  673620729, 2805611233, 1269405062, 4015350505, 3341807571,
                  4149409754, 1057255273, 2012875353, 2162469141, 2276492801,
                  2601117357, 993977747, 3918593370, 2654263191, 753973209,
                  36408145, 2530585658, 25011837, 3520020182, 2088578344,
                  530523599, 2918365339, 1524020338, 1518925132, 3760827505,
                  3759777254, 1202760957, 3985898139, 3906192525, 674977740,
                  4174734889, 2031300136, 2019492241, 3983892565, 4153806404,
                  3822280332, 352677332, 2297720250, 60907813, 90501309,
                  3286998549, 1016092578, 2535922412, 2839152426, 457141659,
                  509813237, 4120667899, 652014361, 1966332200, 2975202805,
                  55981186, 2327461051, 676427537, 3255491064, 2882294119,
                  3433927263, 1307055953, 942726286, 933058658, 2468411793,
                  3933900994, 4215176142, 1361170020, 2001714738, 2830558078,
                  3274259782, 1222529897, 1679025792, 2729314320, 3714953764,
                  1770335741, 151462246, 3013232138, 1682292957, 1483529935,
                  471910574, 1539241949, 458788160, 3436315007, 1807016891,
                  3718408830, 978976581, 1043663428, 3165965781, 1927990952,
                  4200891579, 2372276910, 3208408903, 3533431907, 1412390302,
                  2931980059, 4132332400, 1947078029, 3881505623, 4168226417,
                  2941484381, 1077988104, 1320477388, 886195818, 18198404,
                  3786409e3, 2509781533, 112762804, 3463356488, 1866414978,
                  891333506, 18488651, 661792760, 1628790961, 3885187036,
                  3141171499, 876946877, 2693282273, 1372485963, 791857591,
                  2686433993, 3759982718, 3167212022, 3472953795, 2716379847,
                  445679433, 3561995674, 3504004811, 3574258232, 54117162,
                  3331405415, 2381918588, 3769707343, 4154350007, 1140177722,
                  4074052095, 668550556, 3214352940, 367459370, 261225585,
                  2610173221, 4209349473, 3468074219, 3265815641, 314222801,
                  3066103646, 3808782860, 282218597, 3406013506, 3773591054,
                  379116347, 1285071038, 846784868, 2669647154, 3771962079,
                  3550491691, 2305946142, 453669953, 1268987020, 3317592352,
                  3279303384, 3744833421, 2610507566, 3859509063, 266596637,
                  3847019092, 517658769, 3462560207, 3443424879, 370717030,
                  4247526661, 2224018117, 4143653529, 4112773975, 2788324899,
                  2477274417, 1456262402, 2901442914, 1517677493, 1846949527,
                  2295493580, 3734397586, 2176403920, 1280348187, 1908823572,
                  3871786941, 846861322, 1172426758, 3287448474, 3383383037,
                  1655181056, 3139813346, 901632758, 1897031941, 2986607138,
                  3066810236, 3447102507, 1393639104, 373351379, 950779232,
                  625454576, 3124240540, 4148612726, 2007998917, 544563296,
                  2244738638, 2330496472, 2058025392, 1291430526, 424198748,
                  50039436, 29584100, 3605783033, 2429876329, 2791104160,
                  1057563949, 3255363231, 3075367218, 3463963227, 1469046755,
                  985887462,
                ],
              ];
            var _ = { pbox: [], sbox: [] };
            function s(e, t) {
              let n = (t >> 24) & 255,
                r = (t >> 16) & 255,
                i = (t >> 8) & 255,
                a = 255 & t,
                o = e.sbox[0][n] + e.sbox[1][r];
              return (o ^= e.sbox[2][i]), (o += e.sbox[3][a]), o;
            }
            function c(e, t, n) {
              let r,
                a = t,
                o = n;
              for (let t = 0; t < i; ++t)
                (a ^= e.pbox[t]), (o = s(e, a) ^ o), (r = a), (a = o), (o = r);
              return (
                (r = a),
                (a = o),
                (o = r),
                (o ^= e.pbox[i]),
                (a ^= e.pbox[i + 1]),
                { left: a, right: o }
              );
            }
            function l(e, t, n) {
              let r,
                a = t,
                o = n;
              for (let t = i + 1; t > 1; --t)
                (a ^= e.pbox[t]), (o = s(e, a) ^ o), (r = a), (a = o), (o = r);
              return (
                (r = a),
                (a = o),
                (o = r),
                (o ^= e.pbox[1]),
                (a ^= e.pbox[0]),
                { left: a, right: o }
              );
            }
            function u(e, t, n) {
              for (let t = 0; t < 4; t++) {
                e.sbox[t] = [];
                for (let n = 0; n < 256; n++) e.sbox[t][n] = o[t][n];
              }
              let r = 0;
              for (let o = 0; o < i + 2; o++)
                (e.pbox[o] = a[o] ^ t[r]), r++, r >= n && (r = 0);
              let _ = 0,
                s = 0,
                l = 0;
              for (let t = 0; t < i + 2; t += 2)
                (l = c(e, _, s)),
                  (_ = l.left),
                  (s = l.right),
                  (e.pbox[t] = _),
                  (e.pbox[t + 1] = s);
              for (let t = 0; t < 4; t++)
                for (let n = 0; n < 256; n += 2)
                  (l = c(e, _, s)),
                    (_ = l.left),
                    (s = l.right),
                    (e.sbox[t][n] = _),
                    (e.sbox[t][n + 1] = s);
              return !0;
            }
            var f = (n.Blowfish = t.extend({
              _doReset: function () {
                if (this._keyPriorReset !== this._key) {
                  var e = (this._keyPriorReset = this._key),
                    t = e.words,
                    n = e.sigBytes / 4;
                  u(_, t, n);
                }
              },
              encryptBlock: function (e, t) {
                var n = c(_, e[t], e[t + 1]);
                (e[t] = n.left), (e[t + 1] = n.right);
              },
              decryptBlock: function (e, t) {
                var n = l(_, e[t], e[t + 1]);
                (e[t] = n.left), (e[t + 1] = n.right);
              },
              blockSize: 2,
              keySize: 4,
              ivSize: 2,
            }));
            e.Blowfish = t._createHelper(f);
          })(),
          r.Blowfish);
      },
      165: function (e, t, n) {
        var r;
        e.exports =
          ((r = n(21)),
          n(506),
          void (
            r.lib.Cipher ||
            (function (e) {
              var t = r,
                n = t.lib,
                i = n.Base,
                a = n.WordArray,
                o = n.BufferedBlockAlgorithm,
                _ = t.enc,
                s = (_.Utf8, _.Base64),
                c = t.algo.EvpKDF,
                l = (n.Cipher = o.extend({
                  cfg: i.extend(),
                  createEncryptor: function (e, t) {
                    return this.create(this._ENC_XFORM_MODE, e, t);
                  },
                  createDecryptor: function (e, t) {
                    return this.create(this._DEC_XFORM_MODE, e, t);
                  },
                  init: function (e, t, n) {
                    (this.cfg = this.cfg.extend(n)),
                      (this._xformMode = e),
                      (this._key = t),
                      this.reset();
                  },
                  reset: function () {
                    o.reset.call(this), this._doReset();
                  },
                  process: function (e) {
                    return this._append(e), this._process();
                  },
                  finalize: function (e) {
                    return e && this._append(e), this._doFinalize();
                  },
                  keySize: 4,
                  ivSize: 4,
                  _ENC_XFORM_MODE: 1,
                  _DEC_XFORM_MODE: 2,
                  _createHelper: (function () {
                    function e(e) {
                      return 'string' == typeof e ? A : m;
                    }
                    return function (t) {
                      return {
                        encrypt: function (n, r, i) {
                          return e(r).encrypt(t, n, r, i);
                        },
                        decrypt: function (n, r, i) {
                          return e(r).decrypt(t, n, r, i);
                        },
                      };
                    };
                  })(),
                })),
                u =
                  ((n.StreamCipher = l.extend({
                    _doFinalize: function () {
                      return this._process(!0);
                    },
                    blockSize: 1,
                  })),
                  (t.mode = {})),
                f = (n.BlockCipherMode = i.extend({
                  createEncryptor: function (e, t) {
                    return this.Encryptor.create(e, t);
                  },
                  createDecryptor: function (e, t) {
                    return this.Decryptor.create(e, t);
                  },
                  init: function (e, t) {
                    (this._cipher = e), (this._iv = t);
                  },
                })),
                h = (u.CBC = (function () {
                  var t = f.extend();
                  function n(t, n, r) {
                    var i,
                      a = this._iv;
                    a ? ((i = a), (this._iv = e)) : (i = this._prevBlock);
                    for (var o = 0; o < r; o++) t[n + o] ^= i[o];
                  }
                  return (
                    (t.Encryptor = t.extend({
                      processBlock: function (e, t) {
                        var r = this._cipher,
                          i = r.blockSize;
                        n.call(this, e, t, i),
                          r.encryptBlock(e, t),
                          (this._prevBlock = e.slice(t, t + i));
                      },
                    })),
                    (t.Decryptor = t.extend({
                      processBlock: function (e, t) {
                        var r = this._cipher,
                          i = r.blockSize,
                          a = e.slice(t, t + i);
                        r.decryptBlock(e, t),
                          n.call(this, e, t, i),
                          (this._prevBlock = a);
                      },
                    })),
                    t
                  );
                })()),
                d = ((t.pad = {}).Pkcs7 = {
                  pad: function (e, t) {
                    for (
                      var n = 4 * t,
                        r = n - (e.sigBytes % n),
                        i = (r << 24) | (r << 16) | (r << 8) | r,
                        o = [],
                        _ = 0;
                      _ < r;
                      _ += 4
                    )
                      o.push(i);
                    var s = a.create(o, r);
                    e.concat(s);
                  },
                  unpad: function (e) {
                    var t = 255 & e.words[(e.sigBytes - 1) >>> 2];
                    e.sigBytes -= t;
                  },
                }),
                p =
                  ((n.BlockCipher = l.extend({
                    cfg: l.cfg.extend({ mode: h, padding: d }),
                    reset: function () {
                      var e;
                      l.reset.call(this);
                      var t = this.cfg,
                        n = t.iv,
                        r = t.mode;
                      this._xformMode == this._ENC_XFORM_MODE
                        ? (e = r.createEncryptor)
                        : ((e = r.createDecryptor), (this._minBufferSize = 1)),
                        this._mode && this._mode.__creator == e
                          ? this._mode.init(this, n && n.words)
                          : ((this._mode = e.call(r, this, n && n.words)),
                            (this._mode.__creator = e));
                    },
                    _doProcessBlock: function (e, t) {
                      this._mode.processBlock(e, t);
                    },
                    _doFinalize: function () {
                      var e,
                        t = this.cfg.padding;
                      return (
                        this._xformMode == this._ENC_XFORM_MODE
                          ? (t.pad(this._data, this.blockSize),
                            (e = this._process(!0)))
                          : ((e = this._process(!0)), t.unpad(e)),
                        e
                      );
                    },
                    blockSize: 4,
                  })),
                  (n.CipherParams = i.extend({
                    init: function (e) {
                      this.mixIn(e);
                    },
                    toString: function (e) {
                      return (e || this.formatter).stringify(this);
                    },
                  }))),
                P = ((t.format = {}).OpenSSL = {
                  stringify: function (e) {
                    var t = e.ciphertext,
                      n = e.salt;
                    return (
                      n
                        ? a.create([1398893684, 1701076831]).concat(n).concat(t)
                        : t
                    ).toString(s);
                  },
                  parse: function (e) {
                    var t,
                      n = s.parse(e),
                      r = n.words;
                    return (
                      1398893684 == r[0] &&
                        1701076831 == r[1] &&
                        ((t = a.create(r.slice(2, 4))),
                        r.splice(0, 4),
                        (n.sigBytes -= 16)),
                      p.create({ ciphertext: n, salt: t })
                    );
                  },
                }),
                m = (n.SerializableCipher = i.extend({
                  cfg: i.extend({ format: P }),
                  encrypt: function (e, t, n, r) {
                    r = this.cfg.extend(r);
                    var i = e.createEncryptor(n, r),
                      a = i.finalize(t),
                      o = i.cfg;
                    return p.create({
                      ciphertext: a,
                      key: n,
                      iv: o.iv,
                      algorithm: e,
                      mode: o.mode,
                      padding: o.padding,
                      blockSize: e.blockSize,
                      formatter: r.format,
                    });
                  },
                  decrypt: function (e, t, n, r) {
                    return (
                      (r = this.cfg.extend(r)),
                      (t = this._parse(t, r.format)),
                      e.createDecryptor(n, r).finalize(t.ciphertext)
                    );
                  },
                  _parse: function (e, t) {
                    return 'string' == typeof e ? t.parse(e, this) : e;
                  },
                })),
                v = ((t.kdf = {}).OpenSSL = {
                  execute: function (e, t, n, r, i) {
                    if ((r || (r = a.random(8)), i))
                      o = c.create({ keySize: t + n, hasher: i }).compute(e, r);
                    else var o = c.create({ keySize: t + n }).compute(e, r);
                    var _ = a.create(o.words.slice(t), 4 * n);
                    return (
                      (o.sigBytes = 4 * t), p.create({ key: o, iv: _, salt: r })
                    );
                  },
                }),
                A = (n.PasswordBasedCipher = m.extend({
                  cfg: m.cfg.extend({ kdf: v }),
                  encrypt: function (e, t, n, r) {
                    var i = (r = this.cfg.extend(r)).kdf.execute(
                      n,
                      e.keySize,
                      e.ivSize,
                      r.salt,
                      r.hasher
                    );
                    r.iv = i.iv;
                    var a = m.encrypt.call(this, e, t, i.key, r);
                    return a.mixIn(i), a;
                  },
                  decrypt: function (e, t, n, r) {
                    (r = this.cfg.extend(r)), (t = this._parse(t, r.format));
                    var i = r.kdf.execute(
                      n,
                      e.keySize,
                      e.ivSize,
                      t.salt,
                      r.hasher
                    );
                    return (r.iv = i.iv), m.decrypt.call(this, e, t, i.key, r);
                  },
                }));
            })()
          ));
      },
      21: function (e, t, n) {
        var r;
        e.exports =
          ((r =
            r ||
            (function (e, t) {
              var r;
              if (
                ('undefined' != typeof window &&
                  global.crypto &&
                  (r = global.crypto),
                'undefined' != typeof self && self.crypto && (r = self.crypto),
                'undefined' != typeof globalThis &&
                  globalThis.crypto &&
                  (r = globalThis.crypto),
                !r &&
                  'undefined' != typeof window &&
                  global.msCrypto &&
                  (r = global.msCrypto),
                !r && void 0 !== n.g && n.g.crypto && (r = n.g.crypto),
                !r)
              )
                try {
                  r = n(477);
                } catch (e) {}
              var i = function () {
                  if (r) {
                    if ('function' == typeof r.getRandomValues)
                      try {
                        return r.getRandomValues(new Uint32Array(1))[0];
                      } catch (e) {}
                    if ('function' == typeof r.randomBytes)
                      try {
                        return r.randomBytes(4).readInt32LE();
                      } catch (e) {}
                  }
                  throw new Error(
                    'Native crypto module could not be used to get secure random number.'
                  );
                },
                a =
                  Object.create ||
                  (function () {
                    function e() {}
                    return function (t) {
                      var n;
                      return (
                        (e.prototype = t),
                        (n = new e()),
                        (e.prototype = null),
                        n
                      );
                    };
                  })(),
                o = {},
                _ = (o.lib = {}),
                s = (_.Base = {
                  extend: function (e) {
                    var t = a(this);
                    return (
                      e && t.mixIn(e),
                      (t.hasOwnProperty('init') && this.init !== t.init) ||
                        (t.init = function () {
                          t.$super.init.apply(this, arguments);
                        }),
                      (t.init.prototype = t),
                      (t.$super = this),
                      t
                    );
                  },
                  create: function () {
                    var e = this.extend();
                    return e.init.apply(e, arguments), e;
                  },
                  init: function () {},
                  mixIn: function (e) {
                    for (var t in e) e.hasOwnProperty(t) && (this[t] = e[t]);
                    e.hasOwnProperty('toString') &&
                      (this.toString = e.toString);
                  },
                  clone: function () {
                    return this.init.prototype.extend(this);
                  },
                }),
                c = (_.WordArray = s.extend({
                  init: function (e, n) {
                    (e = this.words = e || []),
                      (this.sigBytes = n != t ? n : 4 * e.length);
                  },
                  toString: function (e) {
                    return (e || u).stringify(this);
                  },
                  concat: function (e) {
                    var t = this.words,
                      n = e.words,
                      r = this.sigBytes,
                      i = e.sigBytes;
                    if ((this.clamp(), r % 4))
                      for (var a = 0; a < i; a++) {
                        var o = (n[a >>> 2] >>> (24 - (a % 4) * 8)) & 255;
                        t[(r + a) >>> 2] |= o << (24 - ((r + a) % 4) * 8);
                      }
                    else
                      for (var _ = 0; _ < i; _ += 4)
                        t[(r + _) >>> 2] = n[_ >>> 2];
                    return (this.sigBytes += i), this;
                  },
                  clamp: function () {
                    var t = this.words,
                      n = this.sigBytes;
                    (t[n >>> 2] &= 4294967295 << (32 - (n % 4) * 8)),
                      (t.length = e.ceil(n / 4));
                  },
                  clone: function () {
                    var e = s.clone.call(this);
                    return (e.words = this.words.slice(0)), e;
                  },
                  random: function (e) {
                    for (var t = [], n = 0; n < e; n += 4) t.push(i());
                    return new c.init(t, e);
                  },
                })),
                l = (o.enc = {}),
                u = (l.Hex = {
                  stringify: function (e) {
                    for (
                      var t = e.words, n = e.sigBytes, r = [], i = 0;
                      i < n;
                      i++
                    ) {
                      var a = (t[i >>> 2] >>> (24 - (i % 4) * 8)) & 255;
                      r.push((a >>> 4).toString(16)),
                        r.push((15 & a).toString(16));
                    }
                    return r.join('');
                  },
                  parse: function (e) {
                    for (var t = e.length, n = [], r = 0; r < t; r += 2)
                      n[r >>> 3] |=
                        parseInt(e.substr(r, 2), 16) << (24 - (r % 8) * 4);
                    return new c.init(n, t / 2);
                  },
                }),
                f = (l.Latin1 = {
                  stringify: function (e) {
                    for (
                      var t = e.words, n = e.sigBytes, r = [], i = 0;
                      i < n;
                      i++
                    ) {
                      var a = (t[i >>> 2] >>> (24 - (i % 4) * 8)) & 255;
                      r.push(String.fromCharCode(a));
                    }
                    return r.join('');
                  },
                  parse: function (e) {
                    for (var t = e.length, n = [], r = 0; r < t; r++)
                      n[r >>> 2] |=
                        (255 & e.charCodeAt(r)) << (24 - (r % 4) * 8);
                    return new c.init(n, t);
                  },
                }),
                h = (l.Utf8 = {
                  stringify: function (e) {
                    try {
                      return decodeURIComponent(escape(f.stringify(e)));
                    } catch (e) {
                      throw new Error('Malformed UTF-8 data');
                    }
                  },
                  parse: function (e) {
                    return f.parse(unescape(encodeURIComponent(e)));
                  },
                }),
                d = (_.BufferedBlockAlgorithm = s.extend({
                  reset: function () {
                    (this._data = new c.init()), (this._nDataBytes = 0);
                  },
                  _append: function (e) {
                    'string' == typeof e && (e = h.parse(e)),
                      this._data.concat(e),
                      (this._nDataBytes += e.sigBytes);
                  },
                  _process: function (t) {
                    var n,
                      r = this._data,
                      i = r.words,
                      a = r.sigBytes,
                      o = this.blockSize,
                      _ = a / (4 * o),
                      s =
                        (_ = t
                          ? e.ceil(_)
                          : e.max((0 | _) - this._minBufferSize, 0)) * o,
                      l = e.min(4 * s, a);
                    if (s) {
                      for (var u = 0; u < s; u += o) this._doProcessBlock(i, u);
                      (n = i.splice(0, s)), (r.sigBytes -= l);
                    }
                    return new c.init(n, l);
                  },
                  clone: function () {
                    var e = s.clone.call(this);
                    return (e._data = this._data.clone()), e;
                  },
                  _minBufferSize: 0,
                })),
                p =
                  ((_.Hasher = d.extend({
                    cfg: s.extend(),
                    init: function (e) {
                      (this.cfg = this.cfg.extend(e)), this.reset();
                    },
                    reset: function () {
                      d.reset.call(this), this._doReset();
                    },
                    update: function (e) {
                      return this._append(e), this._process(), this;
                    },
                    finalize: function (e) {
                      return e && this._append(e), this._doFinalize();
                    },
                    blockSize: 16,
                    _createHelper: function (e) {
                      return function (t, n) {
                        return new e.init(n).finalize(t);
                      };
                    },
                    _createHmacHelper: function (e) {
                      return function (t, n) {
                        return new p.HMAC.init(e, n).finalize(t);
                      };
                    },
                  })),
                  (o.algo = {}));
              return o;
            })(Math)),
          r);
      },
      754: function (e, t, n) {
        var r;
        e.exports =
          ((r = n(21)),
          (function () {
            var e = r,
              t = e.lib.WordArray;
            function n(e, n, r) {
              for (var i = [], a = 0, o = 0; o < n; o++)
                if (o % 4) {
                  var _ =
                    (r[e.charCodeAt(o - 1)] << ((o % 4) * 2)) |
                    (r[e.charCodeAt(o)] >>> (6 - (o % 4) * 2));
                  (i[a >>> 2] |= _ << (24 - (a % 4) * 8)), a++;
                }
              return t.create(i, a);
            }
            e.enc.Base64 = {
              stringify: function (e) {
                var t = e.words,
                  n = e.sigBytes,
                  r = this._map;
                e.clamp();
                for (var i = [], a = 0; a < n; a += 3)
                  for (
                    var o =
                        (((t[a >>> 2] >>> (24 - (a % 4) * 8)) & 255) << 16) |
                        (((t[(a + 1) >>> 2] >>> (24 - ((a + 1) % 4) * 8)) &
                          255) <<
                          8) |
                        ((t[(a + 2) >>> 2] >>> (24 - ((a + 2) % 4) * 8)) & 255),
                      _ = 0;
                    _ < 4 && a + 0.75 * _ < n;
                    _++
                  )
                    i.push(r.charAt((o >>> (6 * (3 - _))) & 63));
                var s = r.charAt(64);
                if (s) for (; i.length % 4; ) i.push(s);
                return i.join('');
              },
              parse: function (e) {
                var t = e.length,
                  r = this._map,
                  i = this._reverseMap;
                if (!i) {
                  i = this._reverseMap = [];
                  for (var a = 0; a < r.length; a++) i[r.charCodeAt(a)] = a;
                }
                var o = r.charAt(64);
                if (o) {
                  var _ = e.indexOf(o);
                  -1 !== _ && (t = _);
                }
                return n(e, t, i);
              },
              _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',
            };
          })(),
          r.enc.Base64);
      },
      725: function (e, t, n) {
        var r;
        e.exports =
          ((r = n(21)),
          (function () {
            var e = r,
              t = e.lib.WordArray;
            function n(e, n, r) {
              for (var i = [], a = 0, o = 0; o < n; o++)
                if (o % 4) {
                  var _ =
                    (r[e.charCodeAt(o - 1)] << ((o % 4) * 2)) |
                    (r[e.charCodeAt(o)] >>> (6 - (o % 4) * 2));
                  (i[a >>> 2] |= _ << (24 - (a % 4) * 8)), a++;
                }
              return t.create(i, a);
            }
            e.enc.Base64url = {
              stringify: function (e, t) {
                void 0 === t && (t = !0);
                var n = e.words,
                  r = e.sigBytes,
                  i = t ? this._safe_map : this._map;
                e.clamp();
                for (var a = [], o = 0; o < r; o += 3)
                  for (
                    var _ =
                        (((n[o >>> 2] >>> (24 - (o % 4) * 8)) & 255) << 16) |
                        (((n[(o + 1) >>> 2] >>> (24 - ((o + 1) % 4) * 8)) &
                          255) <<
                          8) |
                        ((n[(o + 2) >>> 2] >>> (24 - ((o + 2) % 4) * 8)) & 255),
                      s = 0;
                    s < 4 && o + 0.75 * s < r;
                    s++
                  )
                    a.push(i.charAt((_ >>> (6 * (3 - s))) & 63));
                var c = i.charAt(64);
                if (c) for (; a.length % 4; ) a.push(c);
                return a.join('');
              },
              parse: function (e, t) {
                void 0 === t && (t = !0);
                var r = e.length,
                  i = t ? this._safe_map : this._map,
                  a = this._reverseMap;
                if (!a) {
                  a = this._reverseMap = [];
                  for (var o = 0; o < i.length; o++) a[i.charCodeAt(o)] = o;
                }
                var _ = i.charAt(64);
                if (_) {
                  var s = e.indexOf(_);
                  -1 !== s && (r = s);
                }
                return n(e, r, a);
              },
              _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',
              _safe_map:
                'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',
            };
          })(),
          r.enc.Base64url);
      },
      503: function (e, t, n) {
        var r;
        e.exports =
          ((r = n(21)),
          (function () {
            var e = r,
              t = e.lib.WordArray,
              n = e.enc;
            function i(e) {
              return ((e << 8) & 4278255360) | ((e >>> 8) & 16711935);
            }
            (n.Utf16 = n.Utf16BE =
              {
                stringify: function (e) {
                  for (
                    var t = e.words, n = e.sigBytes, r = [], i = 0;
                    i < n;
                    i += 2
                  ) {
                    var a = (t[i >>> 2] >>> (16 - (i % 4) * 8)) & 65535;
                    r.push(String.fromCharCode(a));
                  }
                  return r.join('');
                },
                parse: function (e) {
                  for (var n = e.length, r = [], i = 0; i < n; i++)
                    r[i >>> 1] |= e.charCodeAt(i) << (16 - (i % 2) * 16);
                  return t.create(r, 2 * n);
                },
              }),
              (n.Utf16LE = {
                stringify: function (e) {
                  for (
                    var t = e.words, n = e.sigBytes, r = [], a = 0;
                    a < n;
                    a += 2
                  ) {
                    var o = i((t[a >>> 2] >>> (16 - (a % 4) * 8)) & 65535);
                    r.push(String.fromCharCode(o));
                  }
                  return r.join('');
                },
                parse: function (e) {
                  for (var n = e.length, r = [], a = 0; a < n; a++)
                    r[a >>> 1] |= i(e.charCodeAt(a) << (16 - (a % 2) * 16));
                  return t.create(r, 2 * n);
                },
              });
          })(),
          r.enc.Utf16);
      },
      506: function (e, t, n) {
        var r, i, a, o, _, s, c, l;
        e.exports =
          ((l = n(21)),
          n(471),
          n(25),
          (i = (r = l).lib),
          (a = i.Base),
          (o = i.WordArray),
          (_ = r.algo),
          (s = _.MD5),
          (c = _.EvpKDF =
            a.extend({
              cfg: a.extend({ keySize: 4, hasher: s, iterations: 1 }),
              init: function (e) {
                this.cfg = this.cfg.extend(e);
              },
              compute: function (e, t) {
                for (
                  var n,
                    r = this.cfg,
                    i = r.hasher.create(),
                    a = o.create(),
                    _ = a.words,
                    s = r.keySize,
                    c = r.iterations;
                  _.length < s;

                ) {
                  n && i.update(n), (n = i.update(e).finalize(t)), i.reset();
                  for (var l = 1; l < c; l++) (n = i.finalize(n)), i.reset();
                  a.concat(n);
                }
                return (a.sigBytes = 4 * s), a;
              },
            })),
          (r.EvpKDF = function (e, t, n) {
            return c.create(n).compute(e, t);
          }),
          l.EvpKDF);
      },
      406: function (e, t, n) {
        var r, i, a, o;
        e.exports =
          ((o = n(21)),
          n(165),
          (i = (r = o).lib.CipherParams),
          (a = r.enc.Hex),
          (r.format.Hex = {
            stringify: function (e) {
              return e.ciphertext.toString(a);
            },
            parse: function (e) {
              var t = a.parse(e);
              return i.create({ ciphertext: t });
            },
          }),
          o.format.Hex);
      },
      25: function (e, t, n) {
        var r, i, a, o;
        e.exports =
          ((r = n(21)),
          (a = (i = r).lib.Base),
          (o = i.enc.Utf8),
          void (i.algo.HMAC = a.extend({
            init: function (e, t) {
              (e = this._hasher = new e.init()),
                'string' == typeof t && (t = o.parse(t));
              var n = e.blockSize,
                r = 4 * n;
              t.sigBytes > r && (t = e.finalize(t)), t.clamp();
              for (
                var i = (this._oKey = t.clone()),
                  a = (this._iKey = t.clone()),
                  _ = i.words,
                  s = a.words,
                  c = 0;
                c < n;
                c++
              )
                (_[c] ^= 1549556828), (s[c] ^= 909522486);
              (i.sigBytes = a.sigBytes = r), this.reset();
            },
            reset: function () {
              var e = this._hasher;
              e.reset(), e.update(this._iKey);
            },
            update: function (e) {
              return this._hasher.update(e), this;
            },
            finalize: function (e) {
              var t = this._hasher,
                n = t.finalize(e);
              return t.reset(), t.finalize(this._oKey.clone().concat(n));
            },
          })));
      },
      396: function (e, t, n) {
        var r;
        e.exports =
          ((r = n(21)),
          n(240),
          n(440),
          n(503),
          n(754),
          n(725),
          n(636),
          n(471),
          n(9),
          n(308),
          n(380),
          n(557),
          n(953),
          n(56),
          n(25),
          n(19),
          n(506),
          n(165),
          n(169),
          n(939),
          n(372),
          n(797),
          n(454),
          n(73),
          n(905),
          n(482),
          n(155),
          n(124),
          n(406),
          n(955),
          n(628),
          n(193),
          n(298),
          n(696),
          n(128),
          r);
      },
      440: function (e, t, n) {
        var r;
        e.exports =
          ((r = n(21)),
          (function () {
            if ('function' == typeof ArrayBuffer) {
              var e = r.lib.WordArray,
                t = e.init,
                n = (e.init = function (e) {
                  if (
                    (e instanceof ArrayBuffer && (e = new Uint8Array(e)),
                    (e instanceof Int8Array ||
                      ('undefined' != typeof Uint8ClampedArray &&
                        e instanceof Uint8ClampedArray) ||
                      e instanceof Int16Array ||
                      e instanceof Uint16Array ||
                      e instanceof Int32Array ||
                      e instanceof Uint32Array ||
                      e instanceof Float32Array ||
                      e instanceof Float64Array) &&
                      (e = new Uint8Array(
                        e.buffer,
                        e.byteOffset,
                        e.byteLength
                      )),
                    e instanceof Uint8Array)
                  ) {
                    for (var n = e.byteLength, r = [], i = 0; i < n; i++)
                      r[i >>> 2] |= e[i] << (24 - (i % 4) * 8);
                    t.call(this, r, n);
                  } else t.apply(this, arguments);
                });
              n.prototype = e;
            }
          })(),
          r.lib.WordArray);
      },
      636: function (e, t, n) {
        var r;
        e.exports =
          ((r = n(21)),
          (function (e) {
            var t = r,
              n = t.lib,
              i = n.WordArray,
              a = n.Hasher,
              o = t.algo,
              _ = [];
            !(function () {
              for (var t = 0; t < 64; t++)
                _[t] = (4294967296 * e.abs(e.sin(t + 1))) | 0;
            })();
            var s = (o.MD5 = a.extend({
              _doReset: function () {
                this._hash = new i.init([
                  1732584193, 4023233417, 2562383102, 271733878,
                ]);
              },
              _doProcessBlock: function (e, t) {
                for (var n = 0; n < 16; n++) {
                  var r = t + n,
                    i = e[r];
                  e[r] =
                    (16711935 & ((i << 8) | (i >>> 24))) |
                    (4278255360 & ((i << 24) | (i >>> 8)));
                }
                var a = this._hash.words,
                  o = e[t + 0],
                  s = e[t + 1],
                  h = e[t + 2],
                  d = e[t + 3],
                  p = e[t + 4],
                  P = e[t + 5],
                  m = e[t + 6],
                  v = e[t + 7],
                  A = e[t + 8],
                  R = e[t + 9],
                  E = e[t + 10],
                  T = e[t + 11],
                  g = e[t + 12],
                  O = e[t + 13],
                  y = e[t + 14],
                  w = e[t + 15],
                  C = a[0],
                  S = a[1],
                  M = a[2],
                  I = a[3];
                (C = c(C, S, M, I, o, 7, _[0])),
                  (I = c(I, C, S, M, s, 12, _[1])),
                  (M = c(M, I, C, S, h, 17, _[2])),
                  (S = c(S, M, I, C, d, 22, _[3])),
                  (C = c(C, S, M, I, p, 7, _[4])),
                  (I = c(I, C, S, M, P, 12, _[5])),
                  (M = c(M, I, C, S, m, 17, _[6])),
                  (S = c(S, M, I, C, v, 22, _[7])),
                  (C = c(C, S, M, I, A, 7, _[8])),
                  (I = c(I, C, S, M, R, 12, _[9])),
                  (M = c(M, I, C, S, E, 17, _[10])),
                  (S = c(S, M, I, C, T, 22, _[11])),
                  (C = c(C, S, M, I, g, 7, _[12])),
                  (I = c(I, C, S, M, O, 12, _[13])),
                  (M = c(M, I, C, S, y, 17, _[14])),
                  (C = l(
                    C,
                    (S = c(S, M, I, C, w, 22, _[15])),
                    M,
                    I,
                    s,
                    5,
                    _[16]
                  )),
                  (I = l(I, C, S, M, m, 9, _[17])),
                  (M = l(M, I, C, S, T, 14, _[18])),
                  (S = l(S, M, I, C, o, 20, _[19])),
                  (C = l(C, S, M, I, P, 5, _[20])),
                  (I = l(I, C, S, M, E, 9, _[21])),
                  (M = l(M, I, C, S, w, 14, _[22])),
                  (S = l(S, M, I, C, p, 20, _[23])),
                  (C = l(C, S, M, I, R, 5, _[24])),
                  (I = l(I, C, S, M, y, 9, _[25])),
                  (M = l(M, I, C, S, d, 14, _[26])),
                  (S = l(S, M, I, C, A, 20, _[27])),
                  (C = l(C, S, M, I, O, 5, _[28])),
                  (I = l(I, C, S, M, h, 9, _[29])),
                  (M = l(M, I, C, S, v, 14, _[30])),
                  (C = u(
                    C,
                    (S = l(S, M, I, C, g, 20, _[31])),
                    M,
                    I,
                    P,
                    4,
                    _[32]
                  )),
                  (I = u(I, C, S, M, A, 11, _[33])),
                  (M = u(M, I, C, S, T, 16, _[34])),
                  (S = u(S, M, I, C, y, 23, _[35])),
                  (C = u(C, S, M, I, s, 4, _[36])),
                  (I = u(I, C, S, M, p, 11, _[37])),
                  (M = u(M, I, C, S, v, 16, _[38])),
                  (S = u(S, M, I, C, E, 23, _[39])),
                  (C = u(C, S, M, I, O, 4, _[40])),
                  (I = u(I, C, S, M, o, 11, _[41])),
                  (M = u(M, I, C, S, d, 16, _[42])),
                  (S = u(S, M, I, C, m, 23, _[43])),
                  (C = u(C, S, M, I, R, 4, _[44])),
                  (I = u(I, C, S, M, g, 11, _[45])),
                  (M = u(M, I, C, S, w, 16, _[46])),
                  (C = f(
                    C,
                    (S = u(S, M, I, C, h, 23, _[47])),
                    M,
                    I,
                    o,
                    6,
                    _[48]
                  )),
                  (I = f(I, C, S, M, v, 10, _[49])),
                  (M = f(M, I, C, S, y, 15, _[50])),
                  (S = f(S, M, I, C, P, 21, _[51])),
                  (C = f(C, S, M, I, g, 6, _[52])),
                  (I = f(I, C, S, M, d, 10, _[53])),
                  (M = f(M, I, C, S, E, 15, _[54])),
                  (S = f(S, M, I, C, s, 21, _[55])),
                  (C = f(C, S, M, I, A, 6, _[56])),
                  (I = f(I, C, S, M, w, 10, _[57])),
                  (M = f(M, I, C, S, m, 15, _[58])),
                  (S = f(S, M, I, C, O, 21, _[59])),
                  (C = f(C, S, M, I, p, 6, _[60])),
                  (I = f(I, C, S, M, T, 10, _[61])),
                  (M = f(M, I, C, S, h, 15, _[62])),
                  (S = f(S, M, I, C, R, 21, _[63])),
                  (a[0] = (a[0] + C) | 0),
                  (a[1] = (a[1] + S) | 0),
                  (a[2] = (a[2] + M) | 0),
                  (a[3] = (a[3] + I) | 0);
              },
              _doFinalize: function () {
                var t = this._data,
                  n = t.words,
                  r = 8 * this._nDataBytes,
                  i = 8 * t.sigBytes;
                n[i >>> 5] |= 128 << (24 - (i % 32));
                var a = e.floor(r / 4294967296),
                  o = r;
                (n[15 + (((i + 64) >>> 9) << 4)] =
                  (16711935 & ((a << 8) | (a >>> 24))) |
                  (4278255360 & ((a << 24) | (a >>> 8)))),
                  (n[14 + (((i + 64) >>> 9) << 4)] =
                    (16711935 & ((o << 8) | (o >>> 24))) |
                    (4278255360 & ((o << 24) | (o >>> 8)))),
                  (t.sigBytes = 4 * (n.length + 1)),
                  this._process();
                for (var _ = this._hash, s = _.words, c = 0; c < 4; c++) {
                  var l = s[c];
                  s[c] =
                    (16711935 & ((l << 8) | (l >>> 24))) |
                    (4278255360 & ((l << 24) | (l >>> 8)));
                }
                return _;
              },
              clone: function () {
                var e = a.clone.call(this);
                return (e._hash = this._hash.clone()), e;
              },
            }));
            function c(e, t, n, r, i, a, o) {
              var _ = e + ((t & n) | (~t & r)) + i + o;
              return ((_ << a) | (_ >>> (32 - a))) + t;
            }
            function l(e, t, n, r, i, a, o) {
              var _ = e + ((t & r) | (n & ~r)) + i + o;
              return ((_ << a) | (_ >>> (32 - a))) + t;
            }
            function u(e, t, n, r, i, a, o) {
              var _ = e + (t ^ n ^ r) + i + o;
              return ((_ << a) | (_ >>> (32 - a))) + t;
            }
            function f(e, t, n, r, i, a, o) {
              var _ = e + (n ^ (t | ~r)) + i + o;
              return ((_ << a) | (_ >>> (32 - a))) + t;
            }
            (t.MD5 = a._createHelper(s)), (t.HmacMD5 = a._createHmacHelper(s));
          })(Math),
          r.MD5);
      },
      169: function (e, t, n) {
        var r;
        e.exports =
          ((r = n(21)),
          n(165),
          (r.mode.CFB = (function () {
            var e = r.lib.BlockCipherMode.extend();
            function t(e, t, n, r) {
              var i,
                a = this._iv;
              a
                ? ((i = a.slice(0)), (this._iv = void 0))
                : (i = this._prevBlock),
                r.encryptBlock(i, 0);
              for (var o = 0; o < n; o++) e[t + o] ^= i[o];
            }
            return (
              (e.Encryptor = e.extend({
                processBlock: function (e, n) {
                  var r = this._cipher,
                    i = r.blockSize;
                  t.call(this, e, n, i, r),
                    (this._prevBlock = e.slice(n, n + i));
                },
              })),
              (e.Decryptor = e.extend({
                processBlock: function (e, n) {
                  var r = this._cipher,
                    i = r.blockSize,
                    a = e.slice(n, n + i);
                  t.call(this, e, n, i, r), (this._prevBlock = a);
                },
              })),
              e
            );
          })()),
          r.mode.CFB);
      },
      372: function (e, t, n) {
        var r;
        e.exports =
          ((r = n(21)),
          n(165),
          /** @preserve
           * Counter block mode compatible with  Dr Brian Gladman fileenc.c
           * derived from CryptoJS.mode.CTR
           * Jan Hruby jhruby.web@gmail.com
           */
          (r.mode.CTRGladman = (function () {
            var e = r.lib.BlockCipherMode.extend();
            function t(e) {
              if (255 & ~(e >> 24)) e += 1 << 24;
              else {
                var t = (e >> 16) & 255,
                  n = (e >> 8) & 255,
                  r = 255 & e;
                255 === t
                  ? ((t = 0),
                    255 === n ? ((n = 0), 255 === r ? (r = 0) : ++r) : ++n)
                  : ++t,
                  (e = 0),
                  (e += t << 16),
                  (e += n << 8),
                  (e += r);
              }
              return e;
            }
            function n(e) {
              return 0 === (e[0] = t(e[0])) && (e[1] = t(e[1])), e;
            }
            var i = (e.Encryptor = e.extend({
              processBlock: function (e, t) {
                var r = this._cipher,
                  i = r.blockSize,
                  a = this._iv,
                  o = this._counter;
                a && ((o = this._counter = a.slice(0)), (this._iv = void 0)),
                  n(o);
                var _ = o.slice(0);
                r.encryptBlock(_, 0);
                for (var s = 0; s < i; s++) e[t + s] ^= _[s];
              },
            }));
            return (e.Decryptor = i), e;
          })()),
          r.mode.CTRGladman);
      },
      939: function (e, t, n) {
        var r, i, a;
        e.exports =
          ((a = n(21)),
          n(165),
          (a.mode.CTR =
            ((r = a.lib.BlockCipherMode.extend()),
            (i = r.Encryptor =
              r.extend({
                processBlock: function (e, t) {
                  var n = this._cipher,
                    r = n.blockSize,
                    i = this._iv,
                    a = this._counter;
                  i && ((a = this._counter = i.slice(0)), (this._iv = void 0));
                  var o = a.slice(0);
                  n.encryptBlock(o, 0), (a[r - 1] = (a[r - 1] + 1) | 0);
                  for (var _ = 0; _ < r; _++) e[t + _] ^= o[_];
                },
              })),
            (r.Decryptor = i),
            r)),
          a.mode.CTR);
      },
      454: function (e, t, n) {
        var r, i;
        e.exports =
          ((i = n(21)),
          n(165),
          (i.mode.ECB =
            (((r = i.lib.BlockCipherMode.extend()).Encryptor = r.extend({
              processBlock: function (e, t) {
                this._cipher.encryptBlock(e, t);
              },
            })),
            (r.Decryptor = r.extend({
              processBlock: function (e, t) {
                this._cipher.decryptBlock(e, t);
              },
            })),
            r)),
          i.mode.ECB);
      },
      797: function (e, t, n) {
        var r, i, a;
        e.exports =
          ((a = n(21)),
          n(165),
          (a.mode.OFB =
            ((r = a.lib.BlockCipherMode.extend()),
            (i = r.Encryptor =
              r.extend({
                processBlock: function (e, t) {
                  var n = this._cipher,
                    r = n.blockSize,
                    i = this._iv,
                    a = this._keystream;
                  i &&
                    ((a = this._keystream = i.slice(0)), (this._iv = void 0)),
                    n.encryptBlock(a, 0);
                  for (var o = 0; o < r; o++) e[t + o] ^= a[o];
                },
              })),
            (r.Decryptor = i),
            r)),
          a.mode.OFB);
      },
      73: function (e, t, n) {
        var r;
        e.exports =
          ((r = n(21)),
          n(165),
          (r.pad.AnsiX923 = {
            pad: function (e, t) {
              var n = e.sigBytes,
                r = 4 * t,
                i = r - (n % r),
                a = n + i - 1;
              e.clamp(),
                (e.words[a >>> 2] |= i << (24 - (a % 4) * 8)),
                (e.sigBytes += i);
            },
            unpad: function (e) {
              var t = 255 & e.words[(e.sigBytes - 1) >>> 2];
              e.sigBytes -= t;
            },
          }),
          r.pad.Ansix923);
      },
      905: function (e, t, n) {
        var r;
        e.exports =
          ((r = n(21)),
          n(165),
          (r.pad.Iso10126 = {
            pad: function (e, t) {
              var n = 4 * t,
                i = n - (e.sigBytes % n);
              e.concat(r.lib.WordArray.random(i - 1)).concat(
                r.lib.WordArray.create([i << 24], 1)
              );
            },
            unpad: function (e) {
              var t = 255 & e.words[(e.sigBytes - 1) >>> 2];
              e.sigBytes -= t;
            },
          }),
          r.pad.Iso10126);
      },
      482: function (e, t, n) {
        var r;
        e.exports =
          ((r = n(21)),
          n(165),
          (r.pad.Iso97971 = {
            pad: function (e, t) {
              e.concat(r.lib.WordArray.create([2147483648], 1)),
                r.pad.ZeroPadding.pad(e, t);
            },
            unpad: function (e) {
              r.pad.ZeroPadding.unpad(e), e.sigBytes--;
            },
          }),
          r.pad.Iso97971);
      },
      124: function (e, t, n) {
        var r;
        e.exports =
          ((r = n(21)),
          n(165),
          (r.pad.NoPadding = { pad: function () {}, unpad: function () {} }),
          r.pad.NoPadding);
      },
      155: function (e, t, n) {
        var r;
        e.exports =
          ((r = n(21)),
          n(165),
          (r.pad.ZeroPadding = {
            pad: function (e, t) {
              var n = 4 * t;
              e.clamp(), (e.sigBytes += n - (e.sigBytes % n || n));
            },
            unpad: function (e) {
              var t = e.words,
                n = e.sigBytes - 1;
              for (n = e.sigBytes - 1; n >= 0; n--)
                if ((t[n >>> 2] >>> (24 - (n % 4) * 8)) & 255) {
                  e.sigBytes = n + 1;
                  break;
                }
            },
          }),
          r.pad.ZeroPadding);
      },
      19: function (e, t, n) {
        var r, i, a, o, _, s, c, l, u;
        e.exports =
          ((u = n(21)),
          n(9),
          n(25),
          (i = (r = u).lib),
          (a = i.Base),
          (o = i.WordArray),
          (_ = r.algo),
          (s = _.SHA256),
          (c = _.HMAC),
          (l = _.PBKDF2 =
            a.extend({
              cfg: a.extend({ keySize: 4, hasher: s, iterations: 25e4 }),
              init: function (e) {
                this.cfg = this.cfg.extend(e);
              },
              compute: function (e, t) {
                for (
                  var n = this.cfg,
                    r = c.create(n.hasher, e),
                    i = o.create(),
                    a = o.create([1]),
                    _ = i.words,
                    s = a.words,
                    l = n.keySize,
                    u = n.iterations;
                  _.length < l;

                ) {
                  var f = r.update(t).finalize(a);
                  r.reset();
                  for (
                    var h = f.words, d = h.length, p = f, P = 1;
                    P < u;
                    P++
                  ) {
                    (p = r.finalize(p)), r.reset();
                    for (var m = p.words, v = 0; v < d; v++) h[v] ^= m[v];
                  }
                  i.concat(f), s[0]++;
                }
                return (i.sigBytes = 4 * l), i;
              },
            })),
          (r.PBKDF2 = function (e, t, n) {
            return l.create(n).compute(e, t);
          }),
          u.PBKDF2);
      },
      696: function (e, t, n) {
        var r;
        e.exports =
          ((r = n(21)),
          n(754),
          n(636),
          n(506),
          n(165),
          (function () {
            var e = r,
              t = e.lib.StreamCipher,
              n = e.algo,
              i = [],
              a = [],
              o = [],
              _ = (n.RabbitLegacy = t.extend({
                _doReset: function () {
                  var e = this._key.words,
                    t = this.cfg.iv,
                    n = (this._X = [
                      e[0],
                      (e[3] << 16) | (e[2] >>> 16),
                      e[1],
                      (e[0] << 16) | (e[3] >>> 16),
                      e[2],
                      (e[1] << 16) | (e[0] >>> 16),
                      e[3],
                      (e[2] << 16) | (e[1] >>> 16),
                    ]),
                    r = (this._C = [
                      (e[2] << 16) | (e[2] >>> 16),
                      (4294901760 & e[0]) | (65535 & e[1]),
                      (e[3] << 16) | (e[3] >>> 16),
                      (4294901760 & e[1]) | (65535 & e[2]),
                      (e[0] << 16) | (e[0] >>> 16),
                      (4294901760 & e[2]) | (65535 & e[3]),
                      (e[1] << 16) | (e[1] >>> 16),
                      (4294901760 & e[3]) | (65535 & e[0]),
                    ]);
                  this._b = 0;
                  for (var i = 0; i < 4; i++) s.call(this);
                  for (i = 0; i < 8; i++) r[i] ^= n[(i + 4) & 7];
                  if (t) {
                    var a = t.words,
                      o = a[0],
                      _ = a[1],
                      c =
                        (16711935 & ((o << 8) | (o >>> 24))) |
                        (4278255360 & ((o << 24) | (o >>> 8))),
                      l =
                        (16711935 & ((_ << 8) | (_ >>> 24))) |
                        (4278255360 & ((_ << 24) | (_ >>> 8))),
                      u = (c >>> 16) | (4294901760 & l),
                      f = (l << 16) | (65535 & c);
                    for (
                      r[0] ^= c,
                        r[1] ^= u,
                        r[2] ^= l,
                        r[3] ^= f,
                        r[4] ^= c,
                        r[5] ^= u,
                        r[6] ^= l,
                        r[7] ^= f,
                        i = 0;
                      i < 4;
                      i++
                    )
                      s.call(this);
                  }
                },
                _doProcessBlock: function (e, t) {
                  var n = this._X;
                  s.call(this),
                    (i[0] = n[0] ^ (n[5] >>> 16) ^ (n[3] << 16)),
                    (i[1] = n[2] ^ (n[7] >>> 16) ^ (n[5] << 16)),
                    (i[2] = n[4] ^ (n[1] >>> 16) ^ (n[7] << 16)),
                    (i[3] = n[6] ^ (n[3] >>> 16) ^ (n[1] << 16));
                  for (var r = 0; r < 4; r++)
                    (i[r] =
                      (16711935 & ((i[r] << 8) | (i[r] >>> 24))) |
                      (4278255360 & ((i[r] << 24) | (i[r] >>> 8)))),
                      (e[t + r] ^= i[r]);
                },
                blockSize: 4,
                ivSize: 2,
              }));
            function s() {
              for (var e = this._X, t = this._C, n = 0; n < 8; n++) a[n] = t[n];
              for (
                t[0] = (t[0] + 1295307597 + this._b) | 0,
                  t[1] =
                    (t[1] + 3545052371 + (t[0] >>> 0 < a[0] >>> 0 ? 1 : 0)) | 0,
                  t[2] =
                    (t[2] + 886263092 + (t[1] >>> 0 < a[1] >>> 0 ? 1 : 0)) | 0,
                  t[3] =
                    (t[3] + 1295307597 + (t[2] >>> 0 < a[2] >>> 0 ? 1 : 0)) | 0,
                  t[4] =
                    (t[4] + 3545052371 + (t[3] >>> 0 < a[3] >>> 0 ? 1 : 0)) | 0,
                  t[5] =
                    (t[5] + 886263092 + (t[4] >>> 0 < a[4] >>> 0 ? 1 : 0)) | 0,
                  t[6] =
                    (t[6] + 1295307597 + (t[5] >>> 0 < a[5] >>> 0 ? 1 : 0)) | 0,
                  t[7] =
                    (t[7] + 3545052371 + (t[6] >>> 0 < a[6] >>> 0 ? 1 : 0)) | 0,
                  this._b = t[7] >>> 0 < a[7] >>> 0 ? 1 : 0,
                  n = 0;
                n < 8;
                n++
              ) {
                var r = e[n] + t[n],
                  i = 65535 & r,
                  _ = r >>> 16,
                  s = ((((i * i) >>> 17) + i * _) >>> 15) + _ * _,
                  c = (((4294901760 & r) * r) | 0) + (((65535 & r) * r) | 0);
                o[n] = s ^ c;
              }
              (e[0] =
                (o[0] +
                  ((o[7] << 16) | (o[7] >>> 16)) +
                  ((o[6] << 16) | (o[6] >>> 16))) |
                0),
                (e[1] = (o[1] + ((o[0] << 8) | (o[0] >>> 24)) + o[7]) | 0),
                (e[2] =
                  (o[2] +
                    ((o[1] << 16) | (o[1] >>> 16)) +
                    ((o[0] << 16) | (o[0] >>> 16))) |
                  0),
                (e[3] = (o[3] + ((o[2] << 8) | (o[2] >>> 24)) + o[1]) | 0),
                (e[4] =
                  (o[4] +
                    ((o[3] << 16) | (o[3] >>> 16)) +
                    ((o[2] << 16) | (o[2] >>> 16))) |
                  0),
                (e[5] = (o[5] + ((o[4] << 8) | (o[4] >>> 24)) + o[3]) | 0),
                (e[6] =
                  (o[6] +
                    ((o[5] << 16) | (o[5] >>> 16)) +
                    ((o[4] << 16) | (o[4] >>> 16))) |
                  0),
                (e[7] = (o[7] + ((o[6] << 8) | (o[6] >>> 24)) + o[5]) | 0);
            }
            e.RabbitLegacy = t._createHelper(_);
          })(),
          r.RabbitLegacy);
      },
      298: function (e, t, n) {
        var r;
        e.exports =
          ((r = n(21)),
          n(754),
          n(636),
          n(506),
          n(165),
          (function () {
            var e = r,
              t = e.lib.StreamCipher,
              n = e.algo,
              i = [],
              a = [],
              o = [],
              _ = (n.Rabbit = t.extend({
                _doReset: function () {
                  for (
                    var e = this._key.words, t = this.cfg.iv, n = 0;
                    n < 4;
                    n++
                  )
                    e[n] =
                      (16711935 & ((e[n] << 8) | (e[n] >>> 24))) |
                      (4278255360 & ((e[n] << 24) | (e[n] >>> 8)));
                  var r = (this._X = [
                      e[0],
                      (e[3] << 16) | (e[2] >>> 16),
                      e[1],
                      (e[0] << 16) | (e[3] >>> 16),
                      e[2],
                      (e[1] << 16) | (e[0] >>> 16),
                      e[3],
                      (e[2] << 16) | (e[1] >>> 16),
                    ]),
                    i = (this._C = [
                      (e[2] << 16) | (e[2] >>> 16),
                      (4294901760 & e[0]) | (65535 & e[1]),
                      (e[3] << 16) | (e[3] >>> 16),
                      (4294901760 & e[1]) | (65535 & e[2]),
                      (e[0] << 16) | (e[0] >>> 16),
                      (4294901760 & e[2]) | (65535 & e[3]),
                      (e[1] << 16) | (e[1] >>> 16),
                      (4294901760 & e[3]) | (65535 & e[0]),
                    ]);
                  for (this._b = 0, n = 0; n < 4; n++) s.call(this);
                  for (n = 0; n < 8; n++) i[n] ^= r[(n + 4) & 7];
                  if (t) {
                    var a = t.words,
                      o = a[0],
                      _ = a[1],
                      c =
                        (16711935 & ((o << 8) | (o >>> 24))) |
                        (4278255360 & ((o << 24) | (o >>> 8))),
                      l =
                        (16711935 & ((_ << 8) | (_ >>> 24))) |
                        (4278255360 & ((_ << 24) | (_ >>> 8))),
                      u = (c >>> 16) | (4294901760 & l),
                      f = (l << 16) | (65535 & c);
                    for (
                      i[0] ^= c,
                        i[1] ^= u,
                        i[2] ^= l,
                        i[3] ^= f,
                        i[4] ^= c,
                        i[5] ^= u,
                        i[6] ^= l,
                        i[7] ^= f,
                        n = 0;
                      n < 4;
                      n++
                    )
                      s.call(this);
                  }
                },
                _doProcessBlock: function (e, t) {
                  var n = this._X;
                  s.call(this),
                    (i[0] = n[0] ^ (n[5] >>> 16) ^ (n[3] << 16)),
                    (i[1] = n[2] ^ (n[7] >>> 16) ^ (n[5] << 16)),
                    (i[2] = n[4] ^ (n[1] >>> 16) ^ (n[7] << 16)),
                    (i[3] = n[6] ^ (n[3] >>> 16) ^ (n[1] << 16));
                  for (var r = 0; r < 4; r++)
                    (i[r] =
                      (16711935 & ((i[r] << 8) | (i[r] >>> 24))) |
                      (4278255360 & ((i[r] << 24) | (i[r] >>> 8)))),
                      (e[t + r] ^= i[r]);
                },
                blockSize: 4,
                ivSize: 2,
              }));
            function s() {
              for (var e = this._X, t = this._C, n = 0; n < 8; n++) a[n] = t[n];
              for (
                t[0] = (t[0] + 1295307597 + this._b) | 0,
                  t[1] =
                    (t[1] + 3545052371 + (t[0] >>> 0 < a[0] >>> 0 ? 1 : 0)) | 0,
                  t[2] =
                    (t[2] + 886263092 + (t[1] >>> 0 < a[1] >>> 0 ? 1 : 0)) | 0,
                  t[3] =
                    (t[3] + 1295307597 + (t[2] >>> 0 < a[2] >>> 0 ? 1 : 0)) | 0,
                  t[4] =
                    (t[4] + 3545052371 + (t[3] >>> 0 < a[3] >>> 0 ? 1 : 0)) | 0,
                  t[5] =
                    (t[5] + 886263092 + (t[4] >>> 0 < a[4] >>> 0 ? 1 : 0)) | 0,
                  t[6] =
                    (t[6] + 1295307597 + (t[5] >>> 0 < a[5] >>> 0 ? 1 : 0)) | 0,
                  t[7] =
                    (t[7] + 3545052371 + (t[6] >>> 0 < a[6] >>> 0 ? 1 : 0)) | 0,
                  this._b = t[7] >>> 0 < a[7] >>> 0 ? 1 : 0,
                  n = 0;
                n < 8;
                n++
              ) {
                var r = e[n] + t[n],
                  i = 65535 & r,
                  _ = r >>> 16,
                  s = ((((i * i) >>> 17) + i * _) >>> 15) + _ * _,
                  c = (((4294901760 & r) * r) | 0) + (((65535 & r) * r) | 0);
                o[n] = s ^ c;
              }
              (e[0] =
                (o[0] +
                  ((o[7] << 16) | (o[7] >>> 16)) +
                  ((o[6] << 16) | (o[6] >>> 16))) |
                0),
                (e[1] = (o[1] + ((o[0] << 8) | (o[0] >>> 24)) + o[7]) | 0),
                (e[2] =
                  (o[2] +
                    ((o[1] << 16) | (o[1] >>> 16)) +
                    ((o[0] << 16) | (o[0] >>> 16))) |
                  0),
                (e[3] = (o[3] + ((o[2] << 8) | (o[2] >>> 24)) + o[1]) | 0),
                (e[4] =
                  (o[4] +
                    ((o[3] << 16) | (o[3] >>> 16)) +
                    ((o[2] << 16) | (o[2] >>> 16))) |
                  0),
                (e[5] = (o[5] + ((o[4] << 8) | (o[4] >>> 24)) + o[3]) | 0),
                (e[6] =
                  (o[6] +
                    ((o[5] << 16) | (o[5] >>> 16)) +
                    ((o[4] << 16) | (o[4] >>> 16))) |
                  0),
                (e[7] = (o[7] + ((o[6] << 8) | (o[6] >>> 24)) + o[5]) | 0);
            }
            e.Rabbit = t._createHelper(_);
          })(),
          r.Rabbit);
      },
      193: function (e, t, n) {
        var r;
        e.exports =
          ((r = n(21)),
          n(754),
          n(636),
          n(506),
          n(165),
          (function () {
            var e = r,
              t = e.lib.StreamCipher,
              n = e.algo,
              i = (n.RC4 = t.extend({
                _doReset: function () {
                  for (
                    var e = this._key,
                      t = e.words,
                      n = e.sigBytes,
                      r = (this._S = []),
                      i = 0;
                    i < 256;
                    i++
                  )
                    r[i] = i;
                  i = 0;
                  for (var a = 0; i < 256; i++) {
                    var o = i % n,
                      _ = (t[o >>> 2] >>> (24 - (o % 4) * 8)) & 255;
                    a = (a + r[i] + _) % 256;
                    var s = r[i];
                    (r[i] = r[a]), (r[a] = s);
                  }
                  this._i = this._j = 0;
                },
                _doProcessBlock: function (e, t) {
                  e[t] ^= a.call(this);
                },
                keySize: 8,
                ivSize: 0,
              }));
            function a() {
              for (
                var e = this._S, t = this._i, n = this._j, r = 0, i = 0;
                i < 4;
                i++
              ) {
                n = (n + e[(t = (t + 1) % 256)]) % 256;
                var a = e[t];
                (e[t] = e[n]),
                  (e[n] = a),
                  (r |= e[(e[t] + e[n]) % 256] << (24 - 8 * i));
              }
              return (this._i = t), (this._j = n), r;
            }
            e.RC4 = t._createHelper(i);
            var o = (n.RC4Drop = i.extend({
              cfg: i.cfg.extend({ drop: 192 }),
              _doReset: function () {
                i._doReset.call(this);
                for (var e = this.cfg.drop; e > 0; e--) a.call(this);
              },
            }));
            e.RC4Drop = t._createHelper(o);
          })(),
          r.RC4);
      },
      56: function (e, t, n) {
        var r;
        e.exports =
          ((r = n(21)),
          /** @preserve
	(c) 2012 by Cédric Mesnil. All rights reserved.

	Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

	    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
	    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.

	THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	*/
          (function (e) {
            var t = r,
              n = t.lib,
              i = n.WordArray,
              a = n.Hasher,
              o = t.algo,
              _ = i.create([
                0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13,
                1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15,
                8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13,
                3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8,
                11, 6, 15, 13,
              ]),
              s = i.create([
                5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3,
                7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14,
                6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5,
                12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13,
                14, 0, 3, 9, 11,
              ]),
              c = i.create([
                11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8,
                13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14,
                9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9,
                8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12,
                13, 14, 11, 8, 5, 6,
              ]),
              l = i.create([
                8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13,
                15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11,
                8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14,
                6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8,
                13, 6, 5, 15, 13, 11, 11,
              ]),
              u = i.create([0, 1518500249, 1859775393, 2400959708, 2840853838]),
              f = i.create([1352829926, 1548603684, 1836072691, 2053994217, 0]),
              h = (o.RIPEMD160 = a.extend({
                _doReset: function () {
                  this._hash = i.create([
                    1732584193, 4023233417, 2562383102, 271733878, 3285377520,
                  ]);
                },
                _doProcessBlock: function (e, t) {
                  for (var n = 0; n < 16; n++) {
                    var r = t + n,
                      i = e[r];
                    e[r] =
                      (16711935 & ((i << 8) | (i >>> 24))) |
                      (4278255360 & ((i << 24) | (i >>> 8)));
                  }
                  var a,
                    o,
                    h,
                    R,
                    E,
                    T,
                    g,
                    O,
                    y,
                    w,
                    C,
                    S = this._hash.words,
                    M = u.words,
                    I = f.words,
                    x = _.words,
                    D = s.words,
                    N = c.words,
                    k = l.words;
                  for (
                    T = a = S[0],
                      g = o = S[1],
                      O = h = S[2],
                      y = R = S[3],
                      w = E = S[4],
                      n = 0;
                    n < 80;
                    n += 1
                  )
                    (C = (a + e[t + x[n]]) | 0),
                      (C +=
                        n < 16
                          ? d(o, h, R) + M[0]
                          : n < 32
                          ? p(o, h, R) + M[1]
                          : n < 48
                          ? P(o, h, R) + M[2]
                          : n < 64
                          ? m(o, h, R) + M[3]
                          : v(o, h, R) + M[4]),
                      (C = ((C = A((C |= 0), N[n])) + E) | 0),
                      (a = E),
                      (E = R),
                      (R = A(h, 10)),
                      (h = o),
                      (o = C),
                      (C = (T + e[t + D[n]]) | 0),
                      (C +=
                        n < 16
                          ? v(g, O, y) + I[0]
                          : n < 32
                          ? m(g, O, y) + I[1]
                          : n < 48
                          ? P(g, O, y) + I[2]
                          : n < 64
                          ? p(g, O, y) + I[3]
                          : d(g, O, y) + I[4]),
                      (C = ((C = A((C |= 0), k[n])) + w) | 0),
                      (T = w),
                      (w = y),
                      (y = A(O, 10)),
                      (O = g),
                      (g = C);
                  (C = (S[1] + h + y) | 0),
                    (S[1] = (S[2] + R + w) | 0),
                    (S[2] = (S[3] + E + T) | 0),
                    (S[3] = (S[4] + a + g) | 0),
                    (S[4] = (S[0] + o + O) | 0),
                    (S[0] = C);
                },
                _doFinalize: function () {
                  var e = this._data,
                    t = e.words,
                    n = 8 * this._nDataBytes,
                    r = 8 * e.sigBytes;
                  (t[r >>> 5] |= 128 << (24 - (r % 32))),
                    (t[14 + (((r + 64) >>> 9) << 4)] =
                      (16711935 & ((n << 8) | (n >>> 24))) |
                      (4278255360 & ((n << 24) | (n >>> 8)))),
                    (e.sigBytes = 4 * (t.length + 1)),
                    this._process();
                  for (var i = this._hash, a = i.words, o = 0; o < 5; o++) {
                    var _ = a[o];
                    a[o] =
                      (16711935 & ((_ << 8) | (_ >>> 24))) |
                      (4278255360 & ((_ << 24) | (_ >>> 8)));
                  }
                  return i;
                },
                clone: function () {
                  var e = a.clone.call(this);
                  return (e._hash = this._hash.clone()), e;
                },
              }));
            function d(e, t, n) {
              return e ^ t ^ n;
            }
            function p(e, t, n) {
              return (e & t) | (~e & n);
            }
            function P(e, t, n) {
              return (e | ~t) ^ n;
            }
            function m(e, t, n) {
              return (e & n) | (t & ~n);
            }
            function v(e, t, n) {
              return e ^ (t | ~n);
            }
            function A(e, t) {
              return (e << t) | (e >>> (32 - t));
            }
            (t.RIPEMD160 = a._createHelper(h)),
              (t.HmacRIPEMD160 = a._createHmacHelper(h));
          })(Math),
          r.RIPEMD160);
      },
      471: function (e, t, n) {
        var r, i, a, o, _, s, c, l;
        e.exports =
          ((l = n(21)),
          (i = (r = l).lib),
          (a = i.WordArray),
          (o = i.Hasher),
          (_ = r.algo),
          (s = []),
          (c = _.SHA1 =
            o.extend({
              _doReset: function () {
                this._hash = new a.init([
                  1732584193, 4023233417, 2562383102, 271733878, 3285377520,
                ]);
              },
              _doProcessBlock: function (e, t) {
                for (
                  var n = this._hash.words,
                    r = n[0],
                    i = n[1],
                    a = n[2],
                    o = n[3],
                    _ = n[4],
                    c = 0;
                  c < 80;
                  c++
                ) {
                  if (c < 16) s[c] = 0 | e[t + c];
                  else {
                    var l = s[c - 3] ^ s[c - 8] ^ s[c - 14] ^ s[c - 16];
                    s[c] = (l << 1) | (l >>> 31);
                  }
                  var u = ((r << 5) | (r >>> 27)) + _ + s[c];
                  (u +=
                    c < 20
                      ? 1518500249 + ((i & a) | (~i & o))
                      : c < 40
                      ? 1859775393 + (i ^ a ^ o)
                      : c < 60
                      ? ((i & a) | (i & o) | (a & o)) - 1894007588
                      : (i ^ a ^ o) - 899497514),
                    (_ = o),
                    (o = a),
                    (a = (i << 30) | (i >>> 2)),
                    (i = r),
                    (r = u);
                }
                (n[0] = (n[0] + r) | 0),
                  (n[1] = (n[1] + i) | 0),
                  (n[2] = (n[2] + a) | 0),
                  (n[3] = (n[3] + o) | 0),
                  (n[4] = (n[4] + _) | 0);
              },
              _doFinalize: function () {
                var e = this._data,
                  t = e.words,
                  n = 8 * this._nDataBytes,
                  r = 8 * e.sigBytes;
                return (
                  (t[r >>> 5] |= 128 << (24 - (r % 32))),
                  (t[14 + (((r + 64) >>> 9) << 4)] = Math.floor(
                    n / 4294967296
                  )),
                  (t[15 + (((r + 64) >>> 9) << 4)] = n),
                  (e.sigBytes = 4 * t.length),
                  this._process(),
                  this._hash
                );
              },
              clone: function () {
                var e = o.clone.call(this);
                return (e._hash = this._hash.clone()), e;
              },
            })),
          (r.SHA1 = o._createHelper(c)),
          (r.HmacSHA1 = o._createHmacHelper(c)),
          l.SHA1);
      },
      308: function (e, t, n) {
        var r, i, a, o, _, s;
        e.exports =
          ((s = n(21)),
          n(9),
          (i = (r = s).lib.WordArray),
          (a = r.algo),
          (o = a.SHA256),
          (_ = a.SHA224 =
            o.extend({
              _doReset: function () {
                this._hash = new i.init([
                  3238371032, 914150663, 812702999, 4144912697, 4290775857,
                  1750603025, 1694076839, 3204075428,
                ]);
              },
              _doFinalize: function () {
                var e = o._doFinalize.call(this);
                return (e.sigBytes -= 4), e;
              },
            })),
          (r.SHA224 = o._createHelper(_)),
          (r.HmacSHA224 = o._createHmacHelper(_)),
          s.SHA224);
      },
      9: function (e, t, n) {
        var r;
        e.exports =
          ((r = n(21)),
          (function (e) {
            var t = r,
              n = t.lib,
              i = n.WordArray,
              a = n.Hasher,
              o = t.algo,
              _ = [],
              s = [];
            !(function () {
              function t(t) {
                for (var n = e.sqrt(t), r = 2; r <= n; r++)
                  if (!(t % r)) return !1;
                return !0;
              }
              function n(e) {
                return (4294967296 * (e - (0 | e))) | 0;
              }
              for (var r = 2, i = 0; i < 64; )
                t(r) &&
                  (i < 8 && (_[i] = n(e.pow(r, 0.5))),
                  (s[i] = n(e.pow(r, 1 / 3))),
                  i++),
                  r++;
            })();
            var c = [],
              l = (o.SHA256 = a.extend({
                _doReset: function () {
                  this._hash = new i.init(_.slice(0));
                },
                _doProcessBlock: function (e, t) {
                  for (
                    var n = this._hash.words,
                      r = n[0],
                      i = n[1],
                      a = n[2],
                      o = n[3],
                      _ = n[4],
                      l = n[5],
                      u = n[6],
                      f = n[7],
                      h = 0;
                    h < 64;
                    h++
                  ) {
                    if (h < 16) c[h] = 0 | e[t + h];
                    else {
                      var d = c[h - 15],
                        p =
                          ((d << 25) | (d >>> 7)) ^
                          ((d << 14) | (d >>> 18)) ^
                          (d >>> 3),
                        P = c[h - 2],
                        m =
                          ((P << 15) | (P >>> 17)) ^
                          ((P << 13) | (P >>> 19)) ^
                          (P >>> 10);
                      c[h] = p + c[h - 7] + m + c[h - 16];
                    }
                    var v = (r & i) ^ (r & a) ^ (i & a),
                      A =
                        ((r << 30) | (r >>> 2)) ^
                        ((r << 19) | (r >>> 13)) ^
                        ((r << 10) | (r >>> 22)),
                      R =
                        f +
                        (((_ << 26) | (_ >>> 6)) ^
                          ((_ << 21) | (_ >>> 11)) ^
                          ((_ << 7) | (_ >>> 25))) +
                        ((_ & l) ^ (~_ & u)) +
                        s[h] +
                        c[h];
                    (f = u),
                      (u = l),
                      (l = _),
                      (_ = (o + R) | 0),
                      (o = a),
                      (a = i),
                      (i = r),
                      (r = (R + (A + v)) | 0);
                  }
                  (n[0] = (n[0] + r) | 0),
                    (n[1] = (n[1] + i) | 0),
                    (n[2] = (n[2] + a) | 0),
                    (n[3] = (n[3] + o) | 0),
                    (n[4] = (n[4] + _) | 0),
                    (n[5] = (n[5] + l) | 0),
                    (n[6] = (n[6] + u) | 0),
                    (n[7] = (n[7] + f) | 0);
                },
                _doFinalize: function () {
                  var t = this._data,
                    n = t.words,
                    r = 8 * this._nDataBytes,
                    i = 8 * t.sigBytes;
                  return (
                    (n[i >>> 5] |= 128 << (24 - (i % 32))),
                    (n[14 + (((i + 64) >>> 9) << 4)] = e.floor(r / 4294967296)),
                    (n[15 + (((i + 64) >>> 9) << 4)] = r),
                    (t.sigBytes = 4 * n.length),
                    this._process(),
                    this._hash
                  );
                },
                clone: function () {
                  var e = a.clone.call(this);
                  return (e._hash = this._hash.clone()), e;
                },
              }));
            (t.SHA256 = a._createHelper(l)),
              (t.HmacSHA256 = a._createHmacHelper(l));
          })(Math),
          r.SHA256);
      },
      953: function (e, t, n) {
        var r;
        e.exports =
          ((r = n(21)),
          n(240),
          (function (e) {
            var t = r,
              n = t.lib,
              i = n.WordArray,
              a = n.Hasher,
              o = t.x64.Word,
              _ = t.algo,
              s = [],
              c = [],
              l = [];
            !(function () {
              for (var e = 1, t = 0, n = 0; n < 24; n++) {
                s[e + 5 * t] = (((n + 1) * (n + 2)) / 2) % 64;
                var r = (2 * e + 3 * t) % 5;
                (e = t % 5), (t = r);
              }
              for (e = 0; e < 5; e++)
                for (t = 0; t < 5; t++)
                  c[e + 5 * t] = t + ((2 * e + 3 * t) % 5) * 5;
              for (var i = 1, a = 0; a < 24; a++) {
                for (var _ = 0, u = 0, f = 0; f < 7; f++) {
                  if (1 & i) {
                    var h = (1 << f) - 1;
                    h < 32 ? (u ^= 1 << h) : (_ ^= 1 << (h - 32));
                  }
                  128 & i ? (i = (i << 1) ^ 113) : (i <<= 1);
                }
                l[a] = o.create(_, u);
              }
            })();
            var u = [];
            !(function () {
              for (var e = 0; e < 25; e++) u[e] = o.create();
            })();
            var f = (_.SHA3 = a.extend({
              cfg: a.cfg.extend({ outputLength: 512 }),
              _doReset: function () {
                for (var e = (this._state = []), t = 0; t < 25; t++)
                  e[t] = new o.init();
                this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;
              },
              _doProcessBlock: function (e, t) {
                for (
                  var n = this._state, r = this.blockSize / 2, i = 0;
                  i < r;
                  i++
                ) {
                  var a = e[t + 2 * i],
                    o = e[t + 2 * i + 1];
                  (a =
                    (16711935 & ((a << 8) | (a >>> 24))) |
                    (4278255360 & ((a << 24) | (a >>> 8)))),
                    (o =
                      (16711935 & ((o << 8) | (o >>> 24))) |
                      (4278255360 & ((o << 24) | (o >>> 8)))),
                    ((S = n[i]).high ^= o),
                    (S.low ^= a);
                }
                for (var _ = 0; _ < 24; _++) {
                  for (var f = 0; f < 5; f++) {
                    for (var h = 0, d = 0, p = 0; p < 5; p++)
                      (h ^= (S = n[f + 5 * p]).high), (d ^= S.low);
                    var P = u[f];
                    (P.high = h), (P.low = d);
                  }
                  for (f = 0; f < 5; f++) {
                    var m = u[(f + 4) % 5],
                      v = u[(f + 1) % 5],
                      A = v.high,
                      R = v.low;
                    for (
                      h = m.high ^ ((A << 1) | (R >>> 31)),
                        d = m.low ^ ((R << 1) | (A >>> 31)),
                        p = 0;
                      p < 5;
                      p++
                    )
                      ((S = n[f + 5 * p]).high ^= h), (S.low ^= d);
                  }
                  for (var E = 1; E < 25; E++) {
                    var T = (S = n[E]).high,
                      g = S.low,
                      O = s[E];
                    O < 32
                      ? ((h = (T << O) | (g >>> (32 - O))),
                        (d = (g << O) | (T >>> (32 - O))))
                      : ((h = (g << (O - 32)) | (T >>> (64 - O))),
                        (d = (T << (O - 32)) | (g >>> (64 - O))));
                    var y = u[c[E]];
                    (y.high = h), (y.low = d);
                  }
                  var w = u[0],
                    C = n[0];
                  for (w.high = C.high, w.low = C.low, f = 0; f < 5; f++)
                    for (p = 0; p < 5; p++) {
                      var S = n[(E = f + 5 * p)],
                        M = u[E],
                        I = u[((f + 1) % 5) + 5 * p],
                        x = u[((f + 2) % 5) + 5 * p];
                      (S.high = M.high ^ (~I.high & x.high)),
                        (S.low = M.low ^ (~I.low & x.low));
                    }
                  S = n[0];
                  var D = l[_];
                  (S.high ^= D.high), (S.low ^= D.low);
                }
              },
              _doFinalize: function () {
                var t = this._data,
                  n = t.words,
                  r = (this._nDataBytes, 8 * t.sigBytes),
                  a = 32 * this.blockSize;
                (n[r >>> 5] |= 1 << (24 - (r % 32))),
                  (n[((e.ceil((r + 1) / a) * a) >>> 5) - 1] |= 128),
                  (t.sigBytes = 4 * n.length),
                  this._process();
                for (
                  var o = this._state,
                    _ = this.cfg.outputLength / 8,
                    s = _ / 8,
                    c = [],
                    l = 0;
                  l < s;
                  l++
                ) {
                  var u = o[l],
                    f = u.high,
                    h = u.low;
                  (f =
                    (16711935 & ((f << 8) | (f >>> 24))) |
                    (4278255360 & ((f << 24) | (f >>> 8)))),
                    (h =
                      (16711935 & ((h << 8) | (h >>> 24))) |
                      (4278255360 & ((h << 24) | (h >>> 8)))),
                    c.push(h),
                    c.push(f);
                }
                return new i.init(c, _);
              },
              clone: function () {
                for (
                  var e = a.clone.call(this),
                    t = (e._state = this._state.slice(0)),
                    n = 0;
                  n < 25;
                  n++
                )
                  t[n] = t[n].clone();
                return e;
              },
            }));
            (t.SHA3 = a._createHelper(f)),
              (t.HmacSHA3 = a._createHmacHelper(f));
          })(Math),
          r.SHA3);
      },
      557: function (e, t, n) {
        var r, i, a, o, _, s, c, l;
        e.exports =
          ((l = n(21)),
          n(240),
          n(380),
          (i = (r = l).x64),
          (a = i.Word),
          (o = i.WordArray),
          (_ = r.algo),
          (s = _.SHA512),
          (c = _.SHA384 =
            s.extend({
              _doReset: function () {
                this._hash = new o.init([
                  new a.init(3418070365, 3238371032),
                  new a.init(1654270250, 914150663),
                  new a.init(2438529370, 812702999),
                  new a.init(355462360, 4144912697),
                  new a.init(1731405415, 4290775857),
                  new a.init(2394180231, 1750603025),
                  new a.init(3675008525, 1694076839),
                  new a.init(1203062813, 3204075428),
                ]);
              },
              _doFinalize: function () {
                var e = s._doFinalize.call(this);
                return (e.sigBytes -= 16), e;
              },
            })),
          (r.SHA384 = s._createHelper(c)),
          (r.HmacSHA384 = s._createHmacHelper(c)),
          l.SHA384);
      },
      380: function (e, t, n) {
        var r;
        e.exports =
          ((r = n(21)),
          n(240),
          (function () {
            var e = r,
              t = e.lib.Hasher,
              n = e.x64,
              i = n.Word,
              a = n.WordArray,
              o = e.algo;
            function _() {
              return i.create.apply(i, arguments);
            }
            var s = [
                _(1116352408, 3609767458),
                _(1899447441, 602891725),
                _(3049323471, 3964484399),
                _(3921009573, 2173295548),
                _(961987163, 4081628472),
                _(1508970993, 3053834265),
                _(2453635748, 2937671579),
                _(2870763221, 3664609560),
                _(3624381080, 2734883394),
                _(310598401, 1164996542),
                _(607225278, 1323610764),
                _(1426881987, 3590304994),
                _(1925078388, 4068182383),
                _(2162078206, 991336113),
                _(2614888103, 633803317),
                _(3248222580, 3479774868),
                _(3835390401, 2666613458),
                _(4022224774, 944711139),
                _(264347078, 2341262773),
                _(604807628, 2007800933),
                _(770255983, 1495990901),
                _(1249150122, 1856431235),
                _(1555081692, 3175218132),
                _(1996064986, 2198950837),
                _(2554220882, 3999719339),
                _(2821834349, 766784016),
                _(2952996808, 2566594879),
                _(3210313671, 3203337956),
                _(3336571891, 1034457026),
                _(3584528711, 2466948901),
                _(113926993, 3758326383),
                _(338241895, 168717936),
                _(666307205, 1188179964),
                _(773529912, 1546045734),
                _(1294757372, 1522805485),
                _(1396182291, 2643833823),
                _(1695183700, 2343527390),
                _(1986661051, 1014477480),
                _(2177026350, 1206759142),
                _(2456956037, 344077627),
                _(2730485921, 1290863460),
                _(2820302411, 3158454273),
                _(3259730800, 3505952657),
                _(3345764771, 106217008),
                _(3516065817, 3606008344),
                _(3600352804, 1432725776),
                _(4094571909, 1467031594),
                _(275423344, 851169720),
                _(430227734, 3100823752),
                _(506948616, 1363258195),
                _(659060556, 3750685593),
                _(883997877, 3785050280),
                _(958139571, 3318307427),
                _(1322822218, 3812723403),
                _(1537002063, 2003034995),
                _(1747873779, 3602036899),
                _(1955562222, 1575990012),
                _(2024104815, 1125592928),
                _(2227730452, 2716904306),
                _(2361852424, 442776044),
                _(2428436474, 593698344),
                _(2756734187, 3733110249),
                _(3204031479, 2999351573),
                _(3329325298, 3815920427),
                _(3391569614, 3928383900),
                _(3515267271, 566280711),
                _(3940187606, 3454069534),
                _(4118630271, 4000239992),
                _(116418474, 1914138554),
                _(174292421, 2731055270),
                _(289380356, 3203993006),
                _(460393269, 320620315),
                _(685471733, 587496836),
                _(852142971, 1086792851),
                _(1017036298, 365543100),
                _(1126000580, 2618297676),
                _(1288033470, 3409855158),
                _(1501505948, 4234509866),
                _(1607167915, 987167468),
                _(1816402316, 1246189591),
              ],
              c = [];
            !(function () {
              for (var e = 0; e < 80; e++) c[e] = _();
            })();
            var l = (o.SHA512 = t.extend({
              _doReset: function () {
                this._hash = new a.init([
                  new i.init(1779033703, 4089235720),
                  new i.init(3144134277, 2227873595),
                  new i.init(1013904242, 4271175723),
                  new i.init(2773480762, 1595750129),
                  new i.init(1359893119, 2917565137),
                  new i.init(2600822924, 725511199),
                  new i.init(528734635, 4215389547),
                  new i.init(1541459225, 327033209),
                ]);
              },
              _doProcessBlock: function (e, t) {
                for (
                  var n = this._hash.words,
                    r = n[0],
                    i = n[1],
                    a = n[2],
                    o = n[3],
                    _ = n[4],
                    l = n[5],
                    u = n[6],
                    f = n[7],
                    h = r.high,
                    d = r.low,
                    p = i.high,
                    P = i.low,
                    m = a.high,
                    v = a.low,
                    A = o.high,
                    R = o.low,
                    E = _.high,
                    T = _.low,
                    g = l.high,
                    O = l.low,
                    y = u.high,
                    w = u.low,
                    C = f.high,
                    S = f.low,
                    M = h,
                    I = d,
                    x = p,
                    D = P,
                    N = m,
                    k = v,
                    b = A,
                    L = R,
                    B = E,
                    U = T,
                    F = g,
                    H = O,
                    Y = y,
                    V = w,
                    X = C,
                    K = S,
                    z = 0;
                  z < 80;
                  z++
                ) {
                  var G,
                    q,
                    W = c[z];
                  if (z < 16)
                    (q = W.high = 0 | e[t + 2 * z]),
                      (G = W.low = 0 | e[t + 2 * z + 1]);
                  else {
                    var Q = c[z - 15],
                      j = Q.high,
                      Z = Q.low,
                      J =
                        ((j >>> 1) | (Z << 31)) ^
                        ((j >>> 8) | (Z << 24)) ^
                        (j >>> 7),
                      $ =
                        ((Z >>> 1) | (j << 31)) ^
                        ((Z >>> 8) | (j << 24)) ^
                        ((Z >>> 7) | (j << 25)),
                      ee = c[z - 2],
                      te = ee.high,
                      ne = ee.low,
                      re =
                        ((te >>> 19) | (ne << 13)) ^
                        ((te << 3) | (ne >>> 29)) ^
                        (te >>> 6),
                      ie =
                        ((ne >>> 19) | (te << 13)) ^
                        ((ne << 3) | (te >>> 29)) ^
                        ((ne >>> 6) | (te << 26)),
                      ae = c[z - 7],
                      oe = ae.high,
                      _e = ae.low,
                      se = c[z - 16],
                      ce = se.high,
                      le = se.low;
                    (q =
                      (q =
                        (q = J + oe + ((G = $ + _e) >>> 0 < $ >>> 0 ? 1 : 0)) +
                        re +
                        ((G += ie) >>> 0 < ie >>> 0 ? 1 : 0)) +
                      ce +
                      ((G += le) >>> 0 < le >>> 0 ? 1 : 0)),
                      (W.high = q),
                      (W.low = G);
                  }
                  var ue,
                    fe = (B & F) ^ (~B & Y),
                    he = (U & H) ^ (~U & V),
                    de = (M & x) ^ (M & N) ^ (x & N),
                    pe = (I & D) ^ (I & k) ^ (D & k),
                    Pe =
                      ((M >>> 28) | (I << 4)) ^
                      ((M << 30) | (I >>> 2)) ^
                      ((M << 25) | (I >>> 7)),
                    me =
                      ((I >>> 28) | (M << 4)) ^
                      ((I << 30) | (M >>> 2)) ^
                      ((I << 25) | (M >>> 7)),
                    ve =
                      ((B >>> 14) | (U << 18)) ^
                      ((B >>> 18) | (U << 14)) ^
                      ((B << 23) | (U >>> 9)),
                    Ae =
                      ((U >>> 14) | (B << 18)) ^
                      ((U >>> 18) | (B << 14)) ^
                      ((U << 23) | (B >>> 9)),
                    Re = s[z],
                    Ee = Re.high,
                    Te = Re.low,
                    ge = X + ve + ((ue = K + Ae) >>> 0 < K >>> 0 ? 1 : 0),
                    Oe = me + pe;
                  (X = Y),
                    (K = V),
                    (Y = F),
                    (V = H),
                    (F = B),
                    (H = U),
                    (B =
                      (b +
                        (ge =
                          (ge =
                            (ge =
                              ge + fe + ((ue += he) >>> 0 < he >>> 0 ? 1 : 0)) +
                            Ee +
                            ((ue += Te) >>> 0 < Te >>> 0 ? 1 : 0)) +
                          q +
                          ((ue += G) >>> 0 < G >>> 0 ? 1 : 0)) +
                        ((U = (L + ue) | 0) >>> 0 < L >>> 0 ? 1 : 0)) |
                      0),
                    (b = N),
                    (L = k),
                    (N = x),
                    (k = D),
                    (x = M),
                    (D = I),
                    (M =
                      (ge +
                        (Pe + de + (Oe >>> 0 < me >>> 0 ? 1 : 0)) +
                        ((I = (ue + Oe) | 0) >>> 0 < ue >>> 0 ? 1 : 0)) |
                      0);
                }
                (d = r.low = d + I),
                  (r.high = h + M + (d >>> 0 < I >>> 0 ? 1 : 0)),
                  (P = i.low = P + D),
                  (i.high = p + x + (P >>> 0 < D >>> 0 ? 1 : 0)),
                  (v = a.low = v + k),
                  (a.high = m + N + (v >>> 0 < k >>> 0 ? 1 : 0)),
                  (R = o.low = R + L),
                  (o.high = A + b + (R >>> 0 < L >>> 0 ? 1 : 0)),
                  (T = _.low = T + U),
                  (_.high = E + B + (T >>> 0 < U >>> 0 ? 1 : 0)),
                  (O = l.low = O + H),
                  (l.high = g + F + (O >>> 0 < H >>> 0 ? 1 : 0)),
                  (w = u.low = w + V),
                  (u.high = y + Y + (w >>> 0 < V >>> 0 ? 1 : 0)),
                  (S = f.low = S + K),
                  (f.high = C + X + (S >>> 0 < K >>> 0 ? 1 : 0));
              },
              _doFinalize: function () {
                var e = this._data,
                  t = e.words,
                  n = 8 * this._nDataBytes,
                  r = 8 * e.sigBytes;
                return (
                  (t[r >>> 5] |= 128 << (24 - (r % 32))),
                  (t[30 + (((r + 128) >>> 10) << 5)] = Math.floor(
                    n / 4294967296
                  )),
                  (t[31 + (((r + 128) >>> 10) << 5)] = n),
                  (e.sigBytes = 4 * t.length),
                  this._process(),
                  this._hash.toX32()
                );
              },
              clone: function () {
                var e = t.clone.call(this);
                return (e._hash = this._hash.clone()), e;
              },
              blockSize: 32,
            }));
            (e.SHA512 = t._createHelper(l)),
              (e.HmacSHA512 = t._createHmacHelper(l));
          })(),
          r.SHA512);
      },
      628: function (e, t, n) {
        var r;
        e.exports =
          ((r = n(21)),
          n(754),
          n(636),
          n(506),
          n(165),
          (function () {
            var e = r,
              t = e.lib,
              n = t.WordArray,
              i = t.BlockCipher,
              a = e.algo,
              o = [
                57, 49, 41, 33, 25, 17, 9, 1, 58, 50, 42, 34, 26, 18, 10, 2, 59,
                51, 43, 35, 27, 19, 11, 3, 60, 52, 44, 36, 63, 55, 47, 39, 31,
                23, 15, 7, 62, 54, 46, 38, 30, 22, 14, 6, 61, 53, 45, 37, 29,
                21, 13, 5, 28, 20, 12, 4,
              ],
              _ = [
                14, 17, 11, 24, 1, 5, 3, 28, 15, 6, 21, 10, 23, 19, 12, 4, 26,
                8, 16, 7, 27, 20, 13, 2, 41, 52, 31, 37, 47, 55, 30, 40, 51, 45,
                33, 48, 44, 49, 39, 56, 34, 53, 46, 42, 50, 36, 29, 32,
              ],
              s = [1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28],
              c = [
                {
                  0: 8421888,
                  268435456: 32768,
                  536870912: 8421378,
                  805306368: 2,
                  1073741824: 512,
                  1342177280: 8421890,
                  1610612736: 8389122,
                  1879048192: 8388608,
                  2147483648: 514,
                  2415919104: 8389120,
                  2684354560: 33280,
                  2952790016: 8421376,
                  3221225472: 32770,
                  3489660928: 8388610,
                  3758096384: 0,
                  4026531840: 33282,
                  134217728: 0,
                  402653184: 8421890,
                  671088640: 33282,
                  939524096: 32768,
                  1207959552: 8421888,
                  1476395008: 512,
                  1744830464: 8421378,
                  2013265920: 2,
                  2281701376: 8389120,
                  2550136832: 33280,
                  2818572288: 8421376,
                  3087007744: 8389122,
                  3355443200: 8388610,
                  3623878656: 32770,
                  3892314112: 514,
                  4160749568: 8388608,
                  1: 32768,
                  268435457: 2,
                  536870913: 8421888,
                  805306369: 8388608,
                  1073741825: 8421378,
                  1342177281: 33280,
                  1610612737: 512,
                  1879048193: 8389122,
                  2147483649: 8421890,
                  2415919105: 8421376,
                  2684354561: 8388610,
                  2952790017: 33282,
                  3221225473: 514,
                  3489660929: 8389120,
                  3758096385: 32770,
                  4026531841: 0,
                  134217729: 8421890,
                  402653185: 8421376,
                  671088641: 8388608,
                  939524097: 512,
                  1207959553: 32768,
                  1476395009: 8388610,
                  1744830465: 2,
                  2013265921: 33282,
                  2281701377: 32770,
                  2550136833: 8389122,
                  2818572289: 514,
                  3087007745: 8421888,
                  3355443201: 8389120,
                  3623878657: 0,
                  3892314113: 33280,
                  4160749569: 8421378,
                },
                {
                  0: 1074282512,
                  16777216: 16384,
                  33554432: 524288,
                  50331648: 1074266128,
                  67108864: 1073741840,
                  83886080: 1074282496,
                  100663296: 1073758208,
                  117440512: 16,
                  134217728: 540672,
                  150994944: 1073758224,
                  167772160: 1073741824,
                  184549376: 540688,
                  201326592: 524304,
                  218103808: 0,
                  234881024: 16400,
                  251658240: 1074266112,
                  8388608: 1073758208,
                  25165824: 540688,
                  41943040: 16,
                  58720256: 1073758224,
                  75497472: 1074282512,
                  92274688: 1073741824,
                  109051904: 524288,
                  125829120: 1074266128,
                  142606336: 524304,
                  159383552: 0,
                  176160768: 16384,
                  192937984: 1074266112,
                  209715200: 1073741840,
                  226492416: 540672,
                  243269632: 1074282496,
                  260046848: 16400,
                  268435456: 0,
                  285212672: 1074266128,
                  301989888: 1073758224,
                  318767104: 1074282496,
                  335544320: 1074266112,
                  352321536: 16,
                  369098752: 540688,
                  385875968: 16384,
                  402653184: 16400,
                  419430400: 524288,
                  436207616: 524304,
                  452984832: 1073741840,
                  469762048: 540672,
                  486539264: 1073758208,
                  503316480: 1073741824,
                  520093696: 1074282512,
                  276824064: 540688,
                  293601280: 524288,
                  310378496: 1074266112,
                  327155712: 16384,
                  343932928: 1073758208,
                  360710144: 1074282512,
                  377487360: 16,
                  394264576: 1073741824,
                  411041792: 1074282496,
                  427819008: 1073741840,
                  444596224: 1073758224,
                  461373440: 524304,
                  478150656: 0,
                  494927872: 16400,
                  511705088: 1074266128,
                  528482304: 540672,
                },
                {
                  0: 260,
                  1048576: 0,
                  2097152: 67109120,
                  3145728: 65796,
                  4194304: 65540,
                  5242880: 67108868,
                  6291456: 67174660,
                  7340032: 67174400,
                  8388608: 67108864,
                  9437184: 67174656,
                  10485760: 65792,
                  11534336: 67174404,
                  12582912: 67109124,
                  13631488: 65536,
                  14680064: 4,
                  15728640: 256,
                  524288: 67174656,
                  1572864: 67174404,
                  2621440: 0,
                  3670016: 67109120,
                  4718592: 67108868,
                  5767168: 65536,
                  6815744: 65540,
                  7864320: 260,
                  8912896: 4,
                  9961472: 256,
                  11010048: 67174400,
                  12058624: 65796,
                  13107200: 65792,
                  14155776: 67109124,
                  15204352: 67174660,
                  16252928: 67108864,
                  16777216: 67174656,
                  17825792: 65540,
                  18874368: 65536,
                  19922944: 67109120,
                  20971520: 256,
                  22020096: 67174660,
                  23068672: 67108868,
                  24117248: 0,
                  25165824: 67109124,
                  26214400: 67108864,
                  27262976: 4,
                  28311552: 65792,
                  29360128: 67174400,
                  30408704: 260,
                  31457280: 65796,
                  32505856: 67174404,
                  17301504: 67108864,
                  18350080: 260,
                  19398656: 67174656,
                  20447232: 0,
                  21495808: 65540,
                  22544384: 67109120,
                  23592960: 256,
                  24641536: 67174404,
                  25690112: 65536,
                  26738688: 67174660,
                  27787264: 65796,
                  28835840: 67108868,
                  29884416: 67109124,
                  30932992: 67174400,
                  31981568: 4,
                  33030144: 65792,
                },
                {
                  0: 2151682048,
                  65536: 2147487808,
                  131072: 4198464,
                  196608: 2151677952,
                  262144: 0,
                  327680: 4198400,
                  393216: 2147483712,
                  458752: 4194368,
                  524288: 2147483648,
                  589824: 4194304,
                  655360: 64,
                  720896: 2147487744,
                  786432: 2151678016,
                  851968: 4160,
                  917504: 4096,
                  983040: 2151682112,
                  32768: 2147487808,
                  98304: 64,
                  163840: 2151678016,
                  229376: 2147487744,
                  294912: 4198400,
                  360448: 2151682112,
                  425984: 0,
                  491520: 2151677952,
                  557056: 4096,
                  622592: 2151682048,
                  688128: 4194304,
                  753664: 4160,
                  819200: 2147483648,
                  884736: 4194368,
                  950272: 4198464,
                  1015808: 2147483712,
                  1048576: 4194368,
                  1114112: 4198400,
                  1179648: 2147483712,
                  1245184: 0,
                  1310720: 4160,
                  1376256: 2151678016,
                  1441792: 2151682048,
                  1507328: 2147487808,
                  1572864: 2151682112,
                  1638400: 2147483648,
                  1703936: 2151677952,
                  1769472: 4198464,
                  1835008: 2147487744,
                  1900544: 4194304,
                  1966080: 64,
                  2031616: 4096,
                  1081344: 2151677952,
                  1146880: 2151682112,
                  1212416: 0,
                  1277952: 4198400,
                  1343488: 4194368,
                  1409024: 2147483648,
                  1474560: 2147487808,
                  1540096: 64,
                  1605632: 2147483712,
                  1671168: 4096,
                  1736704: 2147487744,
                  1802240: 2151678016,
                  1867776: 4160,
                  1933312: 2151682048,
                  1998848: 4194304,
                  2064384: 4198464,
                },
                {
                  0: 128,
                  4096: 17039360,
                  8192: 262144,
                  12288: 536870912,
                  16384: 537133184,
                  20480: 16777344,
                  24576: 553648256,
                  28672: 262272,
                  32768: 16777216,
                  36864: 537133056,
                  40960: 536871040,
                  45056: 553910400,
                  49152: 553910272,
                  53248: 0,
                  57344: 17039488,
                  61440: 553648128,
                  2048: 17039488,
                  6144: 553648256,
                  10240: 128,
                  14336: 17039360,
                  18432: 262144,
                  22528: 537133184,
                  26624: 553910272,
                  30720: 536870912,
                  34816: 537133056,
                  38912: 0,
                  43008: 553910400,
                  47104: 16777344,
                  51200: 536871040,
                  55296: 553648128,
                  59392: 16777216,
                  63488: 262272,
                  65536: 262144,
                  69632: 128,
                  73728: 536870912,
                  77824: 553648256,
                  81920: 16777344,
                  86016: 553910272,
                  90112: 537133184,
                  94208: 16777216,
                  98304: 553910400,
                  102400: 553648128,
                  106496: 17039360,
                  110592: 537133056,
                  114688: 262272,
                  118784: 536871040,
                  122880: 0,
                  126976: 17039488,
                  67584: 553648256,
                  71680: 16777216,
                  75776: 17039360,
                  79872: 537133184,
                  83968: 536870912,
                  88064: 17039488,
                  92160: 128,
                  96256: 553910272,
                  100352: 262272,
                  104448: 553910400,
                  108544: 0,
                  112640: 553648128,
                  116736: 16777344,
                  120832: 262144,
                  124928: 537133056,
                  129024: 536871040,
                },
                {
                  0: 268435464,
                  256: 8192,
                  512: 270532608,
                  768: 270540808,
                  1024: 268443648,
                  1280: 2097152,
                  1536: 2097160,
                  1792: 268435456,
                  2048: 0,
                  2304: 268443656,
                  2560: 2105344,
                  2816: 8,
                  3072: 270532616,
                  3328: 2105352,
                  3584: 8200,
                  3840: 270540800,
                  128: 270532608,
                  384: 270540808,
                  640: 8,
                  896: 2097152,
                  1152: 2105352,
                  1408: 268435464,
                  1664: 268443648,
                  1920: 8200,
                  2176: 2097160,
                  2432: 8192,
                  2688: 268443656,
                  2944: 270532616,
                  3200: 0,
                  3456: 270540800,
                  3712: 2105344,
                  3968: 268435456,
                  4096: 268443648,
                  4352: 270532616,
                  4608: 270540808,
                  4864: 8200,
                  5120: 2097152,
                  5376: 268435456,
                  5632: 268435464,
                  5888: 2105344,
                  6144: 2105352,
                  6400: 0,
                  6656: 8,
                  6912: 270532608,
                  7168: 8192,
                  7424: 268443656,
                  7680: 270540800,
                  7936: 2097160,
                  4224: 8,
                  4480: 2105344,
                  4736: 2097152,
                  4992: 268435464,
                  5248: 268443648,
                  5504: 8200,
                  5760: 270540808,
                  6016: 270532608,
                  6272: 270540800,
                  6528: 270532616,
                  6784: 8192,
                  7040: 2105352,
                  7296: 2097160,
                  7552: 0,
                  7808: 268435456,
                  8064: 268443656,
                },
                {
                  0: 1048576,
                  16: 33555457,
                  32: 1024,
                  48: 1049601,
                  64: 34604033,
                  80: 0,
                  96: 1,
                  112: 34603009,
                  128: 33555456,
                  144: 1048577,
                  160: 33554433,
                  176: 34604032,
                  192: 34603008,
                  208: 1025,
                  224: 1049600,
                  240: 33554432,
                  8: 34603009,
                  24: 0,
                  40: 33555457,
                  56: 34604032,
                  72: 1048576,
                  88: 33554433,
                  104: 33554432,
                  120: 1025,
                  136: 1049601,
                  152: 33555456,
                  168: 34603008,
                  184: 1048577,
                  200: 1024,
                  216: 34604033,
                  232: 1,
                  248: 1049600,
                  256: 33554432,
                  272: 1048576,
                  288: 33555457,
                  304: 34603009,
                  320: 1048577,
                  336: 33555456,
                  352: 34604032,
                  368: 1049601,
                  384: 1025,
                  400: 34604033,
                  416: 1049600,
                  432: 1,
                  448: 0,
                  464: 34603008,
                  480: 33554433,
                  496: 1024,
                  264: 1049600,
                  280: 33555457,
                  296: 34603009,
                  312: 1,
                  328: 33554432,
                  344: 1048576,
                  360: 1025,
                  376: 34604032,
                  392: 33554433,
                  408: 34603008,
                  424: 0,
                  440: 34604033,
                  456: 1049601,
                  472: 1024,
                  488: 33555456,
                  504: 1048577,
                },
                {
                  0: 134219808,
                  1: 131072,
                  2: 134217728,
                  3: 32,
                  4: 131104,
                  5: 134350880,
                  6: 134350848,
                  7: 2048,
                  8: 134348800,
                  9: 134219776,
                  10: 133120,
                  11: 134348832,
                  12: 2080,
                  13: 0,
                  14: 134217760,
                  15: 133152,
                  2147483648: 2048,
                  2147483649: 134350880,
                  2147483650: 134219808,
                  2147483651: 134217728,
                  2147483652: 134348800,
                  2147483653: 133120,
                  2147483654: 133152,
                  2147483655: 32,
                  2147483656: 134217760,
                  2147483657: 2080,
                  2147483658: 131104,
                  2147483659: 134350848,
                  2147483660: 0,
                  2147483661: 134348832,
                  2147483662: 134219776,
                  2147483663: 131072,
                  16: 133152,
                  17: 134350848,
                  18: 32,
                  19: 2048,
                  20: 134219776,
                  21: 134217760,
                  22: 134348832,
                  23: 131072,
                  24: 0,
                  25: 131104,
                  26: 134348800,
                  27: 134219808,
                  28: 134350880,
                  29: 133120,
                  30: 2080,
                  31: 134217728,
                  2147483664: 131072,
                  2147483665: 2048,
                  2147483666: 134348832,
                  2147483667: 133152,
                  2147483668: 32,
                  2147483669: 134348800,
                  2147483670: 134217728,
                  2147483671: 134219808,
                  2147483672: 134350880,
                  2147483673: 134217760,
                  2147483674: 134219776,
                  2147483675: 0,
                  2147483676: 133120,
                  2147483677: 2080,
                  2147483678: 131104,
                  2147483679: 134350848,
                },
              ],
              l = [
                4160749569, 528482304, 33030144, 2064384, 129024, 8064, 504,
                2147483679,
              ],
              u = (a.DES = i.extend({
                _doReset: function () {
                  for (var e = this._key.words, t = [], n = 0; n < 56; n++) {
                    var r = o[n] - 1;
                    t[n] = (e[r >>> 5] >>> (31 - (r % 32))) & 1;
                  }
                  for (var i = (this._subKeys = []), a = 0; a < 16; a++) {
                    var c = (i[a] = []),
                      l = s[a];
                    for (n = 0; n < 24; n++)
                      (c[(n / 6) | 0] |=
                        t[(_[n] - 1 + l) % 28] << (31 - (n % 6))),
                        (c[4 + ((n / 6) | 0)] |=
                          t[28 + ((_[n + 24] - 1 + l) % 28)] << (31 - (n % 6)));
                    for (c[0] = (c[0] << 1) | (c[0] >>> 31), n = 1; n < 7; n++)
                      c[n] = c[n] >>> (4 * (n - 1) + 3);
                    c[7] = (c[7] << 5) | (c[7] >>> 27);
                  }
                  var u = (this._invSubKeys = []);
                  for (n = 0; n < 16; n++) u[n] = i[15 - n];
                },
                encryptBlock: function (e, t) {
                  this._doCryptBlock(e, t, this._subKeys);
                },
                decryptBlock: function (e, t) {
                  this._doCryptBlock(e, t, this._invSubKeys);
                },
                _doCryptBlock: function (e, t, n) {
                  (this._lBlock = e[t]),
                    (this._rBlock = e[t + 1]),
                    f.call(this, 4, 252645135),
                    f.call(this, 16, 65535),
                    h.call(this, 2, 858993459),
                    h.call(this, 8, 16711935),
                    f.call(this, 1, 1431655765);
                  for (var r = 0; r < 16; r++) {
                    for (
                      var i = n[r],
                        a = this._lBlock,
                        o = this._rBlock,
                        _ = 0,
                        s = 0;
                      s < 8;
                      s++
                    )
                      _ |= c[s][((o ^ i[s]) & l[s]) >>> 0];
                    (this._lBlock = o), (this._rBlock = a ^ _);
                  }
                  var u = this._lBlock;
                  (this._lBlock = this._rBlock),
                    (this._rBlock = u),
                    f.call(this, 1, 1431655765),
                    h.call(this, 8, 16711935),
                    h.call(this, 2, 858993459),
                    f.call(this, 16, 65535),
                    f.call(this, 4, 252645135),
                    (e[t] = this._lBlock),
                    (e[t + 1] = this._rBlock);
                },
                keySize: 2,
                ivSize: 2,
                blockSize: 2,
              }));
            function f(e, t) {
              var n = ((this._lBlock >>> e) ^ this._rBlock) & t;
              (this._rBlock ^= n), (this._lBlock ^= n << e);
            }
            function h(e, t) {
              var n = ((this._rBlock >>> e) ^ this._lBlock) & t;
              (this._lBlock ^= n), (this._rBlock ^= n << e);
            }
            e.DES = i._createHelper(u);
            var d = (a.TripleDES = i.extend({
              _doReset: function () {
                var e = this._key.words;
                if (2 !== e.length && 4 !== e.length && e.length < 6)
                  throw new Error(
                    'Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.'
                  );
                var t = e.slice(0, 2),
                  r = e.length < 4 ? e.slice(0, 2) : e.slice(2, 4),
                  i = e.length < 6 ? e.slice(0, 2) : e.slice(4, 6);
                (this._des1 = u.createEncryptor(n.create(t))),
                  (this._des2 = u.createEncryptor(n.create(r))),
                  (this._des3 = u.createEncryptor(n.create(i)));
              },
              encryptBlock: function (e, t) {
                this._des1.encryptBlock(e, t),
                  this._des2.decryptBlock(e, t),
                  this._des3.encryptBlock(e, t);
              },
              decryptBlock: function (e, t) {
                this._des3.decryptBlock(e, t),
                  this._des2.encryptBlock(e, t),
                  this._des1.decryptBlock(e, t);
              },
              keySize: 6,
              ivSize: 2,
              blockSize: 2,
            }));
            e.TripleDES = i._createHelper(d);
          })(),
          r.TripleDES);
      },
      240: function (e, t, n) {
        var r;
        e.exports =
          ((r = n(21)),
          (function (e) {
            var t = r,
              n = t.lib,
              i = n.Base,
              a = n.WordArray,
              o = (t.x64 = {});
            (o.Word = i.extend({
              init: function (e, t) {
                (this.high = e), (this.low = t);
              },
            })),
              (o.WordArray = i.extend({
                init: function (t, n) {
                  (t = this.words = t || []),
                    (this.sigBytes = n != e ? n : 8 * t.length);
                },
                toX32: function () {
                  for (
                    var e = this.words, t = e.length, n = [], r = 0;
                    r < t;
                    r++
                  ) {
                    var i = e[r];
                    n.push(i.high), n.push(i.low);
                  }
                  return a.create(n, this.sigBytes);
                },
                clone: function () {
                  for (
                    var e = i.clone.call(this),
                      t = (e.words = this.words.slice(0)),
                      n = t.length,
                      r = 0;
                    r < n;
                    r++
                  )
                    t[r] = t[r].clone();
                  return e;
                },
              }));
          })(),
          r);
      },
      477: function () {},
    },
    n = {};
  function r(t) {
    var i = n[t];
    if (void 0 !== i) return i.exports;
    var a = (n[t] = { exports: {} });
    return e[t].call(a.exports, a, a.exports, r), a.exports;
  }
  (r.n = function (e) {
    var t =
      e && e.__esModule
        ? function () {
            return e.default;
          }
        : function () {
            return e;
          };
    return r.d(t, { a: t }), t;
  }),
    (r.d = function (e, t) {
      for (var n in t)
        r.o(t, n) &&
          !r.o(e, n) &&
          Object.defineProperty(e, n, { enumerable: !0, get: t[n] });
    }),
    (r.g = (function () {
      if ('object' == typeof globalThis) return globalThis;
      try {
        return this || new Function('return this')();
      } catch (e) {
        if ('object' == typeof window) return window;
      }
    })()),
    (r.o = function (e, t) {
      return Object.prototype.hasOwnProperty.call(e, t);
    }),
    (function () {
      'use strict';
      var e = r(396),
        n = r.n(e);
      const i = {};
      let a = 32,
        o = parseInt('FF000000', 16),
        _ = parseInt('FF0000', 16),
        s = parseInt('FF00', 16),
        c = parseInt('FF', 16);
      (i.hdr_len = 32),
        (i.iot_cmd = {
          IOT_LINK_CMD_DEV_NONCE_REQ: 0,
          IOT_LINK_CMD_DEV_NONCE_RES: 1,
          IOT_LINK_CMD_DEV_SESSION_REQ: 2,
          IOT_LINK_CMD_DEV_SESSION_RES: 3,
          IOT_LINK_CMD_DEV_LOGIN_REQ: 4,
          IOT_LINK_CMD_DEV_LOGIN_RES: 5,
          IOT_LINK_CMD_HOLE_REQ: 6,
          IOT_LINK_CMD_HOLE_S2D: 7,
          IOT_LINK_CMD_HOLE_D2S: 8,
          IOT_LINK_CMD_HOLE_S2D2: 9,
          IOT_LINK_CMD_HOLE_S2A: 10,
          IOT_LINK_CMD_HOLE_PUNCH: 11,
          IOT_LINK_CMD_TURN_REQ: 12,
          IOT_LINK_CMD_TURN_M2S: 13,
          IOT_LINK_CMD_TURN_S2D: 14,
          IOT_LINK_CMD_TURN_D2S: 15,
          IOT_LINK_CMD_TURN_S2A: 16,
          IOT_LINK_CMD_PING: 17,
          IOT_LINK_CMD_PONG: 18,
          IOT_LINK_CMD_DATA: 19,
          IOT_LINK_CMD_OPEN_REQ: 20,
          IOT_LINK_CMD_OPEN_RES: 21,
          IOT_LINK_CMD_CLOSE_REQ: 22,
          IOT_LINK_CMD_CLOSE_RES: 23,
          IOT_LINK_CMD_TURNTOPROXY_REG: 24,
          IOT_LINK_CMD_TURNTOPROXY_RES: 25,
          IOT_LINK_CMD_TURN_DEVICE_CONN_REG: 26,
          IOT_LINK_CMD_TURN_DEVICE_CONN_RES: 27,
          IOT_LINK_CMD_TURN_DEVICE_DISCONN_REG: 28,
          IOT_LINK_CMD_TURN_DEVICE_DISCONN_RES: 29,
          IOT_LINK_CMD_TURN_CLIENT_CONN_REG: 30,
          IOT_LINK_CMD_TURN_CLIENT_CONN_RES: 31,
          IOT_LINK_CMD_TURN_CLIENT_DISCONN_REG: 32,
          IOT_LINK_CMD_TURN_CLIENT_DISCONN_RES: 33,
          IOT_LINK_CMD_DEVICE_LOGINTURN_REQ: 34,
          IOT_LINK_CMD_DEVICE_LOGINTURN_RES: 35,
          IOT_LINK_CMD_CLIENT_LOGINTURN_REQ: 36,
          IOT_LINK_CMD_CLIENT_LOGINTURN_RES: 37,
          IOT_LINK_CMD_TURN_CLOSE: 38,
          IOT_LINK_CMD_ECHO_REQ: 39,
          IOT_LINK_CMD_ECHO_RES: 40,
          IOT_LINK_CMD_SID_P2S: 41,
          IOT_LINK_CMD_TURN_REQ2: 42,
          IOT_LINK_CMD_DATA_PRIOR: 43,
        }),
        (i.iot_hdr = function (e, t, n, r) {
          let i = 0;
          r && (i = r.length);
          let a = new ArrayBuffer(32 + i),
            o = new Uint8Array(a);
          for (let e = 0; e < 32; e++) o[e] = 0;
          (o[0] = parseInt('ab', 16)),
            (o[1] = parseInt('bc', 16)),
            (o[2] = parseInt('cd', 16)),
            (o[3] = parseInt('de', 16)),
            (o[4] = e),
            (o[5] = 0),
            (o[6] = 0),
            (o[7] = 0),
            (o[8] = 0),
            (o[9] = 0),
            (o[10] = 0),
            (o[11] = 1),
            (o[12] = t & c),
            (o[13] = (t >> 8) & c),
            (o[14] = (t >> 16) & c),
            (o[15] = (t >> 24) & c),
            (o[16] = n & c),
            (o[17] = (n >> 8) & c),
            (o[18] = (n >> 16) & c),
            (o[19] = (n >> 24) & c),
            (o[28] = i & c),
            (o[29] = (i >> 8) & c),
            (o[30] = (i >> 16) & c),
            (o[31] = (i >> 24) & c);
          for (let e = 0; e < i; e++) o[e + 32] = r[e];
          return o;
        }),
        (i.arq_open_conn = function (e) {
          let t = new ArrayBuffer(20),
            n = new Uint8Array(t),
            r = [
              'd9',
              'ff',
              'cc',
              '02',
              '8c',
              '38',
              'ee',
              'd2',
              'd1',
              '99',
              'ac',
              '60',
              '26',
              '94',
              '7f',
              'ae',
            ];
          for (let e = 0; e < 16; e++) n[e] = parseInt(r[e], 16);
          return (
            (n[16] = e & c),
            (n[17] = (e >> 8) & c),
            (n[18] = (e >> 16) & c),
            (n[19] = (e >> 24) & c),
            n
          );
        }),
        (i.arq_open_conn_res = function () {
          let e = new ArrayBuffer(16),
            t = new Uint8Array(e),
            n = [
              '96',
              'd5',
              '39',
              '0d',
              '12',
              'fc',
              'be',
              '8f',
              '47',
              '90',
              'd9',
              '32',
              'cc',
              'd8',
              '49',
              'f3',
            ];
          for (let e = 0; e < 16; e++) t[e] = parseInt(n[e], 16);
          return t;
        }),
        (i.arq_close_conn = function () {
          let e = new ArrayBuffer(16),
            t = new Uint8Array(e),
            n = [
              '2f',
              'f1',
              'f2',
              '73',
              'b2',
              '66',
              '21',
              '03',
              'cd',
              '23',
              '07',
              '52',
              'b9',
              '4a',
              '63',
              'e9',
            ];
          for (let e = 0; e < 16; e++) t[e] = parseInt(n[e], 16);
          return t;
        }),
        (i.iot_flow_stats = function () {
          let e = new ArrayBuffer(64),
            t = new Uint8Array(e);
          for (let e = 0; e < 64; e++) t[e] = 0;
          return t;
        }),
        (i.iot_ping = function (e) {
          let t = new ArrayBuffer(96),
            n = new Uint8Array(t);
          for (let e = 0; e < 96; e++) n[e] = 0;
          for (let t = 0; t < e.length; t++) n[t] = e.charCodeAt(t);
          return n;
        }),
        (i.iot_pong = function (e) {
          let t = new ArrayBuffer(68),
            n = new Uint8Array(t);
          (n[0] = e & c),
            (n[1] = (e >> 8) & c),
            (n[2] = (e >> 16) & c),
            (n[3] = (e >> 24) & c);
          for (let e = 4; e < 68; e++) n[e] = 0;
          return n;
        }),
        (i.iot_turn_req = function (e, t, n) {
          let r = new ArrayBuffer(40),
            i = new Uint8Array(r);
          for (let e = 0; e < 40; e++) i[e] = 0;
          for (let t = 0; t < e.length; t++) i[t] = e.charCodeAt(t);
          return (
            (i[32] = t & c),
            (i[33] = (t >> 8) & c),
            (i[34] = (t >> 16) & c),
            (i[35] = (t >> 24) & c),
            (i[36] = n & c),
            (i[37] = (n >> 8) & c),
            (i[38] = (n >> 16) & c),
            (i[39] = (n >> 24) & c),
            i
          );
        }),
        (i.iot_turn_req_v2 = function (e, t, n, r, i) {
          let a = new ArrayBuffer(64),
            o = new Uint8Array(a);
          for (let e = 0; e < 64; e++) o[e] = 0;
          for (let t = 0; t < e.length; t++) o[t] = e.charCodeAt(t);
          (o[32] = t & c),
            (o[33] = (t >> 8) & c),
            (o[34] = (t >> 16) & c),
            (o[35] = (t >> 24) & c),
            (o[36] = n & c),
            (o[37] = (n >> 8) & c),
            (o[38] = (n >> 16) & c),
            (o[39] = (n >> 24) & c);
          let _ = r.split('.');
          return (
            (o[40] = parseInt(_[3])),
            (o[41] = parseInt(_[2])),
            (o[42] = parseInt(_[1])),
            (o[43] = parseInt(_[0])),
            (o[60] = i & c),
            (o[61] = (i >> 8) & c),
            (o[62] = (i >> 16) & c),
            (o[63] = (i >> 24) & c),
            o
          );
        }),
        (i.iot_loginturn = function (e) {
          let t = new ArrayBuffer(4),
            n = new Uint8Array(t);
          return (
            (n[0] = e & c),
            (n[1] = (e >> 8) & c),
            (n[2] = (e >> 16) & c),
            (n[3] = (e >> 24) & c),
            n
          );
        }),
        (i.iot_open_req = function (e, t) {
          let n = new ArrayBuffer(8),
            r = new Uint8Array(n);
          return (
            (r[0] = e & c),
            (r[1] = (e >> 8) & c),
            (r[2] = (e >> 16) & c),
            (r[3] = (e >> 24) & c),
            (r[4] = t & c),
            (r[5] = (t >> 8) & c),
            (r[6] = (t >> 16) & c),
            (r[7] = (t >> 24) & c),
            r
          );
        }),
        (i.parse_iot_hdr = function (e) {
          let t = {};
          return (
            (t.magic =
              ((e[0] << 24) & o) |
              ((e[1] << 16) & _) |
              ((e[2] << 8) & s) |
              (e[3] & c)),
            (t.cmd =
              ((e[7] << 24) & o) |
              ((e[6] << 16) & _) |
              ((e[5] << 8) & s) |
              (e[4] & c)),
            (t.version =
              ((e[8] << 24) & o) |
              ((e[9] << 16) & _) |
              ((e[10] << 8) & s) |
              (e[11] & c)),
            (t.ticket =
              ((e[15] << 24) & o) |
              ((e[14] << 16) & _) |
              ((e[13] << 8) & s) |
              (e[12] & c)),
            (t.sid =
              ((e[19] << 24) & o) |
              ((e[18] << 16) & _) |
              ((e[17] << 8) & s) |
              (e[16] & c)),
            (t.transferlog =
              ((e[23] << 24) & o) |
              ((e[22] << 16) & _) |
              ((e[21] << 8) & s) |
              (e[20] & c)),
            (t.ecode =
              ((e[27] << 24) & o) |
              ((e[26] << 16) & _) |
              ((e[25] << 8) & s) |
              (e[24] & c)),
            (t.payload_len =
              ((e[31] << 24) & o) |
              ((e[30] << 16) & _) |
              ((e[29] << 8) & s) |
              (e[28] & c)),
            t
          );
        }),
        (i.parse_iot_turn_s2a = function (e) {
          let t = { uid: '' };
          t.sid =
            ((e[3] << 24) & o) |
            ((e[2] << 16) & _) |
            ((e[1] << 8) & s) |
            (e[0] & c);
          for (let n = 4; n < a && 0 != e[n]; n++)
            t.uid = t.uid + String.fromCharCode(e[n]);
          return (
            console.log(t.uid),
            (t.turntype =
              ((e[39] << 24) & o) |
              ((e[38] << 16) & _) |
              ((e[37] << 8) & s) |
              (e[36] & c)),
            (t.turnsvr_ip =
              String(e[43]) +
              '.' +
              String(e[42]) +
              '.' +
              String(e[41]) +
              '.' +
              String(e[40])),
            (t.turnsvr_ipv6 = ''),
            (t.turnsvr_port =
              ((e[63] << 24) & o) |
              ((e[62] << 16) & _) |
              ((e[61] << 8) & s) |
              (e[60] & c)),
            t
          );
        }),
        (i.parse_iot_login_res = function (e) {
          let t = {};
          return (
            (t.sid =
              ((e[3] << 24) & o) |
              ((e[2] << 16) & _) |
              ((e[1] << 8) & s) |
              (e[0] & c)),
            t
          );
        }),
        (i.parse_iot_open_res = function (e) {
          let t = {};
          return (
            (t.sid =
              ((e[3] << 24) & o) |
              ((e[2] << 16) & _) |
              ((e[1] << 8) & s) |
              (e[0] & c)),
            (t.linktype =
              ((e[7] << 24) & o) |
              ((e[6] << 16) & _) |
              ((e[5] << 8) & s) |
              (e[4] & c)),
            t
          );
        });
      var l = i;
      const u = {};
      var f = [
        parseInt('ce', 16),
        parseInt('fa', 16),
        parseInt('ef', 16),
        parseInt('fe', 16),
      ];
      (u.socklist = []),
        (u.onopen = null),
        (u.onclose = null),
        (u.onerror = null),
        (u.ondata = null);
      var h = function (e) {
          for (var t = 0; t < u.socklist.length; t++)
            if (u.socklist[t].key == e) return u.socklist[t];
          return null;
        },
        d = function (e) {
          for (var t = 0; t < u.socklist.length; t++)
            if (u.socklist[t].sock == e) return u.socklist[t];
          return null;
        };
      (u.arq_error_code = {
        ARQ_CONN_SUCCESS: 0,
        ARQ_CONN_FAIL: 1,
        ARQ_CONN_REMOTE_CLOSE: 2,
        ARQ_CONN_CLOSE: 3,
      }),
        (u.init = function (e, t, n, r) {
          (u.onopen = e), (u.onclose = t), (u.onerror = n), (u.ondata = r);
        }),
        (u.connect = function (e, t, n, r, i) {
          var a = (i ? 'wss' : 'ws') + '://' + t + ':' + n;
          // console.log(a);
          var o = {
            key: e,
            ip: t,
            port: n,
            sock: 0,
            timer: 0,
            ctx: r,
            connected: 0,
            firstdata: 0,
            req_timer: 0,
            time: 0,
          };
          (o.sock = new WebSocket(a)),
            o.sock.addEventListener('open', function (t) {
              (o.sock.binaryType = 'arraybuffer'),
                console.log('websocket opened');
              var n = l.arq_open_conn(e);
              o.sock.send(n),
                (o.time = Date.parse(new Date())),
                (o.req_timer = setInterval(function () {
                  var e = (Date.parse(new Date()) - o.time) / 1e3;
                  console.log(e), e >= 10 && o.close();
                }, 1e3));
            }),
            o.sock.addEventListener('close', function (e) {
              if (
                (console.log('onclose'),
                // console.log(e),
                o.req_timer > 0 &&
                  (console.log('close time out timer'),
                  clearInterval(o.req_timer),
                  (o.req_timer = 0)),
                null != u.onclose)
              ) {
                var t = d(e.target);
                null != t && u.onclose(t.key, t.ctx, e.code, e.reason);
              }
            }),
            o.sock.addEventListener('error', function (e) {
              console.log('onerror') ;
            }),
            o.sock.addEventListener('message', function (t) {
              var n = d(t.target);
              if (null != n) {
                for (
                  var i = new Uint8Array(t.data),
                    a = (new Int8Array(t.data).slice(32), 0);
                  a < 4 && i[a] == f[a];
                  a++
                )
                  return;
                var _ = l.arq_open_conn_res(),
                  s = 1;
                for (a = 0; a < _.length; a++)
                  if (_[a] != i[a]) {
                    s = 0;
                    break;
                  }
                if ((0 == n.connected && n.connected, 0 == n.firstdata))
                  return (
                    o.req_timer > 0 &&
                      (console.log('close arq timer'),
                      clearInterval(o.req_timer),
                      (o.req_timer = 0)),
                    (n.firstdata = 1),
                    void (
                      null != u.onopen &&
                      (1 == s
                        ? u.onopen(e, r, u.arq_error_code.ARQ_CONN_SUCCESS)
                        : u.onopen(e, r, u.arq_error_code.ARQ_CONN_FAIL))
                    )
                  );
                null != u.ondata && u.ondata(e, r, i);
              }
            }),
            u.socklist.push(o);
        }),
        (u.disconnect = function (e) {
          var t = h(e);
          null != t && t.sock.close(),
            (function (e) {
              for (var t = 0; t < u.socklist.length; t++)
                if (u.socklist[t].key == e) return void u.socklist.splice(t, 1);
            })(e);
        }),
        (u.send = function (e, t) {
          var n = h(e);
          if (null != n) {
            for (
              var r = new ArrayBuffer(8), i = new Uint8Array(r), a = 0;
              a < 4;
              a++
            )
              i[a] = f[a];
            return (
              (i[4] = t.length & parseInt('ff', 16)),
              (i[5] = (t.length >> 8) & parseInt('ff', 16)),
              (i[6] = (t.length >> 16) & parseInt('ff', 16)),
              (i[7] = (t.length >> 24) & parseInt('ff', 16)),
              n.sock && 1 == n.sock.readyState
                ? (n.sock.send(i), n.sock.send(t), 1)
                : 0
            );
          }
          return 0;
        });
      var p = u;
      const P = {};
      parseInt('FF00000000000000', 16),
        parseInt('FF000000000000', 16),
        parseInt('FF0000000000', 16),
        parseInt('FF00000000', 16);
      var m = parseInt('FF000000', 16),
        v = parseInt('FF0000', 16),
        A = parseInt('FF00', 16),
        R = parseInt('FF', 16);
      (P.APP_PROTO_MAGIC = parseInt('4b503250', 16)),
        (P.APP_PROTO_VERSION = 1),
        (P.APP_PROTO_AES128_KEY = '~!JUAN*&Vision-='),
        (P.APP_PROTO_PARAM_AUTH_NAME_STRLEN = 32),
        (P.APP_PROTO_PARAM_AUTH_PASSWD_STRLEN = 32),
        (P.APP_PROTO_PARAM_AUTH_NAME_STRLEN2 = 1024),
        (P.APP_PROTO_PARAM_AUTH_PASSWD_STRLEN2 = 1024),
        (P.APP_PROTO_PARAM_NONCE_STRLEN = 64),
        (P.APP_PROTO_PARAM_AUTH_INFO_STRLEN = 64),
        (P.APP_PROTO_PARAM_SIGNATURE_STRLEN = 64),
        (P.APP_PROTO_PARAM_LIVE_CAM_DESC_STRLEN = 32),
        (P.APP_PROTO_PARAM_SETUP_STRLEN = 2048),
        (P.PROC_FRAME_MAGIC = parseInt('4652414d', 16)),
        (P.PROC_FRAME_MAGIC2 = parseInt('4652414E', 16)),
        (P.PROC_FRAME_VERSION = parseInt('01000000', 16)),
        (P.hdr_len = 24),
        (P.p2p_head_len = 48),
        (P.live_head_len = 8),
        (P.live_param_len = 24),
        (P.rec_search_rows = 100),
        (P.p2p_frame_type = { live: 0, replay: 1 }),
        (P.reply_cmd = {
          PROC_REPLAY_CMD_START: 3,
          PROC_REPLAY_CMD_PAUSE: 4,
          PROC_REPLAY_CMD_CONTINUE: 5,
          PROC_REPLAY_CMD_STOP: 2,
        }),
        (P.frame_head_type = {
          PROC_FRAME_HEAD_TYPE_LIVE: 0,
          PROC_FRAME_HEAD_TYPE_REPLAY: 1,
          PROC_FRAME_HEAD_TYPE_VOP2P: 2,
        }),
        (P.frame_type = {
          PROC_FRAME_TYPE_AUDIO: 0,
          PROC_FRAME_TYPE_IFRAME: 1,
          PROC_FRAME_TYPE_PFRAME: 2,
          PROC_FRAME_TYPE_OOB: 15,
        }),
        (P.api_cmd = {
          APP_PROTO_CMD_AUTH_REQ: 10,
          APP_PROTO_CMD_AUTH_RSP: 11,
          APP_PROTO_CMD_NONCE_REQ: 120,
          APP_PROTO_CMD_NONCE_RSP: 121,
          APP_PROTO_CMD_AUTH2_REQ: 130,
          APP_PROTO_CMD_AUTH2_RSP: 131,
          APP_PROTO_CMD_AUTH3_REQ: 140,
          APP_PROTO_CMD_AUTH3_RSP: 141,
          APP_PROTO_CMD_PTZ_REQ: 20,
          APP_PROTO_CMD_PTZ_RSP: 21,
          APP_PROTO_CMD_LIVE_REQ: 30,
          APP_PROTO_CMD_LIVE_RSP: 31,
          APP_PROTO_CMD_FIND_START_REQ: 90,
          APP_PROTO_CMD_FIND_START_RSP: 91,
          APP_PROTO_CMD_FIND_NEXT_REQ: 100,
          APP_PROTO_CMD_FIND_NEXT_RSP: 101,
          APP_PROTO_CMD_FIND_STOP_REQ: 110,
          APP_PROTO_CMD_FIND_STOP_RSP: 111,
          APP_PROTO_CMD_REPLAY_REQ: 40,
          APP_PROTO_CMD_REPLAY_RSP: 41,
          APP_PROTO_CMD_VCON_REQ: 50,
          APP_PROTO_CMD_VCON_RSP: 51,
          APP_PROTO_CMD_VOP2P_REQ: 60,
          APP_PROTO_CMD_VOP2P_RSP: 61,
          APP_PROTO_CMD_ALARM_REQ: 70,
          APP_PROTO_CMD_ALARM_RSP: 71,
          APP_PROTO_CMD_SETUP_REQ: 80,
          APP_PROTO_CMD_SETUP_RSP: 81,
          APP_PROTO_PARAM_LIVE_CMD_STOP: 1,
          APP_PROTO_PARAM_LIVE_CMD_START: 2,
          APP_PROTO_PARAM_LIVE_CMD_CHANGE_STREAM: 3,
          APP_PROTO_PARAM_REPLAY_CMD_SEARCH: 1,
          APP_PROTO_PARAM_REPLAY_CMD_STOP: 2,
          APP_PROTO_PARAM_REPLAY_CMD_START: 3,
          APP_PROTO_PARAM_REPLAY_CMD_PAUSE: 4,
          APP_PROTO_PARAM_REPLAY_CMD_CONTINUE: 5,
          APP_PROTO_DATA_FIND_FILE_START: 1,
          APP_PROTO_DATA_FIND_FILE_NEXT: 2,
          APP_PROTO_DATA_FIND_FILE_STOP: 3,
          APP_PROTO_PARAM_VCON_CMD_CREATE: 1,
          APP_PROTO_PARAM_VCON_CMD_DATA: 2,
          APP_PROTO_PARAM_VCON_CMD_DESTROY: 3,
          APP_PROTO_PARAM_VCON_APP_NAME_STRLEN: 32,
          APP_PROTO_PARAM_VOP2P_CMD_CALL: 1,
          APP_PROTO_PARAM_VOP2P_CMD_HANGUP: 2,
          APP_PROTO_CMD_SETUP_REQ: 80,
          APP_PROTO_CMD_SETUP_RSP: 81,
          APP_PROTO_CMD_SETUP2_REQ: 150,
          APP_PROTO_CMD_SETUP2_RSP: 151,
        }),
        (P.api_err_code = {
          APP_PROTO_SUCCESS: 0,
          APP_PROTO_AUTH_FAILED: -11,
          APP_PROTO_OPEN_STREAM_FAILED: -21,
          APP_PROTO_CLOSE_STREAM_FAILED: -22,
          APP_PROTO_VOP2P_CALL_FAILED: -31,
          APP_PROTO_VOP2P_HANGUP_FAILED: -32,
          APP_PROTO_PTZ_CONTROL_FAILED: -41,
          APP_PROTO_FIND_START_FAILED: -51,
          APP_PROTO_FIND_NEXT_FAILED: -52,
          APP_PROTO_FIND_STOP_FAILED: -53,
          APP_PROTO_REPLAY_SEARCH_FAILED: -61,
          APP_PROTO_REPLAY_STOP_FAILED: -71,
          APP_PROTO_REPLAY_START_FAILED: -72,
          APP_PROTO_REPLAY_PAUSE_FAILED: -73,
          APP_PROTO_REPLAY_RESUME_FAILED: -74,
          APP_PROTO_REMOTE_SETUP_FAILED: -81,
        }),
        (P.api_kp2p_code = {
          KP2P_ERR_SUCCESS: 0,
          KP2P_ERR_TIMEOUT: -2,
          KP2P_ERR_CLOSE_BY_SELF: -10,
          KP2P_ERR_CLOSE_BY_PEER: -11,
          KP2P_ERR_RESOLVE_FAILED: -12,
          KP2P_ERR_CONNECT_FAILED: -13,
          KP2P_ERR_SEND_FAILED: -14,
          KP2P_ERR_P2PSEVER_TIME_OUT: -15,
          KP2P_ERR_P2PSEVER_FAILED: -16,
          KP2P_ERR_AUTH_FAILED: -20,
          KP2P_ERR_GET_NONCE_FAILED: -21,
          KP2P_ERR_AUTH2_FAILED: -22,
          KP2P_ERR_PTZ_CTRL_FAILED: -30,
          KP2P_ERR_OPEN_STREAM_FAILED: -40,
          KP2P_ERR_REC_SEARCH_FAILED: -50,
          KP2P_ERR_REC_PLAY_FAILED: -51,
          KP2P_ERR_VOP2P_CALL_FAILED: -60,
          KP2P_ERR_REMOTE_SETUP_FAILED: -70,
        }),
        (P.connect_type = {
          CONNECT_TYPE_NONE: 0,
          CONNECT_TYPE_IP_UDP: 1,
          CONNECT_TYPE_IP_TCP: 2,
          CONNECT_TYPE_HOLE: 3,
          CONNECT_TYPE_TURN_UDP: 4,
          CONNECT_TYPE_TURN_TCP: 5,
        }),
        (P.ptz_action = {
          KP2P_PTZ_CONTROL_ACTION_STOP: 0,
          KP2P_PTZ_CONTROL_ACTION_AUTO: 1,
          KP2P_PTZ_CONTROL_ACTION_UP: 2,
          KP2P_PTZ_CONTROL_ACTION_DOWN: 3,
          KP2P_PTZ_CONTROL_ACTION_LEFT: 4,
          KP2P_PTZ_CONTROL_ACTION_RIGHT: 5,
          KP2P_PTZ_CONTROL_ACTION_IRIS_OPEN: 6,
          KP2P_PTZ_CONTROL_ACTION_IRIS_CLOSE: 7,
          KP2P_PTZ_CONTROL_ACTION_ZOOM_IN: 8,
          KP2P_PTZ_CONTROL_ACTION_ZOOM_OUT: 9,
          KP2P_PTZ_CONTROL_ACTION_FOCUS_F: 10,
          KP2P_PTZ_CONTROL_ACTION_FOCUS_N: 11,
          KP2P_PTZ_CONTROL_ACTION_AUX: 12,
          KP2P_PTZ_CONTROL_ACTION_PRESET_SET: 13,
          KP2P_PTZ_CONTROL_ACTION_PRESET_GO: 14,
          KP2P_PTZ_CONTROL_ACTION_PRESET_CLEAR: 15,
        }),
        (P.api_hdr = function (e, t, n) {
          var r = 0;
          n && (r = n.length);
          for (
            var i = new ArrayBuffer(P.hdr_len + r),
              a = new Uint8Array(i),
              o = 0;
            o < P.hdr_len;
            o++
          )
            a[o] = 0;
          (a[0] = P.APP_PROTO_MAGIC & R),
            (a[1] = (P.APP_PROTO_MAGIC >> 8) & R),
            (a[2] = (P.APP_PROTO_MAGIC >> 16) & R),
            (a[3] = (P.APP_PROTO_MAGIC >> 24) & R),
            (a[4] = P.APP_PROTO_VERSION & R),
            (a[5] = (P.APP_PROTO_VERSION >> 8) & R),
            (a[6] = (P.APP_PROTO_VERSION >> 16) & R),
            (a[7] = (P.APP_PROTO_VERSION >> 24) & R),
            (a[8] = t & R),
            (a[9] = (t >> 8) & R),
            (a[10] = (t >> 16) & R),
            (a[11] = (t >> 24) & R),
            (a[12] = e & R),
            (a[13] = (e >> 8) & R),
            (a[14] = (e >> 16) & R),
            (a[15] = (e >> 24) & R),
            (a[16] = 0),
            (a[17] = 0),
            (a[18] = 0),
            (a[19] = 0),
            (a[20] = n.length & R),
            (a[21] = (n.length >> 8) & R),
            (a[22] = (n.length >> 16) & R),
            (a[23] = (n.length >> 24) & R);
          for (o = 0; o < n.length; o++) a[P.hdr_len + o] = n[o];
          return a;
        }),
        (P.api_hdr_v2 = function (e, t, n) {
          var r = 0;
          n && (r = n.length);
          var i = new ArrayBuffer(P.hdr_len + r),
            a = new Uint8Array(i);
          for (o = 0; o < P.hdr_len; o++) a[o] = 0;
          (a[0] = P.APP_PROTO_MAGIC & R),
            (a[1] = (P.APP_PROTO_MAGIC >> 8) & R),
            (a[2] = (P.APP_PROTO_MAGIC >> 16) & R),
            (a[3] = (P.APP_PROTO_MAGIC >> 24) & R),
            (a[4] = P.APP_PROTO_VERSION_V2 & R),
            (a[5] = (P.APP_PROTO_VERSION_V2 >> 8) & R),
            (a[6] = (P.APP_PROTO_VERSION_V2 >> 16) & R),
            (a[7] = (P.APP_PROTO_VERSION_V2 >> 24) & R),
            (a[8] = t & R),
            (a[9] = (t >> 8) & R),
            (a[10] = (t >> 16) & R),
            (a[11] = (t >> 24) & R),
            (a[12] = e & R),
            (a[13] = (e >> 8) & R),
            (a[14] = (e >> 16) & R),
            (a[15] = (e >> 24) & R),
            (a[16] = 0),
            (a[17] = 0),
            (a[18] = 0),
            (a[19] = 0),
            (a[20] = n.length & R),
            (a[21] = (n.length >> 8) & R),
            (a[22] = (n.length >> 16) & R),
            (a[23] = (n.length >> 24) & R);
          for (var o = 0; o < n.length; o++) a[P.hdr_len + o] = n[o];
          return a;
        }),
        (P.auth_req = function (e, t) {
          for (
            var n =
                P.APP_PROTO_PARAM_AUTH_NAME_STRLEN +
                P.APP_PROTO_PARAM_AUTH_PASSWD_STRLEN,
              r = new ArrayBuffer(n),
              i = new Uint8Array(r),
              a = 0;
            a < n;
            a++
          )
            i[a] = 0;
          for (a = 0; a < e.length; a += 2)
            i[a / 2] = parseInt(e.substr(a, 2), 16);
          for (a = 0; a < t.length; a += 2)
            i[P.APP_PROTO_PARAM_AUTH_NAME_STRLEN + a / 2] = parseInt(
              t.substr(a, 2),
              16
            );
          return i;
        }),
        (P.auth_req3 = function (e, t) {
          for (
            var n =
                P.APP_PROTO_PARAM_AUTH_NAME_STRLEN2 +
                P.APP_PROTO_PARAM_AUTH_PASSWD_STRLEN2,
              r = new ArrayBuffer(n),
              i = new Uint8Array(r),
              a = 0;
            a < n;
            a++
          )
            i[a] = 0;
          for (a = 0; a < e.length; a++) i[a] = e.charCodeAt(a);
          for (a = 0; a < t.length; a++)
            i[P.APP_PROTO_PARAM_AUTH_NAME_STRLEN2 + a] = t.charCodeAt(a);
          return i;
        }),
        (P.live_req = function (e, t, n) {
          for (
            var r = new ArrayBuffer(12), i = new Uint8Array(r), a = 0;
            a < 12;
            a++
          )
            i[a] = 0;
          return (
            (i[0] = e & R),
            (i[1] = (e >> 8) & R),
            (i[2] = (e >> 16) & R),
            (i[3] = (e >> 24) & R),
            (i[4] = t & R),
            (i[5] = (t >> 8) & R),
            (i[6] = (t >> 16) & R),
            (i[7] = (t >> 24) & R),
            (i[8] = n & R),
            (i[9] = (n >> 8) & R),
            (i[10] = (n >> 16) & R),
            (i[11] = (n >> 24) & R),
            i
          );
        }),
        (P.vop2p_call_req = function (e, t) {
          for (
            var n = new ArrayBuffer(8), r = new Uint8Array(n), i = 0;
            i < 8;
            i++
          )
            r[i] = 0;
          return (
            (r[0] = t & R),
            (r[1] = (t >> 8) & R),
            (r[2] = (t >> 16) & R),
            (r[3] = (t >> 24) & R),
            (r[4] = e & R),
            (r[5] = (e >> 8) & R),
            (r[6] = (e >> 16) & R),
            (r[7] = (e >> 24) & R),
            r
          );
        }),
        (P.vop2p_send_req = function (e, t, n, r, i, a, o, _, s) {
          for (
            var c = 64 + s,
              l = new ArrayBuffer(c),
              u = new Uint8Array(l),
              f = 0;
            f < c;
            f++
          )
            u[f] = 0;
          (u[0] = P.PROC_FRAME_MAGIC & R),
            (u[1] = (P.PROC_FRAME_MAGIC >> 8) & R),
            (u[2] = (P.PROC_FRAME_MAGIC >> 16) & R),
            (u[3] = (P.PROC_FRAME_MAGIC >> 24) & R),
            (u[4] = P.PROC_FRAME_VERSION & R),
            (u[5] = (P.PROC_FRAME_VERSION >> 8) & R),
            (u[6] = (P.PROC_FRAME_VERSION >> 16) & R),
            (u[7] = (P.PROC_FRAME_VERSION >> 24) & R),
            (u[8] = P.frame_head_type.PROC_FRAME_HEAD_TYPE_VOP2P & R),
            (u[9] = (P.frame_head_type.PROC_FRAME_HEAD_TYPE_VOP2P >> 8) & R),
            (u[10] = (P.frame_head_type.PROC_FRAME_HEAD_TYPE_VOP2P >> 16) & R),
            (u[11] = (P.frame_head_type.PROC_FRAME_HEAD_TYPE_VOP2P >> 24) & R),
            (u[12] = s & R),
            (u[13] = (s >> 8) & R),
            (u[14] = (s >> 16) & R),
            (u[15] = (s >> 24) & R),
            (u[16] = t & R),
            (u[17] = (t >> 8) & R),
            (u[18] = (t >> 16) & R),
            (u[19] = (t >> 24) & R),
            (u[20] = (t >> 32) & R),
            (u[21] = (t >> 40) & R),
            (u[22] = (t >> 48) & R),
            (u[23] = (t >> 56) & R),
            (u[24] = P.frame_type.PROC_FRAME_TYPE_AUDIO & R),
            (u[25] = (P.frame_type.PROC_FRAME_TYPE_AUDIO >> 8) & R),
            (u[26] = (P.frame_type.PROC_FRAME_TYPE_AUDIO >> 16) & R),
            (u[27] = (P.frame_type.PROC_FRAME_TYPE_AUDIO >> 24) & R),
            (u[28] = e & R),
            (u[29] = (e >> 8) & R),
            (u[30] = (e >> 16) & R),
            (u[31] = (e >> 24) & R);
          for (f = 0; f < n.length; f++) u[f + 32] = n.charCodeAt(f);
          (u[40] = r & R),
            (u[41] = (r >> 8) & R),
            (u[42] = (r >> 16) & R),
            (u[43] = (r >> 24) & R),
            (u[44] = i & R),
            (u[45] = (i >> 8) & R),
            (u[46] = (i >> 16) & R),
            (u[47] = (i >> 24) & R),
            (u[48] = a & R),
            (u[49] = (a >> 8) & R),
            (u[50] = (a >> 16) & R),
            (u[51] = (a >> 24) & R),
            (u[52] = o & R),
            (u[53] = (o >> 8) & R),
            (u[54] = (o >> 16) & R),
            (u[55] = (o >> 24) & R);
          for (f = 0; f < s; f++) u[f + 64] = _[f];
          return u;
        }),
        (P.time_struct = function (e) {
          var t = new ArrayBuffer(24),
            n = new Uint8Array(t),
            r = e.getFullYear(),
            i = e.getMonth() + 1,
            a = e.getDate(),
            o = e.getHours(),
            _ = e.getMinutes(),
            s = e.getSeconds();
          return (
            (n[0] = r & R),
            (n[1] = (r >> 8) & R),
            (n[2] = (r >> 16) & R),
            (n[3] = (r >> 24) & R),
            (n[4] = i & R),
            (n[5] = (i >> 8) & R),
            (n[6] = (i >> 16) & R),
            (n[7] = (i >> 24) & R),
            (n[8] = a & R),
            (n[9] = (a >> 8) & R),
            (n[10] = (a >> 16) & R),
            (n[11] = (a >> 24) & R),
            (n[12] = o & R),
            (n[13] = (o >> 8) & R),
            (n[14] = (o >> 16) & R),
            (n[15] = (o >> 24) & R),
            (n[16] = _ & R),
            (n[17] = (_ >> 8) & R),
            (n[18] = (_ >> 16) & R),
            (n[19] = (_ >> 24) & R),
            (n[20] = s & R),
            (n[21] = (s >> 8) & R),
            (n[22] = (s >> 16) & R),
            (n[23] = (s >> 24) & R),
            n
          );
        }),
        (P.find_file_cond = function (e, t, n, r) {
          var i = new ArrayBuffer(56),
            a = new Uint8Array(i),
            o = P.time_struct(n),
            _ = P.time_struct(r);
          (a[0] = e & R),
            (a[1] = (e >> 8) & R),
            (a[2] = (e >> 16) & R),
            (a[3] = (e >> 24) & R),
            (a[4] = t & R),
            (a[5] = (t >> 8) & R),
            (a[6] = (t >> 16) & R),
            (a[7] = (t >> 24) & R);
          for (var s = 0; s < o.length; s++) a[s + 8] = o[s];
          for (s = 0; s < _.length; s++) a[s + 32] = _[s];
          return a;
        }),
        (P.find_next_req = function (e) {
          var t = new ArrayBuffer(4),
            n = new Uint8Array(t);
          return (
            (n[0] = e & R),
            (n[1] = (e >> 8) & R),
            (n[2] = (e >> 16) & R),
            (n[3] = (e >> 24) & R),
            n
          );
        }),
        (P.find_stop_req = function (e) {
          var t = new ArrayBuffer(4),
            n = new Uint8Array(t);
          return (
            (n[0] = e & R),
            (n[1] = (e >> 8) & R),
            (n[2] = (e >> 16) & R),
            (n[3] = (e >> 24) & R),
            n
          );
        }),
        (P.find_file_req_2 = function (e, t, n, r, i, a, o, _) {
          for (
            var s = new ArrayBuffer(52), c = new Uint8Array(s), l = 0;
            l < c.length;
            l++
          )
            c[l] = 0;
          if (
            ((c[0] = e & R),
            (c[1] = (e >> 8) & R),
            (c[2] = (e >> 16) & R),
            (c[3] = (e >> 24) & R),
            (c[4] = n & R),
            (c[5] = (n >> 8) & R),
            (c[6] = (n >> 16) & R),
            (c[7] = (n >> 24) & R),
            null != t)
          )
            for (l = 0; l < t.length; l++)
              t[l] > 0 &&
                (c[8 + parseInt(l / 8)] =
                  c[8 + parseInt(l / 8)] | (1 << l % 8));
          return (
            (c[24] = r & R),
            (c[25] = (r >> 8) & R),
            (c[26] = (r >> 16) & R),
            (c[27] = (r >> 24) & R),
            (c[32] = i & R),
            (c[33] = (i >> 8) & R),
            (c[34] = (i >> 16) & R),
            (c[35] = (i >> 24) & R),
            (c[36] = a & R),
            (c[37] = (a >> 8) & R),
            (c[38] = (a >> 16) & R),
            (c[39] = (a >> 24) & R),
            (c[44] = o & R),
            (c[45] = (o >> 8) & R),
            (c[46] = (o >> 16) & R),
            (c[47] = (o >> 24) & R),
            (c[48] = _ & R),
            (c[49] = (_ >> 8) & R),
            (c[50] = (_ >> 16) & R),
            (c[51] = (_ >> 24) & R),
            c
          );
        }),
        (P.ptz_req = function (e, t, n, r) {
          var i = new ArrayBuffer(16),
            a = new Uint8Array(i);
          return (
            (a[0] = e & R),
            (a[1] = (e >> 8) & R),
            (a[2] = (e >> 16) & R),
            (a[3] = (e >> 24) & R),
            (a[4] = t & R),
            (a[5] = (t >> 8) & R),
            (a[6] = (t >> 16) & R),
            (a[7] = (t >> 24) & R),
            (a[8] = n & R),
            (a[9] = (n >> 8) & R),
            (a[10] = (n >> 16) & R),
            (a[11] = (n >> 24) & R),
            (a[12] = r & R),
            (a[13] = (r >> 8) & R),
            (a[14] = (r >> 16) & R),
            (a[15] = (r >> 24) & R),
            a
          );
        }),
        (P.parse_ptz_req = function (e) {
          var t = { len: 4 };
          return (
            (t.result =
              ((e[3] << 24) & m) |
              ((e[2] << 16) & v) |
              ((e[1] << 8) & A) |
              (e[0] & R)),
            t
          );
        }),
        (P.parse_search_res = function (e) {
          var t = { len: 52 };
          return (
            (t.replay_cmd =
              ((e[3] << 24) & m) |
              ((e[2] << 16) & v) |
              ((e[1] << 8) & A) |
              (e[0] & R)),
            (t.search_type =
              ((e[23] << 24) & m) |
              ((e[22] << 16) & v) |
              ((e[21] << 8) & A) |
              (e[20] & R)),
            (t.begin_time =
              ((e[31] << 24) & m) |
              ((e[30] << 16) & v) |
              ((e[29] << 8) & A) |
              (e[28] & R)),
            (t.end_time =
              ((e[35] << 24) & m) |
              ((e[34] << 16) & v) |
              ((e[33] << 8) & A) |
              (e[32] & R)),
            (t.file_index =
              ((e[43] << 24) & m) |
              ((e[42] << 16) & v) |
              ((e[41] << 8) & A) |
              (e[40] & R)),
            (t.file_count =
              ((e[47] << 24) & m) |
              ((e[46] << 16) & v) |
              ((e[45] << 8) & A) |
              (e[44] & R)),
            (t.file_total =
              ((e[51] << 24) & m) |
              ((e[50] << 16) & v) |
              ((e[49] << 8) & A) |
              (e[48] & R)),
            t
          );
        }),
        (P.parse_record_file = function (e) {
          var t = { len: 20 };
          return (
            (t.channel =
              ((e[3] << 24) & m) |
              ((e[2] << 16) & v) |
              ((e[1] << 8) & A) |
              (e[0] & R)),
            (t.file_type =
              ((e[7] << 24) & m) |
              ((e[6] << 16) & v) |
              ((e[5] << 8) & A) |
              (e[4] & R)),
            (t.file_begintime =
              ((e[11] << 24) & m) |
              ((e[10] << 16) & v) |
              ((e[9] << 8) & A) |
              (e[8] & R)),
            (t.file_endtime =
              ((e[15] << 24) & m) |
              ((e[14] << 16) & v) |
              ((e[13] << 8) & A) |
              (e[12] & R)),
            (t.file_quality =
              ((e[19] << 24) & m) |
              ((e[18] << 16) & v) |
              ((e[17] << 8) & A) |
              (e[16] & R)),
            t
          );
        }),
        (P.get_api_magic = function (e) {
          return (
            ((e[3] << 24) & m) |
            ((e[2] << 16) & v) |
            ((e[1] << 8) & A) |
            (e[0] & R)
          );
        }),
        (P.parse_api_hdr = function (e) {
          var t = {};
          return (
            (t.magic =
              ((e[3] << 24) & m) |
              ((e[2] << 16) & v) |
              ((e[1] << 8) & A) |
              (e[0] & R)),
            (t.version =
              ((e[7] << 24) & m) |
              ((e[6] << 16) & v) |
              ((e[5] << 8) & A) |
              (e[4] & R)),
            (t.ticket =
              ((e[11] << 24) & m) |
              ((e[10] << 16) & v) |
              ((e[9] << 8) & A) |
              (e[8] & R)),
            (t.cmd =
              ((e[15] << 24) & m) |
              ((e[14] << 16) & v) |
              ((e[13] << 8) & A) |
              (e[12] & R)),
            (t.result =
              ((e[19] << 24) & m) |
              ((e[18] << 16) & v) |
              ((e[17] << 8) & A) |
              (e[16] & R)),
            (t.size =
              ((e[23] << 24) & m) |
              ((e[22] << 16) & v) |
              ((e[21] << 8) & A) |
              (e[20] & R)),
            t
          );
        }),
        (P.parse_auth_res = function (e) {
          var t = {};
          return (
            (t.reserve =
              ((e[3] << 24) & m) |
              ((e[2] << 16) & v) |
              ((e[1] << 8) & A) |
              (e[0] & R)),
            t
          );
        }),
        (P.parse_auth3_res = function (e) {
          return e;
        }),
        (P.parse_live_res = function (e) {
          var t = { cam_desc: '' };
          (t.channel =
            ((e[3] << 24) & m) |
            ((e[2] << 16) & v) |
            ((e[1] << 8) & A) |
            (e[0] & R)),
            (t.streamid =
              ((e[7] << 24) & m) |
              ((e[6] << 16) & v) |
              ((e[5] << 8) & A) |
              (e[4] & R)),
            (t.live_cmd =
              ((e[11] << 24) & m) |
              ((e[10] << 16) & v) |
              ((e[9] << 8) & A) |
              (e[8] & R));
          for (
            var n = 12;
            n < P.APP_PROTO_PARAM_LIVE_CAM_DESC_STRLEN && 0 != e[n];
            n++
          )
            t.cam_desc = t.cam_desc + String.fromCharCode(e[n]);
          return t;
        }),
        (P.parse_p2p_frame_head = function (e) {
          var t = {};
          function n(e, t) {
            for (; t > e.length; ) e = '0' + e;
            return e;
          }
          (t.magic =
            ((e[3] << 24) & m) |
            ((e[2] << 16) & v) |
            ((e[1] << 8) & A) |
            (e[0] & R)),
            (t.version =
              ((e[7] << 24) & m) |
              ((e[6] << 16) & v) |
              ((e[5] << 8) & A) |
              (e[4] & R)),
            (t.headtype =
              ((e[11] << 24) & m) |
              ((e[10] << 16) & v) |
              ((e[9] << 8) & A) |
              (e[8] & R)),
            (t.framesize =
              ((e[15] << 24) & m) |
              ((e[14] << 16) & v) |
              ((e[13] << 8) & A) |
              (e[12] & R)),
            (t.len = 24);
          var r =
            n(e[23].toString(2), 8) +
            n(e[22].toString(2), 8) +
            n(e[21].toString(2), 8) +
            n(e[20].toString(2), 8) +
            n(e[19].toString(2), 8) +
            n(e[18].toString(2), 8) +
            n(e[17].toString(2), 8) +
            n(e[16].toString(2), 8);
          return (t.ts_ms = parseInt(r, 2)), t;
        }),
        (P.parse_p2p_frame_head_2 = function (e) {
          var t = {};
          return (
            (t.margic =
              ((e[3] << 24) & m) |
              ((e[2] << 16) & v) |
              ((e[1] << 8) & A) |
              (e[0] & R)),
            (t.frame_seq =
              ((e[7] << 24) & m) |
              ((e[6] << 16) & v) |
              ((e[5] << 8) & A) |
              (e[4] & R)),
            (t.len = 40),
            t
          );
        }),
        (P.parse_live_head = function (e) {
          var t = {};
          return (
            (t.frametype =
              ((e[3] << 24) & m) |
              ((e[2] << 16) & v) |
              ((e[1] << 8) & A) |
              (e[0] & R)),
            (t.channel =
              ((e[7] << 24) & m) |
              ((e[6] << 16) & v) |
              ((e[5] << 8) & A) |
              (e[4] & R)),
            (t.len = 8),
            t
          );
        }),
        (P.parse_oob = function (e) {
          var t = {},
            n = e.subarray(40);
          return (
            (t.centerX =
              ((n[3] << 24) & m) |
              ((n[2] << 16) & v) |
              ((n[1] << 8) & A) |
              (n[0] & R)),
            (t.centerY =
              ((n[7] << 24) & m) |
              ((n[6] << 16) & v) |
              ((n[5] << 8) & A) |
              (n[4] & R)),
            (t.radius =
              ((n[11] << 24) & m) |
              ((n[10] << 16) & v) |
              ((n[9] << 8) & A) |
              (n[8] & R)),
            (t.angleX =
              ((n[15] << 24) & m) |
              ((n[14] << 16) & v) |
              ((n[13] << 8) & A) |
              (n[12] & R)),
            (t.angleY =
              ((n[19] << 24) & m) |
              ((n[18] << 16) & v) |
              ((n[17] << 8) & A) |
              (n[16] & R)),
            (t.angleZ =
              ((n[23] << 24) & m) |
              ((n[22] << 16) & v) |
              ((n[21] << 8) & A) |
              (n[20] & R)),
            t
          );
        }),
        (P.parse_video_param = function (e) {
          for (var t = { enc: '' }, n = 0; n < 8 && 0 != e[n]; n++)
            t.enc = t.enc + String.fromCharCode(e[n]);
          return (
            (t.fps =
              ((e[11] << 24) & m) |
              ((e[10] << 16) & v) |
              ((e[9] << 8) & A) |
              (e[8] & R)),
            (t.width =
              ((e[15] << 24) & m) |
              ((e[14] << 16) & v) |
              ((e[13] << 8) & A) |
              (e[12] & R)),
            (t.height =
              ((e[19] << 24) & m) |
              ((e[18] << 16) & v) |
              ((e[17] << 8) & A) |
              (e[16] & R)),
            (t.reserv =
              ((e[23] << 24) & m) |
              ((e[22] << 16) & v) |
              ((e[21] << 8) & A) |
              (e[20] & R)),
            ('H265' === t.enc || 'H264' === t.enc) && (t.len = 24),
            t
          );
        }),
        (P.parse_audio_param = function (e) {
          for (var t = { enc: '' }, n = 0; n < 8 && 0 != e[n]; n++)
            t.enc = t.enc + String.fromCharCode(e[n]);
          return (
            (t.samplerate =
              ((e[11] << 24) & m) |
              ((e[10] << 16) & v) |
              ((e[9] << 8) & A) |
              (e[8] & R)),
            (t.samplewidth =
              ((e[15] << 24) & m) |
              ((e[14] << 16) & v) |
              ((e[13] << 8) & A) |
              (e[12] & R)),
            (t.channels =
              ((e[19] << 24) & m) |
              ((e[18] << 16) & v) |
              ((e[17] << 8) & A) |
              (e[16] & R)),
            (t.cpmpress =
              ((e[23] << 24) & m) |
              ((e[22] << 16) & v) |
              ((e[21] << 8) & A) |
              (e[20] & R)),
            (t.len = 32),
            t
          );
        }),
        (P.parse_replay_head = function (e) {
          var t = {};
          return (
            (t.frametype =
              ((e[3] << 24) & m) |
              ((e[2] << 16) & v) |
              ((e[1] << 8) & A) |
              (e[0] & R)),
            (t.channel =
              ((e[7] << 24) & m) |
              ((e[6] << 16) & v) |
              ((e[5] << 8) & A) |
              (e[4] & R)),
            (t.type =
              ((e[11] << 24) & m) |
              ((e[10] << 16) & v) |
              ((e[9] << 8) & A) |
              (e[8] & R)),
            (t.quality =
              ((e[15] << 24) & m) |
              ((e[14] << 16) & v) |
              ((e[13] << 8) & A) |
              (e[12] & R)),
            (t.len = 16),
            t
          );
        }),
        (P.setup_req = function (e) {
          var t = new ArrayBuffer(2052),
            n = new Uint8Array(t);
          if (
            ((n[0] = e.length & R),
            (n[1] = (e.length >> 8) & R),
            (n[2] = (e.length >> 16) & R),
            (n[3] = (e.length >> 24) & R),
            e.length >= 2048)
          )
            return n;
          for (var r = 0; r < e.length; r++) n[r + 4] = e.charCodeAt(r);
          return n;
        }),
        (P.setup_req2 = function (e) {
          var t = new ArrayBuffer(36),
            n = new Uint8Array(t);
          return (
            (n[32] = e.length & R),
            (n[33] = (e.length >> 8) & R),
            (n[34] = (e.length >> 16) & R),
            (n[35] = (e.length >> 24) & R),
            n
          );
        }),
        (P.parse_setup = function (e) {
          var t = {};
          return (
            (t.data_size =
              ((e[3] << 24) & m) |
              ((e[2] << 16) & v) |
              ((e[1] << 8) & A) |
              (e[0] & R)),
            (t.len = 4),
            t
          );
        }),
        (P.parse_setup2 = function (e) {
          var t = { len: 36 };
          return (
            (t.data_size =
              ((e[35] << 24) & m) |
              ((e[34] << 16) & v) |
              ((e[33] << 8) & A) |
              (e[32] & R)),
            t
          );
        }),
        (P.parse_p2p_head = function (e) {});
      var E = P;
      const T = {};
      var g = [];
      (T.onconnect = null),
        (T.onclose = null),
        (T.ondata = null),
        (T.onerror = null),
        (T.iot_linktype = { turntcp: 1, iptcp: 2, p2ptcp: 3 }),
        (T.setAddressUrl = function (e) {
          e;
        });
      var O = function (e) {
          for (var t = 0; t < g.length; t++)
            if (g[t].p2p_key == e || g[t].turn_key == e || g[t].iptcp_key == e)
              return g[t];
        },
        y = function (e) {
          var t = e.charCodeAt(0);
          return t < 58 ? t - 48 : t < 91 ? t - 55 : t - 61;
        },
        w = function (e, t) {
          var n = t.charCodeAt(0),
            r = 0;
          if (48 == n) {
            var i = w(e, 'z');
            return (i.mon += 1), i;
          }
          var a =
              (r = n > 48 && n < 58 ? n - 48 : n < 91 ? n - 55 : n - 61) % 12,
            o = Math.floor(r / 12);
          return (
            0 == a && ((a = 12), (o -= 1)), { year: 62 * o + e + 2010, mon: a }
          );
        },
        C = function (e, t) {
          return e < 2023 || (2023 == e && t < 5)
            ? 0
            : e < 2320
            ? 12 * (e - 2024) + 8 + t
            : 3560 + 2 * (e - 2320) + t;
        },
        S = function (e, t) {
          if (e.length > 10) {
            var n = (function (e, t) {
                var n = y(e),
                  r = w(n, t);
                return C(r.year, r.mon);
              })(e.substr(e.length - 12, 1), e.substr(e.length - 11, 1)),
              r = 80;
            t && (r = 443);
            var i = 'ngw-cli.dvr163.com';
            return (
              n >= 9 && (i = 'ngw-cli-' + n + '.dvr163.com'),
              { domain: i, port: r }
            );
          }
          return t
            ? { domain: 'ngw-cli.dvr163.com', port: 443 }
            : { domain: 'ngw-cli.dvr163.com', port: 80 };
        },
        M = function (e) {
          console.log('handle_resolve_ngw:%s', e.uid);
          var t = new XMLHttpRequest();
          t.onreadystatechange = function () {
            if (4 == t.readyState && 200 == t.status) {
              var n = JSON.parse(t.responseText);
              (e.p2p_ip = n.ipv4),
                (e.p2p_port = parseInt(n.tcpport)),
                (e.p2p_key = parseInt(n.apconv)),
                (e.turn_key = parseInt(n.amconv)),
                (e.sid = parseInt(n.sid)),
                e.usehttps &&
                  ((e.p2p_ip =
                    e.p2p_ip.replace(/\./g, '-') + '.kp2p.dvr163.com'),
                  (e.p2p_port = 19001)),
                p.connect(e.p2p_key, e.p2p_ip, e.p2p_port, e.ctx, e.usehttps);
            } else
              4 == t.readyState &&
                200 != t.status &&
                T.onconnect(e, e.ctx, -12);
          };
          var n = 'http://';
          e.usehttps && (n = 'https://');
          var r = S(e.uid, e.usehttps);
          e.uid = (function (e) {
            if (e.length <= 10) return console.log(e), e;
            for (var t = e.length - 10, n = t; n <= e.length; n++)
              if ('0' != e.charAt(n)) {
                t = n;
                break;
              }
            return console.log(e.substr(t)), e.substr(t);
          })(e.uid);
          var i = Math.round(1e7 * Math.random()),
            a = parseInt(new Date().getTime() / 1e3),
            o = (function (e, t, n, r, i) {
              var a =
                'ch_count=' +
                t +
                '&extconv=' +
                r +
                '&id=' +
                e +
                '&r=' +
                n +
                '&timestamp=' +
                i;
              (a = a.toUpperCase()), console.log(a);
              var o = i % 10,
                _ = ((i / 10) % 10) + 1,
                s = stringChangeMd5(a).substr(o, _) + '9an-ngw$app&*' + i;
              return stringChangeMd5(s);
            })(e.uid, e.chancount, i, 3, a);
          t.open(
            'GET',
            n +
              r.domain +
              '/address/clientV2?id=' +
              e.uid +
              '&ch_count=' +
              e.chancount +
              '&r=' +
              i +
              '&extconv=3&sign=' +
              o +
              '&timestamp=' +
              a
          ),
            t.send();
        },
        I = function (e, t) {
          console.log('handle_open_req:%s, session:%d', e.uid, e.sid);
          var n = l.iot_open_req(e.sid, e.turntype),
            r = l.iot_hdr(l.iot_cmd.IOT_LINK_CMD_OPEN_REQ, 0, e.sid, n);
          p.send(t, r);
        };
      const x = Math.floor(5e3 / 9);
      setInterval(() => {
        let e = 0;
        const t = g.length;
        console.log('live_timer');
        for (let n = 0; n < 9 && !(e > t); n++)
          setTimeout(() => {
            for (let a = 0; a < 4; a++)
              if (!(e > t)) {
                var n = g[e++];
                if (n) {
                  if (n.linktype == T.iot_linktype.iptcp) {
                    var r = l.iot_ping(n.iptcp_key),
                      i = l.iot_hdr(l.iot_cmd.IOT_LINK_CMD_PING, 0, n.sid, r);
                    p.send(n.iptcp_key, i);
                  }
                  if (n.linktype == T.iot_linktype.turntcp) {
                    (r = l.iot_ping(n.uid)),
                      (i = l.iot_hdr(l.iot_cmd.IOT_LINK_CMD_PING, 0, n.sid, r));
                    p.send(n.turn_key, i);
                  }
                }
              }
          }, x * (n + 1));
      }, 1e4);
      var D = function (e, t, n) {
        null != T.ondata && T.ondata(e, n, e.ctx);
      };
      (p.onopen = function (e, t, n) {
        var r = O(e);
        null != r &&
          (r.linktype == T.iot_linktype.iptcp
            ? (I(r, r.iptcp_key),
              console.log(
                'iptcp connect success ip=%s, port=%s',
                r.iptcp_ip,
                r.iptcp_port
              ))
            : r.linktype == T.iot_linktype.turntcp
            ? (!(function (e) {
                console.log('handle_login_req:%s', e.uid);
                var t = l.iot_loginturn(e.sid),
                  n = l.iot_hdr(
                    l.iot_cmd.IOT_LINK_CMD_CLIENT_LOGINTURN_REQ,
                    0,
                    e.sid,
                    t
                  );
                p.send(e.turn_key, n);
              })(r),
              console.log(
                'turntcp connect success ip=%s, port=%d',
                r.turn_ip,
                r.turn_port
              ))
            : r.linktype == T.iot_linktype.p2ptcp &&
              (!(function (e) {
                var t, n;
                console.log('handle_turn_req:%s', e.uid),
                  e.turnIp && e.turnPort
                    ? ((t = l.iot_turn_req_v2(
                        e.uid,
                        1,
                        e.chancount,
                        e.turnIp,
                        e.turnPort
                      )),
                      (n = l.iot_hdr(
                        l.iot_cmd.IOT_LINK_CMD_TURN_REQ2,
                        0,
                        e.sid,
                        t
                      )))
                    : ((t = l.iot_turn_req(e.uid, e.turntype, e.chancount)),
                      (n = l.iot_hdr(
                        l.iot_cmd.IOT_LINK_CMD_TURN_REQ,
                        0,
                        e.sid,
                        t
                      ))),
                  p.send(e.p2p_key, n),
                  (e.turn_timestamp = Date.parse(new Date())),
                  (e.turn_timer = setInterval(function () {
                    var t = (Date.parse(new Date()) - e.turn_timestamp) / 1e3;
                    console.log(t),
                      t >= 20 &&
                        (clearInterval(e.turn_timer),
                        T.onconnect(e, e.ctx, -15));
                  }, 2e3))
              })(r),
              (r.linktype = T.iot_linktype.turntcp),
              console.log(
                'p2ptcp connect success ip=%s, port=%d',
                r.p2p_ip,
                r.p2p_port
              )));
      }),
        (p.onerror = function (e, t, n) {
          var r = O(e);
          null != r && null != T.onerror && T.onerror(r, r.ctx, n);
        }),
        (p.ondata = function (e, t, n) {
          var r = O(e);
          if (null != r) {
            var i = l.parse_iot_hdr(n);
            if (i.cmd == l.iot_cmd.IOT_LINK_CMD_TURN_S2A) {
              var a = n.slice(l.hdr_len);
              console.log('s2a_data'),
                (function (e, t, n) {
                  console.log('handle_turn_res:%s', e.uid),
                    (e.turn_ip = n.turnsvr_ip),
                    (e.turn_port = n.turnsvr_port),
                    (e.turn_timestamp = Date.parse(new Date())),
                    e.usehttps &&
                      ((e.turn_ip =
                        e.turn_ip.replace(/\./g, '-') + '.kp2p.dvr163.com'),
                      (e.turn_port = 2e4)),
                    p.connect(
                      e.turn_key,
                      e.turn_ip,
                      e.turn_port,
                      e.ctx,
                      e.usehttps
                    ),
                    p.disconnect(e.p2p_key),
                    (e.p2p_key = 0);
                })(r, 0, l.parse_iot_turn_s2a(a));
            } else if (i.cmd == l.iot_cmd.IOT_LINK_CMD_PONG);
            else if (i.cmd == l.iot_cmd.IOT_LINK_CMD_OPEN_RES) {
              r.turn_timer > 0 && clearInterval(r.turn_timer);
              var o = n.slice(l.hdr_len);
              !(function (e, t, n, r) {
                // console.log('item:', e),
                  console.log(
                    'handle_open_res sid:%d, ecode:%d, uid:%s',
                    n.sid,
                    r,
                    e.uid
                  ),
                  0 == r &&
                    null != T.onconnect &&
                    ((e.link_isok = 1), T.onconnect(e, e.ctx, r));
              })(r, 0, l.parse_iot_open_res(o), i.ecode);
            } else if (i.cmd == l.iot_cmd.IOT_LINK_CMD_CLOSE_RES);
            else if (i.cmd == l.iot_cmd.IOT_LINK_CMD_DATA) {
              var _ = n.slice(l.hdr_len),
                s = E.get_api_magic(_);
              if (s == E.PROC_FRAME_MAGIC || s == E.PROC_FRAME_MAGIC2) {
                var c = _.slice(0);
                if (s == E.PROC_FRAME_MAGIC2) {
                  var u = E.parse_p2p_frame_head_2(c);
                  c = c.subarray(u.len);
                }
                var f = E.parse_p2p_frame_head(c);
                if (f.framesize > c.length)
                  return (
                    (r.trunk_buf = c.slice(0)),
                    void (r.trunk_size = f.framesize)
                  );
              } else if (r.trunk_size > 0) {
                var h = new Uint8Array(r.trunk_buf.length + _.length);
                if (
                  (h.set(r.trunk_buf, 0),
                  h.set(_, r.trunk_buf.length),
                  !(r.trunk_size <= h.length))
                )
                  return void (r.trunk_buf = h.slice(0));
                (r.trunk_size = 0), D(r, 0, h), (r.trunk_buf = null);
              }
              D(r, 0, _);
            } else if (i.cmd == l.iot_cmd.IOT_LINK_CMD_DATA_PRIOR) {
              _ = n.slice(l.hdr_len);
              D(r, 0, _);
            } else if (i.cmd == l.iot_cmd.IOT_LINK_CMD_CLIENT_LOGINTURN_RES) {
              var d = n.slice(l.hdr_len);
              l.parse_iot_login_res(d);
              !(function (e) {
                console.log('handle_login_res:%s', e.uid),
                  // console.log(e),
                  I(e, e.turn_key);
              })(r);
            }
          }
        }),
        (p.onclose = function (e, t, n) {
          console.log('arq.onclose, key=%u', e);
          var r = O(e);
          null != r
            ? (null != T.onclose &&
                e != r.p2p_key &&
                1 == r.link_isok &&
                T.onclose(r, r.ctx, n),
              null != T.onconnect &&
                (e != r.p2p_key && 0 == r.link_isok
                  ? T.onconnect(r, r.ctx, -13)
                  : T.onclose(r, r.ctx, -15)),
              e != r.p2p_key &&
                (r.turn_timer > 0 && clearInterval(r.turn_timer),
                r.live_timer > 0 && clearInterval(r.live_timer),
                (function (e) {
                  for (var t = 0; t < g.length; t++)
                    if (
                      g[t].p2p_key == e ||
                      g[t].turn_key == e ||
                      g[t].iptcp_key == e
                    ) {
                      g.splice(t, 1);
                      break;
                    }
                })(e)))
            : null != T.onclose && T.onclose(0, 0, n);
        }),
        (T.init = function (e, t, n, r) {
          (T.onconnect = e), (T.onclose = t), (T.onerror = n), (T.ondata = r);
        }),
        (T.connect_v2 = function (e, t, n, r, i, a, o, _, s, c) {
          var l,
            u = new XMLHttpRequest();
          // u.onreadystatechange = function () {
          //   if (4 === u.readyState && 200 === u.status) {
          //     console.log(u.responseText);
          //     console.log("========2222")
          //     var s = JSON.parse(u.responseText),
          //       c =
          //         s.nonce.toUpperCase() +
          //         e +
          //         s.request_id.toUpperCase() +
          //         'Japass^2>.j',
          //       f = stringChangeMd5(c),
          //       h = new XMLHttpRequest();
          //     h.onreadystatechange = function () {
          //       if (4 === h.readyState)
          //         if (200 === h.status) {
          //           console.log(h.responseText);
          //           var e = JSON.parse(h.responseText);
          //           l = T.connect(e.sn, t, n, r, i, a, o, _);
          //         } else _ && _(h.response);
          //     };
          //     var d =
          //       'https://openapi.dvr163.com/device/device?method=get_sn&id=' +
          //       e +
          //       '&request_id=' +
          //       s.request_id +
          //       '&verify=' +
          //       f;
          //     h.open('GET', d, !1), h.send();
          //   }
          // };

          async function callU() {
            return new Promise((resolve, reject) => {
              axios
                .get('https://openapi.dvr163.com/message/nonce?method=get')
                .then((res) => {
                  resolve(res.data);
                }).catch(err=>{
                  console.log("==err in catch 2", err)
                });
            });
          }

          return callU()
            .then((uData) => {
              // console.log('====data of u api', uData);
              // var s = JSON.parse(u.responseText),
              var s = uData,
                c =
                  s.nonce.toUpperCase() +
                  e +
                  s.request_id.toUpperCase() +
                  'Japass^2>.j',
                f = stringChangeMd5(c),
                h = new XMLHttpRequest();
              var d =
                'https://openapi.dvr163.com/device/device?method=get_sn&id=' +
                e +
                '&request_id=' +
                s.request_id +
                '&verify=' +
                f;
              return callH(d)
                .then((hData) => {
                  // console.log('====8888', hData);
                  var e = hData;
                  l = T.connect(e.sn, t, n, r, i, a, o, _);
                  // if (f && c) {
                  //   h.turnIp = f;
                  //   h.turnPort = c;
                  // }
                  return l;
                })
                .catch(() => {
                  console.log('=========catch', s);
                  // s && s(l.response);
                  _ && _(l.response);
                });
            })
            .then((data) => {

              if (data)
              return data;
              throw new Error("Wrong device id")
            }).catch(err=>{
              console.log('=====err in catch1', e, e.ctx)
              T.onconnect(e, e.ctx, -15)
              // throw new Error("Wrong device id")
            });

          async function callH(url) {
            return new Promise((resolve, reject) => {
              axios.get(url).then((res) => {
                resolve(res.data);
              }).catch((err) => {
                  reject(err);
                });;
            });
            // return new Promise((resolve, reject) => {
            //   fetch(url)
            //     .then((res) => res.json())
            //     .then((data) => resolve(data));
            // });
          }

          // return (
          //   u.open(
          //     'GET',
          //     'https://openapi.dvr163.com/message/nonce?method=get',
          //     !1
          //   ),
          //   u.send(),
          //   s && c && ((l.turnIp = s), (l.turnPort = c)),
          //   l
          // );
        }),
        (T.connect = function (e, t, n, r, i, a, o, _) {
          var s = {
            uid: e,
            iptcp_ip: n,
            iptcp_port: r,
            ctx: a,
            linktype: 0,
            chancount: t,
            turntype: i,
            iptcp_key: 0,
            turn_key: 0,
            p2p_key: 0,
            link_isok: 0,
            turn_timer: -1,
            turn_timestamp: 0,
            trunk_size: 0,
            trunk_buf: null,
            usehttps: o,
            cb: _,
          };
          if ('' != n) {
            for (s.linktype = T.iot_linktype.iptcp; 0 == s.iptcp_key; )
              s.iptcp_key = Math.round(1e4 * Math.random());
            (s.sid = s.iptcp_key), p.connect(s.iptcp_key, n, r, a, 'ws');
          } else {
            if ('' == e) return null;
            (s.linktype = T.iot_linktype.p2ptcp), M(s);
          }
          return g.push(s), s;
        }),
        (T.close = function (e) {
           if(e){ clearInterval(e.live_timer),
            e.p2p_key > 0 && p.disconnect(e.p2p_key),
            e.turn_key > 0 && p.disconnect(e.turn_key),
            e.iptcp_key > 0 && p.disconnect(e.iptcp_key);
          for (var t = 0; t < g.length; t++)
            if (g[t] == e) {
              g.slice(t, 1);
              break;
            }
        }
        }),
        (T.send = function (e, t) {
          if (e.linktype == T.iot_linktype.iptcp) {
            var n = l.iot_hdr(l.iot_cmd.IOT_LINK_CMD_DATA, 0, e.sid, t);
            return p.send(e.iptcp_key, n), 0;
          }
          if (e.linktype == T.iot_linktype.turntcp) {
            n = l.iot_hdr(l.iot_cmd.IOT_LINK_CMD_DATA, 0, e.sid, t);
            return p.send(e.turn_key, n), 0;
          }
          return -1;
        }),
        (T.send_prior = function (e, t) {
          if (e.linktype == T.iot_linktype.iptcp) {
            var n = l.iot_hdr(l.iot_cmd.IOT_LINK_CMD_DATA_PRIOR, 0, e.sid, t);
            return p.send(e.iptcp_key, n), 0;
          }
          if (e.linktype == T.iot_linktype.turntcp) {
            n = l.iot_hdr(l.iot_cmd.IOT_LINK_CMD_DATA_PRIOR, 0, e.sid, t);
            return p.send(e.turn_key, n), 0;
          }
          return -1;
        });
      var N = T;
      const k = {};
      E.connect_type.CONNECT_TYPE_NONE;
      var b = [];
      (k.onconnect = null),
        (k.ondisconnect = null),
        (k.onloginresult = null),
        (k.onptzresult = null),
        (k.onopenstream = null),
        (k.onclosestream = null),
        (k.onrecvframe = null),
        (k.onrecvframeex = null),
        (k.onrecplaystart = null),
        (k.onrecplaycontrol = null),
        (k.onrecplaystop = null),
        (k.onrecvrecframe = null),
        (k.onremotesetup = null),
        (k.onp2perror = null),
        (k.onsearchrec = null),
        (k.onsearchrecend = null),
        (k.onoob = null),
        (k.onvop2pcallresult = null),
        (k.onrecplaybacktimestamp = null);
      var L = function (e, t, n, r, i) {
        var a = E.find_file_req_2(
            E.api_cmd.APP_PROTO_PARAM_REPLAY_CMD_SEARCH,
            t,
            0,
            i,
            n,
            r,
            e.find_file_index,
            e.find_file_count
          ),
          o = E.api_hdr(E.api_cmd.APP_PROTO_CMD_REPLAY_REQ, e.tick, a);
        N.send(e.iot, o);
      };
      N.init(
        function (e, t, n) {
          null != k.onconnect && k.onconnect(t, n);
        },
        function (e, t, n) {
          null != k.ondisconnect && k.ondisconnect(t, n);
        },
        function (e, t, n) {
          null != onp2perror && k.onp2perror(t, n);
        },
        function (e, t, n) {
          t.length;
          var r = E.get_api_magic(t);
          if (r == E.APP_PROTO_MAGIC) {
            var i = new Int8Array(t),
              a = (E.parse_api_hdr(i), E.parse_api_hdr(t));
            if (a.cmd == E.api_cmd.APP_PROTO_CMD_AUTH_RSP) {
              var o = t.subarray(E.hdr_len);
              E.parse_auth_res(o);
              null != k.onloginresult && k.onloginresult(n, a.result);
            } else if (a.cmd == E.api_cmd.APP_PROTO_CMD_AUTH3_RSP) {
              (o = t.subarray(E.hdr_len)), E.parse_auth_res(o);
              null != k.onloginresult && k.onloginresult(n, a.result);
            } else if (a.cmd == E.api_cmd.APP_PROTO_CMD_LIVE_RSP) {
              var _ = t.subarray(E.hdr_len),
                s = E.parse_live_res(_);
              s.live_cmd == E.api_cmd.APP_PROTO_PARAM_LIVE_CMD_STOP
                ? null != k.onclosestream &&
                  k.onclosestream(n, s.channel, s.streamid, a.result)
                : s.live_cmd == E.api_cmd.APP_PROTO_PARAM_LIVE_CMD_START &&
                  null != k.onopenstream &&
                  k.onopenstream(
                    n,
                    s.channel,
                    s.streamid,
                    a.result,
                    s.cam_desc
                  );
            } else if (a.cmd == E.api_cmd.APP_PROTO_CMD_VOP2P_RSP)
              null != k.onvop2pcallresult && k.onvop2pcallresult(n, a.result);
            else if (a.cmd == E.api_cmd.APP_PROTO_CMD_FIND_START_RSP)
              k.find_next(n);
            else if (a.cmd == E.api_cmd.APP_PROTO_CMD_FIND_NEXT_RSP);
            else if (a.cmd == E.api_cmd.APP_PROTO_CMD_REPLAY_RSP) {
              if (1 != n.file_find)
                return void (
                  0 == n.file_find &&
                  (null != k.onsearchrecend && k.onsearchrecend(n),
                  (n.file_find = 2))
                );
              var c = t.subarray(E.hdr_len),
                l = E.parse_search_res(c);
              if (
                ((n.file_total += l.file_count),
                (n.file_index += l.file_count),
                null != k.onsearchrec)
              )
                for (var u = c.subarray(l.len), f = 0; f < l.file_count; f++) {
                  var h = E.parse_record_file(u);
                  (u = u.subarray(h.len)),
                    k.onsearchrec(
                      n,
                      h.channel,
                      h.file_type,
                      h.file_begintime,
                      h.file_endtime,
                      l.file_total
                    );
                }
              n.file_total >= l.file_total
                ? null != k.onsearchrecend &&
                  ((n.file_find = 2), k.onsearchrecend(n))
                : ((n.find_file_index += n.find_file_count),
                  console.log('find_file_next_2'),
                  L(
                    n,
                    n.file_chnlist,
                    n.file_begintime,
                    n.file_endtime,
                    n.file_type
                  ));
            } else if (a.cmd == E.api_cmd.APP_PROTO_CMD_SETUP_RSP) {
              console.log('APP_PROTO_CMD_SETUP_RSP');
              var d = t.subarray(E.hdr_len),
                p = E.parse_setup(d),
                P = d.subarray(p.len),
                m = '';
              for (f = 0; f < p.data_size; f++) m += String.fromCharCode(P[f]);
              null != k.onremotesetup &&
                k.onremotesetup(n, m, p.data_size, a.result);
            } else if (a.cmd === E.api_cmd.APP_PROTO_CMD_SETUP2_RSP) {
              console.log('APP_PROTO_CMD_SETUP2_RSP');
              for (
                d = t.subarray(E.hdr_len),
                  p = E.parse_setup2(d),
                  P = d.subarray(p.len),
                  m = '',
                  f = 0;
                f < p.data_size;
                f++
              )
                m += String.fromCharCode(P[f]);
              null != k.onremotesetup &&
                k.onremotesetup(n, m, p.data_size, a.result);
            } else if (a.cmd === E.api_cmd.APP_PROTO_CMD_PTZ_RSP) {
              var v = t.subarray(E.hdr_len);
              E.parse_ptz_req(v);
              console.log('ptz_rsp_data.result = %d', a.result),
                k.onptzresult(n, a.result);
            }
          } else if (r == E.PROC_FRAME_MAGIC || r == E.PROC_FRAME_MAGIC2) {
            if (r == E.PROC_FRAME_MAGIC2) {
              var A = E.parse_p2p_frame_head_2(t);
              t = t.subarray(A.len);
            }
            var R = E.parse_p2p_frame_head(t);
            if (
              ((t = t.subarray(R.len)), R.headtype == E.p2p_frame_type.live)
            ) {
              var T = E.parse_live_head(t);
              if (
                ((t = t.subarray(T.len)),
                T.frametype == E.frame_type.PROC_FRAME_TYPE_AUDIO)
              ) {
                var g = E.parse_audio_param(t),
                  O = t.subarray(g.len);
                null != k.onrecvframeex &&
                  k.onrecvframeex(
                    n,
                    T.frametype,
                    O,
                    O.length,
                    T.channel,
                    g.samplerate,
                    g.samplewidth,
                    g.enc,
                    g.channels
                  );
              } else if (
                T.frametype == E.frame_type.PROC_FRAME_TYPE_IFRAME ||
                T.frametype == E.frame_type.PROC_FRAME_TYPE_PFRAME
              ) {
                var y = E.parse_video_param(t),
                  w = t.subarray(y.len);
                null != k.onrecvframeex &&
                  k.onrecvframeex(
                    n,
                    T.frametype,
                    w,
                    w.length,
                    T.channel,
                    y.width,
                    y.height,
                    y.enc,
                    y.fps,
                    R.ts_ms
                  );
              } else if (T.frametype == E.frame_type.PROC_FRAME_TYPE_OOB) {
                var C = E.parse_oob(t);
                null != k.onoob && k.onoob(n, C), console.log(C);
              }
            } else if (R.headtype == E.p2p_frame_type.replay) {
              var S = E.parse_replay_head(t);
              if (
                ((t = t.subarray(S.len)),
                S.frametype == E.frame_type.PROC_FRAME_TYPE_AUDIO)
              ) {
                (g = E.parse_audio_param(t)), (O = t.subarray(g.len));
                g.enc.indexOf('AAC') > -1 && (O = t.subarray(24)),
                  null != k.onrecvrecframe &&
                    k.onrecvrecframe(
                      n,
                      S.frametype,
                      O,
                      O.length,
                      S.channel,
                      g.samplerate,
                      g.samplewidth,
                      g.enc,
                      g.channels,
                      R.ts_ms
                    );
              } else if (
                S.frametype == E.frame_type.PROC_FRAME_TYPE_IFRAME ||
                S.frametype == E.frame_type.PROC_FRAME_TYPE_PFRAME
              ) {
                (y = E.parse_video_param(t)), (w = t.subarray(y.len));
                null != k.onrecvrecframe &&
                  k.onrecvrecframe(
                    n,
                    S.frametype,
                    w,
                    w.length,
                    S.channel,
                    y.width,
                    y.height,
                    y.enc,
                    y.fps,
                    R.ts_ms
                  );
              } else
                S.frametype == E.frame_type.PROC_FRAME_TYPE_OOB &&
                  console.log('OOB FRAME');
            }
          }
        }
      ),
        (k.getversion = function () {
          return '0.1.32';
        }),
        (k.set_conn_type = function (e) {
          e;
        }),
        (k.set_turn_server = function (e) {
          e;
        }),
        (k.create = function (e, t) {
          if (!t) return null;
          var n = {};
          return (
            (n.context = e),
            b.push(n),
            (n.tick = 0),
            (n.aes = t),
            (n.find_file_index = 0),
            (n.find_file_count = 100),
            (n.find_file_total = 0),
            n
          );
        }),
        (k.connectbyid = function (e, t, n, r) {
          (e.deviceid = t),
            (e.ip = ''),
            (e.port = 0),
            // (e.iot = N.connect_v2(t, 1, '', 0, 0, e, n, r));
            N.connect_v2(t, 1, '', 0, 0, e, n, r).then((opt) => {
              e.iot = opt;
            });
        }),
        (k.connectbykey = function (e, t, n, r, i, a, o, _) {
          (e.productId = r),
            (e.deviceid = i),
            (e.deviceSecret = a),
            (e.ip = ''),
            (e.port = 0),
            (e.ngwDomain = t),
            (e.ngwPort = n),
            (e.isdmp = !0),
            (e.iot = N.connect_v3(t, n, r, i, a, 1, e, o, _));
        }),
        (k.connectbyip = function (e, t, n, r, i) {
          (e.deviceid = ''),
            (e.ip = t),
            (e.port = n),
            (e.iot = N.connect('', 1, t, n, 0, e, r, i));
        }),
        (k.setPasswordByDirectConnection = function (e, t, n) {
          var r = {
              cmd: E.JDMPSDK_SETUP_SETPASSWORD,
              time: parseInt(Date.now() / 1e3),
              version: 1,
              sign: '',
              data: { oldPassword: t, newPassword: n },
            },
            i =
              r.cmd +
              'SVYsF!3#=@Vz' +
              r.time +
              '!f8B@5DE^$ar' +
              r.version +
              's=D$jUZGBas@' +
              JSON.stringify(r.data),
            a = stringChangeMd5(i);
          (r.sign = a), console.log(r), k.remote_setup2(e, JSON.stringify(r));
        }),
        (k.login = function (e, t, n, r) {
          if (!r && e.isdmp) {
            var i = n;
            if (e.isdmp) {
              var a =
                e.productId +
                'quhX9w,OTQNd.kj#' +
                e.deviceid +
                '-6j7.@3yHo7qIprG' +
                e.deviceSecret;
              i = stringChangeMd5(a).substr(8, 16);
            }
            for (
              o = t.substr(0, 16),
                _ = t.substr(16),
                s = i.substr(0, 16),
                c = i.substr(16),
                l = o.length;
              l < 16;
              l++
            )
              o += String.fromCharCode(0);
            for (l = _.length; l < 16; l++) _ += String.fromCharCode(0);
            for (l = s.length; l < 16; l++) s += String.fromCharCode(0);
            for (l = c.length; l < 16; l++) c += String.fromCharCode(0);
            (o = e.aes.enc.Utf8.parse(o)),
              (_ = e.aes.enc.Utf8.parse(_)),
              (s = e.aes.enc.Utf8.parse(s)),
              (c = e.aes.enc.Utf8.parse(c)),
              (u = e.aes.enc.Utf8.parse(E.APP_PROTO_AES128_KEY)),
              (f = e.aes.AES.encrypt(o, u, {
                mode: e.aes.mode.ECB,
                padding: e.aes.pad.NoPadding,
              })),
              (h = e.aes.AES.encrypt(_, u, {
                mode: e.aes.mode.ECB,
                padding: e.aes.pad.NoPadding,
              })),
              (d = e.aes.AES.encrypt(s, u, {
                mode: e.aes.mode.ECB,
                padding: e.aes.pad.NoPadding,
              })),
              (p = e.aes.AES.encrypt(c, u, {
                mode: e.aes.mode.ECB,
                padding: e.aes.pad.NoPadding,
              })),
              (P =
                e.aes.enc.Hex.stringify(f.ciphertext).toString() +
                e.aes.enc.Hex.stringify(h.ciphertext).toString()),
              (m =
                e.aes.enc.Hex.stringify(d.ciphertext).toString() +
                e.aes.enc.Hex.stringify(p.ciphertext).toString());
            e.tick += 1;
            for (v = E.auth_req(P, m), A = '', l = 0; l < v.length; l++)
              A += String.fromCharCode(v[l]);
            (t = A.slice(32)),
              (n = A),
              (R = E.api_hdr(E.api_cmd.APP_PROTO_CMD_AUTH_REQ, e.tick, v));
            N.send(e.iot, R);
          } else if (
            t.length < E.APP_PROTO_PARAM_AUTH_NAME_STRLEN &&
            n.length < E.APP_PROTO_PARAM_AUTH_PASSWD_STRLEN
          ) {
            for (
              var o = t.substr(0, 16),
                _ = t.substr(16),
                s = n.substr(0, 16),
                c = n.substr(16),
                l = o.length;
              l < 16;
              l++
            )
              o += String.fromCharCode(0);
            for (var l = _.length; l < 16; l++) _ += String.fromCharCode(0);
            for (var l = s.length; l < 16; l++) s += String.fromCharCode(0);
            for (var l = c.length; l < 16; l++) c += String.fromCharCode(0);
            var o = e.aes.enc.Utf8.parse(o),
              _ = e.aes.enc.Utf8.parse(_),
              s = e.aes.enc.Utf8.parse(s),
              c = e.aes.enc.Utf8.parse(c),
              u = e.aes.enc.Utf8.parse(E.APP_PROTO_AES128_KEY),
              f = e.aes.AES.encrypt(o, u, {
                mode: e.aes.mode.ECB,
                padding: e.aes.pad.NoPadding,
              }),
              h = e.aes.AES.encrypt(_, u, {
                mode: e.aes.mode.ECB,
                padding: e.aes.pad.NoPadding,
              }),
              d = e.aes.AES.encrypt(s, u, {
                mode: e.aes.mode.ECB,
                padding: e.aes.pad.NoPadding,
              }),
              p = e.aes.AES.encrypt(c, u, {
                mode: e.aes.mode.ECB,
                padding: e.aes.pad.NoPadding,
              }),
              P =
                e.aes.enc.Hex.stringify(f.ciphertext).toString() +
                e.aes.enc.Hex.stringify(h.ciphertext).toString(),
              m =
                e.aes.enc.Hex.stringify(d.ciphertext).toString() +
                e.aes.enc.Hex.stringify(p.ciphertext).toString();
            e.tick += 1;
            for (var v = E.auth_req(P, m), A = '', l = 0; l < v.length; l++)
              A += String.fromCharCode(v[l]);
            var t = A.slice(32),
              n = A,
              R = E.api_hdr(E.api_cmd.APP_PROTO_CMD_AUTH_REQ, e.tick, v);
            N.send(e.iot, R);
          } else {
            var v = E.auth_req3(t, n),
              R = E.api_hdr(E.api_cmd.APP_PROTO_CMD_AUTH3_REQ, e.tick, v);
            N.send_prior(e.iot, R);
          }
        }),
        (k.login2 = function (e, t, n) {
          e.tick += 1;
        }),
        (k.ptz_ctrl = function (e, t, n, r, i) {
          e.tick += 1;
          var a = E.ptz_req(t, n, r, i),
            o = E.api_hdr(E.api_cmd.APP_PROTO_CMD_PTZ_REQ, e.tick, a);
          N.send(e.iot, o);
        }),
        (k.open_stream = function (e, t, n) {
          (e.tick += 1), (e.channel = t), (e.streamid = n);
          var r = E.live_req(t, n, E.api_cmd.APP_PROTO_PARAM_LIVE_CMD_START),
            i = E.api_hdr(E.api_cmd.APP_PROTO_CMD_LIVE_REQ, e.tick, r);
          N.send(e.iot, i);
        }),
        (k.close_stream = function (e, t, n) {
          e.tick += 1;
          var r = E.live_req(t, n, E.api_cmd.APP_PROTO_PARAM_LIVE_CMD_STOP),
            i = E.api_hdr(E.api_cmd.APP_PROTO_CMD_LIVE_REQ, e.tick, r);
          N.send(e.iot, i);
        }),
        (k.close_socket = function (e) {
          N.close(e.iot);
        }),
        (k.change_stream = function (e, t, n) {
          (e.tick += 1), (e.channel = t), (e.streamid = n);
          var r = E.live_req(t, n, E.api_cmd.APP_PROTO_PARAM_LIVE_CMD_START),
            i = E.api_hdr(E.api_cmd.APP_PROTO_CMD_LIVE_REQ, e.tick, r);
          N.send(e.iot, i);
        }),
        (k.find_file_start = function (e, t, n, r, i) {
          e.tick += 1;
          var a = E.find_file_cond(t, n, r, i),
            o = E.api_hdr(E.api_cmd.APP_PROTO_CMD_FIND_START_REQ, e.tick, a);
          N.send(e.iot, o);
        }),
        (k.find_next = function (e) {
          e.tick += 1;
          var t = E.find_next_req(0),
            n = E.api_hdr(E.api_cmd.APP_PROTO_CMD_FIND_NEXT_REQ, e.tick, t);
          N.send(e.iot, n);
        }),
        (k.find_file_stop = function (e) {
          e.tick += 1;
          var t = E.find_next_req(0),
            n = E.api_hdr(E.api_cmd.APP_PROTO_CMD_FIND_STOP_REQ, e.tick, t);
          N.send(e.iot, n);
        }),
        (k.find_file_start_2 = function (e, t, n, r, i) {
          (e.tick += 1),
            (e.file_index = 0),
            (e.file_total = 0),
            (e.file_begintime = n),
            (e.file_endtime = r),
            (e.file_type = i),
            (e.file_chnlist = t),
            (e.file_find = 1),
            (e.find_file_index = 0),
            (e.find_file_count = 100),
            (e.find_file_total = 0),
            L(e, t, n, r, i);
        }),
        (k.find_file_stop_2 = function (e) {
          e.file_find = 0;
        }),
        (k.replay_start = function (e, t, n, r, i, a) {
          e.tick += 1;
          var o = E.find_file_req_2(
              E.api_cmd.APP_PROTO_PARAM_REPLAY_CMD_START,
              t,
              a,
              i,
              n,
              r,
              0,
              0
            ),
            _ = E.api_hdr(E.api_cmd.APP_PROTO_CMD_REPLAY_REQ, e.tick, o);
          N.send(e.iot, _);
        }),
        (k.replay_pause = function (e) {
          e.tick += 1;
          var t = E.find_file_req_2(
              E.api_cmd.APP_PROTO_PARAM_REPLAY_CMD_PAUSE,
              null,
              0,
              0,
              0,
              0,
              0,
              0
            ),
            n = E.api_hdr(E.api_cmd.APP_PROTO_CMD_REPLAY_REQ, e.tick, t);
          N.send(e.iot, n);
        }),
        (k.replay_continue = function (e) {
          e.tick += 1;
          var t = E.find_file_req_2(
              E.api_cmd.APP_PROTO_PARAM_REPLAY_CMD_CONTINUE,
              null,
              0,
              0,
              0,
              0,
              0,
              0
            ),
            n = E.api_hdr(E.api_cmd.APP_PROTO_CMD_REPLAY_REQ, e.tick, t);
          N.send(e.iot, n);
        }),
        (k.replay_stop = function (e) {
          e.tick += 1;
          var t = E.find_file_req_2(
              E.api_cmd.APP_PROTO_PARAM_REPLAY_CMD_STOP,
              null,
              0,
              0,
              0,
              0,
              0,
              0
            ),
            n = E.api_hdr(E.api_cmd.APP_PROTO_CMD_REPLAY_REQ, e.tick, t);
          N.send(e.iot, n);
        }),
        (k.remote_setup = function (e, t) {
          e.tick += 1;
          var n = E.setup_req(t),
            r = E.api_hdr(E.api_cmd.APP_PROTO_CMD_SETUP_REQ, e.tick, n);
          N.send(e.iot, r);
        }),
        (k.remote_setup2 = function (e, t) {
          e.tick += 1;
          for (
            var n = E.setup_req2(t),
              r = E.api_hdr(E.api_cmd.APP_PROTO_CMD_SETUP2_REQ, e.tick, n),
              i = r.length + t.length,
              a = new ArrayBuffer(i),
              o = new Uint8Array(a),
              _ = 0;
            _ < r.length;
            _++
          )
            o[_] = r[_];
          for (_ = r.length; _ < t.length + r.length; _++)
            o[_] = t.charCodeAt(_ - r.length);
          N.send(e.iot, o);
        }),
        (k.vop2p_call = function (e, t) {
          e.tick += 1;
          var n = E.vop2p_call_req(t, E.api_cmd.APP_PROTO_PARAM_VOP2P_CMD_CALL),
            r = E.api_hdr(E.api_cmd.APP_PROTO_CMD_VOP2P_REQ, e.tick, n);
          N.send(e.iot, r);
        }),
        (k.vop2p_send = function (e, t, n, r, i, a, o, _, s, c) {
          var l = E.vop2p_send_req(t, n, r, i, a, o, _, s, c);
          N.send(e.iot, l);
        }),
        (k.vop2p_hangup = function (e, t) {
          var n = E.vop2p_call_req(
              t,
              E.api_cmd.APP_PROTO_PARAM_VOP2P_CMD_HANGUP
            ),
            r = E.api_hdr(E.api_cmd.APP_PROTO_CMD_VOP2P_REQ, e.tick, n);
          N.send(e.iot, r);
        }),
        (k.setAddressUrl = function (e) {});
      var B = k;
      var U = function (e, t, n, r) {
        var i = null,
          a = new Array(VERTEX_TYPE_COUNT),
          o = new Array(VERTEX_TYPE_COUNT),
          _ = new Array(VERTEX_TYPE_COUNT),
          s = new Array(VERTEX_TYPE_COUNT),
          c = new Array(VERTEX_TYPE_COUNT),
          l = 0,
          u = 0,
          f = 0,
          h = 0,
          d = 0,
          p = 0,
          P = 0,
          m = 0,
          v = 0,
          A = 0,
          R = 0,
          E = 0,
          T = 0,
          g = 0,
          O = 0,
          y = 0,
          w = 0,
          C = 0,
          S = 0,
          M = new Array(3),
          I = ((i = 0), 0),
          x = 0,
          D = 0,
          N = 0,
          k = newMat4_identity(),
          b = newMat4_identity(),
          L = newMat4_identity(),
          B = 256,
          U = 256,
          F = 256,
          H = 0,
          Y = vec3(0, 0, 0),
          V = vec3(1, 1, 1),
          X = vec3(0, 0, 0),
          K = vec3(0, 0, 0),
          z = vec3(1, 1, 1),
          G = vec3(0, 0, 0),
          q = vec3(0, 0, 0),
          W = vec3(1, 1, 1),
          Q = vec3(0, 0, 0),
          j = vec3(0, 0, 0),
          Z = vec3(1, 1, 1),
          J = vec3(0, 0, 0),
          $ = !1,
          ee = 0,
          te = 0,
          ne = 0,
          re = new Array(3),
          ie = new Array(3),
          ae = 512,
          oe = 512,
          _e = 3,
          se = vec2(0 + _e, 180 + _e),
          ce = vec2(360 + _e, 270 + _e),
          le = t,
          ue = e;
        ue || console.log('gl failed');
        var fe,
          he = n;
        function de(e, t, n, r, i, a, o, _, s, c) {
          (t = newMat4_identity()),
            ksTranslate(t, vec3(0, 0, r)),
            (n = newMat4_identity());
          var l = newMat4_identity();
          newMat4_identity();
          o[0] && ksRotate(l, o[0], 1, 0, 0),
            o[1] && ksRotate(l, o[1], 0, 1, 0),
            o[2] && ksRotate(l, o[2], 0, 0, 1),
            ksMatrixMultiply(n, n, l),
            ksTranslate(t, vec3(i[0], i[1], i[2])),
            c != VERTEX_TYPE_CYLINDER && c != VERTEX_TYPE_CONE
              ? ((e = newMat4_identity()),
                ksPerspective(e, 60 / a[0], he, 1e-4, 1200),
                ue.uniformMatrix4fv(_, !1, e))
              : ((e = newMat4_identity()),
                ksOrtho(e, -he, he, -1, 1, 1e-4, 1200),
                ue.uniformMatrix4fv(_, !1, e),
                ksScale(n, vec3(a[0], a[1], 1))),
            ksMatrixMultiply(t, n, t),
            ue.uniformMatrix4fv(s, !1, t);
        }
        function pe() {
          return ((ce[0] - se[0]) / _e) * ((ce[1] - se[1]) / _e) * 6;
        }
        function Pe(e, t) {
          for (var n = [], r = [], i = se[1]; i < ce[1]; i += _e)
            for (var a = se[0]; a < ce[0]; a += _e) {
              var o = vec2(a, i),
                _ = me(o);
              n.push(_[0]),
                n.push(_[1]),
                n.push(_[2]),
                (_ = me((o = vec2(a - _e, i)))),
                n.push(_[0]),
                n.push(_[1]),
                n.push(_[2]),
                (_ = me((o = vec2(a, i - _e)))),
                n.push(_[0]),
                n.push(_[1]),
                n.push(_[2]),
                (_ = me((o = vec2(a, i - _e)))),
                n.push(_[0]),
                n.push(_[1]),
                n.push(_[2]),
                (_ = me((o = vec2(a - _e, i)))),
                n.push(_[0]),
                n.push(_[1]),
                n.push(_[2]),
                (_ = me((o = vec2(a - _e, i - _e)))),
                n.push(_[0]),
                n.push(_[1]),
                n.push(_[2]);
              var s = ve((o = vec2(a, i)));
              r.push(s[0]), r.push(s[1]);
              s = ve((o = vec2(a - _e, i)));
              r.push(s[0]), r.push(s[1]);
              s = ve((o = vec2(a, i - _e)));
              r.push(s[0]), r.push(s[1]);
              s = ve((o = vec2(a, i - _e)));
              r.push(s[0]), r.push(s[1]);
              s = ve((o = vec2(a - _e, i)));
              r.push(s[0]), r.push(s[1]);
              s = ve((o = vec2(a - _e, i - _e)));
              r.push(s[0]), r.push(s[1]);
            }
          e.set(n), t.set(r);
        }
        function me(e) {
          var t = e[0],
            n = e[1],
            r = 0,
            i = 0,
            a = 0;
          switch (H) {
            case VERTEX_TYPE_HEMISPHERE:
              (r =
                le *
                Math.cos((t / 180) * Math.PI) *
                Math.cos((n / 180) * Math.PI)),
                (i =
                  le *
                  Math.sin((t / 180) * Math.PI) *
                  Math.cos((n / 180) * Math.PI)),
                (a = le * Math.sin((n / 180) * Math.PI));
              break;
            case VERTEX_TYPE_PANORAMA:
              (r = ((180 - t) / 180) * 1.2),
                (i = n > 250 ? (-35 / 180) * 6 : ((215 - n) / 180) * 6),
                (a = 1);
              break;
            case VERTEX_TYPE_CYLINDER:
            case VERTEX_TYPE_CONE:
              (r = (t / 180) * Math.PI), (i = n), (a = 1);
              break;
            case VERTEX_TYPE_EXPAND:
              (r =
                2 *
                Math.cos((t / 180) * Math.PI) *
                Math.cos((n / 180) * Math.PI)),
                (i =
                  2 *
                  Math.sin((t / 180) * Math.PI) *
                  Math.cos((n / 180) * Math.PI)),
                0 == (a = 2 * Math.sin(((n - 180) / 180) * Math.PI)) &&
                  (a = 1e-7),
                (r = (2 * Math.atan(r / a)) / Math.PI),
                (i =
                  -Math.sin((t / 180) * Math.PI) *
                  Math.sin(((270 - n) / 180) * Math.PI)),
                (a = 1.265);
              break;
            case VERTEX_TYPE_NORMAL:
              (r = ((t - 180) / 360) * 2),
                (i = ((n - 225) / 90) * 2),
                (a = 1.265);
              break;
            case VERTEX_TYPE_SPHERE:
              (r =
                Math.cos((t / 180) * Math.PI) * Math.cos((n / 180) * Math.PI)),
                (i =
                  Math.sin((t / 180) * Math.PI) *
                  Math.cos((n / 180) * Math.PI)),
                0 == (a = Math.sin(((n - 180) / 180) * Math.PI)) && (a = 1e-7),
                (r = (2 * Math.atan(r / a)) / Math.PI),
                (i =
                  -Math.sin((t / 180) * Math.PI) *
                  Math.sin(((270 - n) / 180) * Math.PI)),
                (a = 1.265);
          }
          return vec3(r, i, a);
        }
        function ve(e) {
          if (H == VERTEX_TYPE_NORMAL)
            return (c = vec2(e[0] / 360, (270 - e[1]) / 90));
          var t,
            n,
            r,
            i = e[0],
            a = e[1];
          (t =
            le * Math.cos((i / 180) * Math.PI) * Math.cos((a / 180) * Math.PI)),
            (n =
              le *
              Math.sin((i / 180) * Math.PI) *
              Math.cos((a / 180) * Math.PI)),
            (r = le * Math.sin((a / 180) * Math.PI));
          var o = vec3(t, n, r);
          vec3normalize(o, o);
          var _ = vec2(o[0], o[1]),
            s = vec2length(_);
          vec2normalize(_, _), s > 1 && (s = 1);
          var c,
            l = Math.asin(s),
            u = 2 * Math.sin(0.5 * l);
          return (
            ((c = vec2(
              _[0] * u * ((1 / Math.pow(2, 0.5)) * 0.5),
              _[1] * u * ((1 / Math.pow(2, 0.5)) * 0.5)
            ))[0] = c[0] + 0.5),
            (c[1] = c[1] + 0.5),
            (c[1] = 1 - c[1]),
            c
          );
        }
        (this.DrawSelf = function () {
          if (!(F <= 0 && H != VERTEX_TYPE_NORMAL)) {
            ue.useProgram(i);
            var e = ae,
              t = oe;
            ue.uniform1f(h, e), ue.uniform1f(d, t);
            var n;
            if (
              (H == VERTEX_TYPE_HEMISPHERE || H == VERTEX_TYPE_SPHERE
                ? de(
                    b,
                    k,
                    L,
                    (-3 * Math.tan((30 / 180) * Math.PI)) /
                      Math.tan((30 / 180) * Math.PI),
                    vec3(
                      Y[0],
                      Y[1],
                      (Y[2] * Math.tan((30 / 180) * Math.PI)) /
                        Math.tan((30 / 180) * Math.PI)
                    ),
                    V,
                    X,
                    N,
                    D,
                    H
                  )
                : de(b, k, L, -3, Y, V, X, N, D, H),
              ue.uniform1i(l, H),
              ue.uniform1f(u, K[0]),
              ue.uniform1f(f, z[0]),
              ue.uniform1f(p, he),
              ue.uniform1f(y, 1),
              ue.uniform1f(w, B / e - 0.5),
              ue.uniform1f(C, U / t - 0.5),
              ue.uniform1f(S, F / (e / 2)),
              ue.uniform1i(P, $ ? 1 : 0),
              $)
            )
              ue.uniform1f(O, j[0]),
                ue.uniform1f(g, Z[0]),
                ue.uniform1f(A, ne),
                ue.uniform1f(m, te),
                ue.uniform1i(R, ee),
                (n =
                  ee != VERTEX_TYPE_CYLINDER && ee != VERTEX_TYPE_CONE
                    ? -3
                    : 1),
                de(
                  mChangeprojectionMatrix,
                  mChangemodelViewMatrix,
                  mChangeRoateMatrix,
                  n,
                  q,
                  W,
                  Q,
                  E,
                  T,
                  ee
                );
            ue.bindBuffer(ue.ARRAY_BUFFER, a[ee]),
              ue.vertexAttribPointer(v, 3, ue.FLOAT, !1, 0, 0),
              ue.enableVertexAttribArray(v),
              ue.bindBuffer(ue.ARRAY_BUFFER, a[H]),
              ue.vertexAttribPointer(I, 3, ue.FLOAT, !1, 0, 0),
              ue.enableVertexAttribArray(I),
              ue.bindBuffer(ue.ARRAY_BUFFER, c[H]),
              ue.vertexAttribPointer(x, 2, ue.FLOAT, !1, 0, 0),
              ue.enableVertexAttribArray(x);
            for (
              var r = [ue.TEXTURE0, ue.TEXTURE1, ue.TEXTURE2], o = 0;
              o < 3;
              o++
            )
              ue.activeTexture(r[o]),
                null != ie[0]
                  ? ue.bindTexture(ue.TEXTURE_2D, ie[o])
                  : ue.bindTexture(ue.TEXTURE_2D, re[o]),
                ue.uniform1i(M[o], o);
            ue.drawArrays(ue.TRIANGLES, 0, _[H]),
              ue.disableVertexAttribArray(I),
              ue.disableVertexAttribArray(x);
          }
        }),
          (this.SwitchMode = function (e) {
            e < 0 || e > 6 || (H = e);
          }),
          (this.Transform = function (e, t, n) {
            if (n)
              switch (e) {
                case TRANSFORM_TYPE_POSITION:
                  cpvec3(t, K);
                  break;
                case TRANSFORM_TYPE_SCALE:
                  cpvec3(t, z);
                  break;
                case TRANSFORM_TYPE_ROTATE:
                  cpvec3(t, G);
              }
            else
              switch (e) {
                case TRANSFORM_TYPE_POSITION:
                  cpvec3(t, Y);
                  break;
                case TRANSFORM_TYPE_SCALE:
                  cpvec3(t, V);
                  break;
                case TRANSFORM_TYPE_ROTATE:
                  cpvec3(t, X);
              }
          }),
          (this.SetTexture = function (e) {
            (ie[0] = e.texture[0]),
              (ie[1] = e.texture[1]),
              (ie[2] = e.texture[2]),
              (ae = e.texwidth),
              (oe = e.texheight);
          }),
          (this.ClearTexture = function () {
            (ie[0] = null), (ie[1] = null), (ie[2] = null), (ae = 0), (oe = 0);
          }),
          (this.SetFishEyeParameter = function (e, t, n) {
            (F = e), (B = t), (U = n);
          }),
          (this.SetChangeAnimation = function (e, t, n, r) {
            ($ = e), (te = t), (ee = r), (ne = n);
          }),
          (this.SetChangePSR = function (e, t, n, r, i, a) {
            cpvec3(e, q),
              cpvec3(t, W),
              cpvec3(n, Q),
              cpvec3(r, j),
              cpvec3(i, Z),
              cpvec3(a, J);
          }),
          (function () {
            var e = ue.createShader(ue.VERTEX_SHADER);
            ue.shaderSource(
              e,
              '#define PI 3.1415926535897932384626433832795\n#define VERTEX_TYPE_HEMISPHERE 0\n#define VERTEX_TYPE_PANORAMA 1\n#define VERTEX_TYPE_CYLINDER 2\n#define VERTEX_TYPE_EXPAND 3\n#define VERTEX_TYPE_NORMAL 4\n#define VERTEX_TYPE_SPHERE 5\n#define VERTEX_TYPE_CONE 6\nuniform mat4 projection;\nuniform mat4 modelView;\nuniform mat4 changeprojection;\nuniform mat4 changemodelView;\nattribute vec4 vPosition;\nattribute vec4 vChangePosition;\nattribute vec2 aTexCoor;\nuniform int aMode;\nuniform int aChangeMode;\nuniform float texwidth;\nuniform float texheight;\nuniform float aRotate;\nuniform float aDiameter;\nuniform float aAspect;\nuniform float aViewportAspect;\nuniform float aChangeDiameter;uniform float aChangeRotate;uniform int aChangeAnimation;\nuniform float aChangeStep;\nuniform float aChangeStepCount;\n\nvarying vec2 vTextureCoord;\nvarying float vtexwidth;\nvarying float vtexheight;\nvarying float fMode;\n\nvec4 GetPosition(mat4 proj,mat4 mv,vec4 pos,int mode,float diameter)\n{\n    vec4 aPos=pos;\n    if(mode==VERTEX_TYPE_CYLINDER||mode==VERTEX_TYPE_CONE)\n    {\n       float y;       float x=cos((aPos.x)/diameter-0.5*PI+(diameter-1.0)/diameter*PI)*0.8*diameter;\n       if(aPos.y>250.0)\n           y=-35.0/180.0*PI*1.1;\n       else\n           if(mode==VERTEX_TYPE_CONE)\n              y=(215.0-(180.0+(1.0-abs(cos(aPos.y/180.0*PI)))*90.0))/180.0*PI*1.1;\n           else\n              y=(215.0-aPos.y)/180.0*PI*1.1;\n       float z=sin((aPos.x)/diameter-0.5*PI+(diameter-1.0)/diameter*PI)*0.8*diameter-(sqrt(diameter)-1.0/diameter);\n       aPos = vec4(x,y,z,1.0);\n    }\n    else\n    if(mode!=VERTEX_TYPE_HEMISPHERE&&mode!=VERTEX_TYPE_SPHERE)\n    {\n       float vcut=texwidth/texheight;\n       if(mode==VERTEX_TYPE_EXPAND)\n           aPos=vec4(aPos.x*aAspect,aPos.y*vcut,aPos.z,1.0);\n       else\n           aPos=vec4(aPos.x*aAspect,aPos.y,aPos.z,1.0);\n    }\n    else\n           aPos=vec4(aPos.x,aPos.y,aPos.z,1.0);\n    return proj * mv * aPos;\n}\nvec2 GetCoord(float pRotate)\n{\n    float sin_factor = sin(-pRotate);\n    float cos_factor = cos(-pRotate);\n    vec2 tmpcoor = vec2(aTexCoor.x - 0.5, aTexCoor.y - 0.5) * mat2(cos_factor, sin_factor, -sin_factor, cos_factor);\n       return vec2(tmpcoor.x+0.5,tmpcoor.y+0.5);\n}\nvoid main(void)\n{\n    vec4 aPos = GetPosition(projection,modelView,vPosition,aMode,aDiameter);\n    if(aChangeAnimation==1)\n    {\n       vec4 bPos=GetPosition(changeprojection,changemodelView,vChangePosition,aChangeMode,aChangeDiameter)-aPos;\n       bPos=bPos/aChangeStepCount;\n       aPos=aPos+bPos*aChangeStep;\n       float tmp1 = aChangeRotate - aRotate;\n       tmp1=aRotate+tmp1/aChangeStepCount*aChangeStep;\n       vTextureCoord = GetCoord(tmp1);\n    }\n    else\n       vTextureCoord = GetCoord(aRotate);\n    gl_Position = aPos;\n    vtexwidth=texwidth;\n    vtexheight = texheight;\n    if(aMode==4)\n       fMode=1.0;\n    else\n       fMode=0.0;\n}\n'
            ),
              ue.compileShader(e);
            var t = ue.createShader(ue.FRAGMENT_SHADER);
            ue.shaderSource(
              t,
              'precision mediump float;\n\nvarying vec2 vTextureCoord;\nvarying vec2 vTextCoord;\n uniform sampler2D s_texture_y;\n uniform sampler2D s_texture_u;\n uniform sampler2D s_texture_v;\nuniform float centerx;\nuniform float centery;\nuniform float radius;\nvarying float vtexwidth;\nvarying float vtexheight;\nvarying float fMode;\n\nvoid main()\n{\n    vec2 ltc;\n    if(fMode>0.0)\n        ltc = vTextureCoord;\n    else\n        ltc = vec2((vTextureCoord.x-0.5)*radius+centerx+0.5,(vTextureCoord.y-0.5)*radius*(vtexwidth/vtexheight)+0.5+centery);    if(ltc.y>1.0||ltc.y<0.0)\n       gl_FragColor=vec4(0.0,0.0,0.0,0.0);\n    else\n    {\n     highp float y = texture2D(s_texture_y, vTextureCoord).r;\n     highp float u = texture2D(s_texture_u, vTextureCoord).r - 0.5;\n     highp float v = texture2D(s_texture_v, vTextureCoord).r - 0.5;\n     \n     highp float r = y +             1.402 * v;\n     highp float g = y - 0.344 * u - 0.714 * v;\n     highp float b = y + 1.772 * u;\n     gl_FragColor=vec4(r,g,b,1.0);\n    }\n}'
            ),
              ue.compileShader(t),
              (i = ue.createProgram()),
              ue.attachShader(i, e),
              ue.attachShader(i, t),
              ue.linkProgram(i),
              ue.useProgram(i),
              ue.getUniformLocation(i, 'modelView'),
              (l = ue.getUniformLocation(i, 'aMode')),
              (u = ue.getUniformLocation(i, 'aRotate')),
              (f = ue.getUniformLocation(i, 'aDiameter')),
              (h = ue.getUniformLocation(i, 'texwidth')),
              (d = ue.getUniformLocation(i, 'texheight')),
              (p = ue.getUniformLocation(i, 'aAspect')),
              (P = ue.getUniformLocation(i, 'aChangeAnimation')),
              (m = ue.getUniformLocation(i, 'aChangeStep')),
              (v = ue.getAttribLocation(i, 'vChangePosition')),
              (A = ue.getUniformLocation(i, 'aChangeStepCount')),
              (E = ue.getUniformLocation(i, 'changeprojection')),
              (T = ue.getUniformLocation(i, 'changemodelView')),
              (R = ue.getUniformLocation(i, 'aChangeMode')),
              (M[0] = ue.getUniformLocation(i, 's_texture_y')),
              (M[1] = ue.getUniformLocation(i, 's_texture_u')),
              (M[2] = ue.getUniformLocation(i, 's_texture_v')),
              ue.getUniformLocation(i, 'sTexText'),
              (g = ue.getUniformLocation(i, 'aChangeDiameter')),
              (O = ue.getUniformLocation(i, 'aChangeRotate')),
              (y = ue.getUniformLocation(i, 'aViewportAspect')),
              (w = ue.getUniformLocation(i, 'centerx')),
              (C = ue.getUniformLocation(i, 'centery')),
              (S = ue.getUniformLocation(i, 'radius')),
              (I = ue.getAttribLocation(i, 'vPosition')),
              (x = ue.getAttribLocation(i, 'aTexCoor')),
              (D = ue.getUniformLocation(i, 'modelView')),
              (N = ue.getUniformLocation(i, 'projection')),
              (function () {
                var e = newMat4_identity(),
                  t = 60,
                  n = ue.canvas.clientWidth / ue.canvas.clientHeight,
                  r = 1e-4,
                  i = 1200;
                H != VERTEX_TYPE_CYLINDER && H != VERTEX_TYPE_CONE
                  ? ksPerspective(e, t, n, r, i)
                  : ksOrtho(e, -n, n, -1, 1, 1e-4, 1200);
                ue.uniformMatrix4fv(N, !1, e);
              })();
          })(),
          (function () {
            for (var e = 0; e < VERTEX_TYPE_COUNT; e++) {
              H = e;
              var t = 3 * pe(),
                n = pe();
              _[e] = n;
              var r = new Float32Array(t),
                i = ((ce[0] - se[0]) / _e) * ((ce[1] - se[1]) / _e) * 6 * 2,
                l = new Float32Array(i);
              Pe(r, l),
                (o[e] = r.BYTES_PER_ELEMENT),
                (s[e] = l.BYTES_PER_ELEMENT),
                (a[e] = ue.createBuffer()),
                ue.bindBuffer(ue.ARRAY_BUFFER, a[e]),
                ue.bufferData(ue.ARRAY_BUFFER, r, ue.STATIC_DRAW),
                (c[e] = ue.createBuffer()),
                ue.bindBuffer(ue.ARRAY_BUFFER, c[e]),
                ue.bufferData(ue.ARRAY_BUFFER, l, ue.STATIC_DRAW);
            }
            H = 4;
          })(),
          ((fe = new Image()).src = './logo_bg.png'),
          fe.addEventListener('load', function () {
            var e = document.createElement('canvas');
            (e.width = fe.height), (e.height = fe.height);
            var t = e.getContext('2d');
            t.drawImage(fe, 0, 0, fe.height, fe.height);
            let n = t.getImageData(0, 0, fe.height, fe.height).data,
              r = n.length / 4,
              i = new Uint8Array(r),
              a = new Uint8Array(r),
              o = new Uint8Array(r);
            for (let e = 0; e < r; e++) {
              let t = n[4 * e],
                r = n[4 * e + 1],
                _ = n[4 * e + 2];
              (i[e] = 0.299 * t + 0.587 * r + 0.114 * _),
                (a[e] = -0.147108 * t - 0.288804 * r + 0.435912 * _ + 128),
                (o[e] = 0.614777 * t - 0.514799 * r - 0.099978 * _ + 128);
            }
            let _ = e.width,
              s = e.height;
            for (
              var c = [ue.TEXTURE0, ue.TEXTURE1, ue.TEXTURE2],
                l = [i, a, o],
                u = [_, _ / 2, _ / 2],
                f = [s, s / 2, s / 2],
                h = 0;
              h < 3;
              h++
            )
              (re[h] = ue.createTexture()),
                ue.activeTexture(c[h]),
                ue.bindTexture(ue.TEXTURE_2D, re[h]),
                ue.texParameteri(
                  ue.TEXTURE_2D,
                  ue.TEXTURE_MIN_FILTER,
                  ue.LINEAR
                ),
                ue.texParameteri(
                  ue.TEXTURE_2D,
                  ue.TEXTURE_WRAP_S,
                  ue.CLAMP_TO_EDGE
                ),
                ue.texParameteri(
                  ue.TEXTURE_2D,
                  ue.TEXTURE_WRAP_T,
                  ue.CLAMP_TO_EDGE
                ),
                ue.texImage2D(
                  ue.TEXTURE_2D,
                  0,
                  ue.LUMINANCE,
                  u[h],
                  f[h],
                  0,
                  ue.LUMINANCE,
                  ue.UNSIGNED_BYTE,
                  l[h]
                );
            (F = fe.height / 2),
              (oe = fe.height),
              (ae = fe.width),
              (B = fe.width / 2),
              (U = fe.height / 2);
          });
      };
      var F = function (e) {
        function t() {
          return vec3(0, 0, 0);
        }
        function n() {
          return vec3(1, 1, 1);
        }
        function r() {
          return vec3(0, 0, 0);
        }
        function i() {
          return vec3(60, 0, 0);
        }
        function a() {
          return vec3(0, 0, 3);
        }
        function o() {
          var e = {};
          return (
            (e._pos = t()),
            (e._scale = n()),
            (e._rotate = r()),
            (e._texpos = t()),
            (e._texscale = n()),
            (e._texrotate = r()),
            e
          );
        }
        var _,
          s,
          c,
          l,
          u,
          f,
          h,
          d = [
            {
              _item: [
                {
                  _winpos: [0, 0, 12, 12],
                  _default: o(),
                  _matrix: o(),
                  _vertype: VERTEX_TYPE_NORMAL,
                  _ismain: !0,
                  _showframe: !1,
                },
              ],
              _mode: SCRN_NORMAL,
              _count: 1,
              _showselected: !1,
            },
            {
              _item: [
                {
                  _winpos: [0, 0, 12, 12],
                  _default: o(),
                  _matrix: o(),
                  _vertype: VERTEX_TYPE_HEMISPHERE,
                  _ismain: !0,
                  _showframe: !1,
                },
              ],
              _mode: SCRN_HEMISPHERE,
              _count: 1,
              _showselected: !1,
            },
            {
              _item: [
                {
                  _winpos: [0, 0, 12, 12],
                  _default: {
                    _pos: vec3(0, 0, 0),
                    _scale: n(),
                    _rotate: vec3(-30, 0, 0),
                    _texpos: t(),
                    _texscale: n(),
                    _texrotate: r(),
                  },
                  _matrix: {
                    _pos: vec3(0, 0, 0),
                    _scale: n(),
                    _rotate: vec3(-30, 0, 0),
                    _texpos: t(),
                    _texscale: n(),
                    _texrotate: r(),
                  },
                  _vertype: VERTEX_TYPE_CYLINDER,
                  _ismain: !0,
                  _showframe: !1,
                },
              ],
              _mode: SCRN_CYLINDER,
              _count: 1,
              _showselected: !1,
            },
            {
              _item: [
                {
                  _winpos: [0, 0, 12, 12],
                  _default: o(),
                  _matrix: o(),
                  _vertype: VERTEX_TYPE_EXPAND,
                  _ismain: !0,
                  _showframe: !1,
                },
              ],
              _mode: SCRN_EXPAND,
              _count: 1,
              _showselected: !1,
            },
            {
              _item: [
                {
                  _winpos: [-12, 6, 24, 6],
                  _default: o(),
                  _matrix: o(),
                  _vertype: VERTEX_TYPE_PANORAMA,
                  _ismain: !0,
                  _showframe: !1,
                },
                {
                  _winpos: [0, 0, 24, 6],
                  _default: o(),
                  _matrix: o(),
                  _vertype: VERTEX_TYPE_PANORAMA,
                  _ismain: !1,
                  _showframe: !1,
                },
              ],
              _mode: SCRN_UPDOWN,
              _count: 2,
              _showselected: !1,
            },
            {
              _item: [
                {
                  _winpos: [0, 0, 6, 6],
                  _default: {
                    _pos: a(),
                    _scale: n(),
                    _rotate: i(),
                    _texpos: t(),
                    _texscale: n(),
                    _texrotate: r(),
                  },
                  _matrix: {
                    _pos: a(),
                    _scale: n(),
                    _rotate: i(),
                    _texpos: t(),
                    _texscale: n(),
                    _texrotate: r(),
                  },
                  _vertype: VERTEX_TYPE_HEMISPHERE,
                  _ismain: !1,
                  _showframe: !1,
                },
                {
                  _winpos: [6, 0, 6, 6],
                  _default: {
                    _pos: a(),
                    _scale: n(),
                    _rotate: vec3(60, 0, -90),
                    _texpos: t(),
                    _texscale: n(),
                    _texrotate: r(),
                  },
                  _matrix: {
                    _pos: a(),
                    _scale: n(),
                    _rotate: vec3(60, 0, -90),
                    _texpos: t(),
                    _texscale: n(),
                    _texrotate: r(),
                  },
                  _vertype: VERTEX_TYPE_HEMISPHERE,
                  _ismain: !1,
                  _showframe: !1,
                },
                {
                  _winpos: [0, 6, 6, 6],
                  _default: {
                    _pos: a(),
                    _scale: n(),
                    _rotate: vec3(60, 0, -180),
                    _texpos: t(),
                    _texscale: n(),
                    _texrotate: r(),
                  },
                  _matrix: {
                    _pos: a(),
                    _scale: n(),
                    _rotate: vec3(60, 0, -180),
                    _texpos: t(),
                    _texscale: n(),
                    _texrotate: r(),
                  },
                  _vertype: VERTEX_TYPE_HEMISPHERE,
                  _ismain: !1,
                  _showframe: !1,
                },
                {
                  _winpos: [6, 6, 6, 6],
                  _default: {
                    _pos: a(),
                    _scale: n(),
                    _rotate: vec3(60, 0, -270),
                    _texpos: t(),
                    _texscale: n(),
                    _texrotate: r(),
                  },
                  _matrix: {
                    _pos: a(),
                    _scale: n(),
                    _rotate: vec3(60, 0, -270),
                    _texpos: t(),
                    _texscale: n(),
                    _texrotate: r(),
                  },
                  _vertype: VERTEX_TYPE_HEMISPHERE,
                  _ismain: !1,
                  _showframe: !1,
                },
              ],
              _mode: SCRN_FOUR,
              _count: 4,
              _showselected: !1,
            },
          ],
          p = 0,
          P = 0,
          m = [],
          v = -1,
          A = -1,
          R = -1,
          E = this,
          T = e;
        T || console.log('gl failed');
        var g = new U(T, 1.7, T.canvas.width / T.canvas.height, 1),
          O = T.canvas.width,
          y = T.canvas.height;
        function w() {
          return new Date().valueOf();
        }
        (this.DrawSelf = function () {
          T.viewport(0, 0, T.canvas.width, T.canvas.height),
            T.enable(T.DEPTH_TEST),
            T.clearColor(0, 0, 0, 1),
            T.clear(T.COLOR_BUFFER_BIT | T.DEPTH_BUFFER_BIT);
          for (
            var e = T.canvas.width / 12,
              t = T.canvas.height / 12,
              n = d[p],
              r = 0;
            r < n._count;
            r++
          )
            T.viewport(
              n._item[r]._winpos[0] * e,
              n._item[r]._winpos[1] * t,
              n._item[r]._winpos[2] * e,
              n._item[r]._winpos[3] * t
            ),
              g.Transform(TRANSFORM_TYPE_POSITION, n._item[r]._matrix._pos, !1),
              g.Transform(TRANSFORM_TYPE_SCALE, n._item[r]._matrix._scale, !1),
              g.Transform(
                TRANSFORM_TYPE_ROTATE,
                n._item[r]._matrix._rotate,
                !1
              ),
              g.Transform(
                TRANSFORM_TYPE_POSITION,
                n._item[r]._matrix._texpos,
                !0
              ),
              g.Transform(
                TRANSFORM_TYPE_SCALE,
                n._item[r]._matrix._texscale,
                !0
              ),
              g.Transform(
                TRANSFORM_TYPE_ROTATE,
                n._item[r]._matrix._texrotate,
                !0
              ),
              g.SwitchMode(n._item[r]._vertype),
              g.DrawSelf();
          T.viewport(0, 0, T.canvas.width, T.canvas.height);
        }),
          (this.ClearTexture = function () {
            g.ClearTexture();
          }),
          (this.LoadTexture = function (e, t, n) {
            var r = {},
              i = [T.TEXTURE0, T.TEXTURE1, T.TEXTURE2],
              a = t * n,
              o = a >> 2,
              _ = [
                e.subarray(0, a),
                e.subarray(a, a + o),
                e.subarray(a + o, a + 2 * o),
              ];
            r.texture = new Array(3);
            for (
              var s = [t, t / 2, t / 2], c = [n, n / 2, n / 2], l = 0;
              l < 3;
              l++
            )
              (r.texture[l] = T.createTexture()),
                T.activeTexture(i[l]),
                T.bindTexture(T.TEXTURE_2D, r.texture[l]),
                T.texParameteri(T.TEXTURE_2D, T.TEXTURE_MIN_FILTER, T.LINEAR),
                T.texParameteri(
                  T.TEXTURE_2D,
                  T.TEXTURE_WRAP_S,
                  T.CLAMP_TO_EDGE
                ),
                T.texParameteri(
                  T.TEXTURE_2D,
                  T.TEXTURE_WRAP_T,
                  T.CLAMP_TO_EDGE
                ),
                T.texImage2D(
                  T.TEXTURE_2D,
                  0,
                  T.LUMINANCE,
                  s[l],
                  c[l],
                  0,
                  T.LUMINANCE,
                  T.UNSIGNED_BYTE,
                  _[l]
                );
            return (r.texwidth = t), (r.texheight = n), g.SetTexture(r), r;
          }),
          (this.LoadTextureFormFile = function (e, t) {
            var n = new Image();
            n.src = e;
            var r = {};
            return (
              n.addEventListener('load', function () {
                (r.texture = T.createTexture()),
                  T.activeTexture(T.TEXTURE0),
                  T.bindTexture(T.TEXTURE_2D, r.texture),
                  T.texImage2D(
                    T.TEXTURE_2D,
                    0,
                    T.RGBA,
                    T.RGBA,
                    T.UNSIGNED_BYTE,
                    n
                  ),
                  T.texParameteri(
                    T.TEXTURE_2D,
                    T.TEXTURE_MAG_FILTER,
                    T.NEAREST
                  ),
                  T.texParameteri(
                    T.TEXTURE_2D,
                    T.TEXTURE_MIN_FILTER,
                    T.NEAREST
                  ),
                  T.texParameteri(
                    T.TEXTURE_2D,
                    T.TEXTURE_WRAP_S,
                    T.CLAMP_TO_EDGE
                  ),
                  T.texParameteri(
                    T.TEXTURE_2D,
                    T.TEXTURE_WRAP_T,
                    T.CLAMP_TO_EDGE
                  ),
                  T.generateMipmap(T.TEXTURE_2D),
                  (r.texwidth = n.width),
                  (r.texheight = n.height),
                  g.SetTexture(r),
                  null != t && t(r);
              }),
              r
            );
          }),
          (this.Transform = function (e, t, n, r) {
            if (!(r >= d[p]._count))
              if (n)
                switch (e) {
                  case TRANSFORM_TYPE_POSITION:
                    cpvec3(t, d[p]._item[r]._matrix._texpos);
                    break;
                  case TRANSFORM_TYPE_SCALE:
                    cpvec3(t, d[p]._item[r]._matrix._texscale);
                    break;
                  case TRANSFORM_TYPE_ROTATE:
                    cpvec3(t, d[p]._item[r]._matrix._texrotate);
                }
              else
                switch (e) {
                  case TRANSFORM_TYPE_POSITION:
                    cpvec3(t, d[p]._item[r]._matrix._pos);
                    break;
                  case TRANSFORM_TYPE_SCALE:
                    cpvec3(t, d[p]._item[r]._matrix._scale);
                    break;
                  case TRANSFORM_TYPE_ROTATE:
                    cpvec3(t, d[p]._item[r]._matrix._rotate);
                }
          }),
          (this.SetFishEyeParameter = function (e, t, n) {
            g.SetFishEyeParameter(e, t, n);
          }),
          (this.SwitchMode = function (e) {
            e < 0 || e > 5 || (p = e);
          }),
          (this.StartAnimation = function (e, t, n, r, i, a, o, _) {
            var s = d[p];
            if (!(a < 0 || a >= s._count)) {
              var c = {};
              switch (
                ((c._onEnd = _),
                (c._end = new Float32Array(3)),
                cpvec3(e, c._end),
                (c._start = new Float32Array(3)),
                (c._value = new Float32Array(3)),
                (c._Inertia = o),
                r)
              ) {
                case TRANSFORM_TYPE_POSITION:
                  i
                    ? (cpvec3(s._item[a]._matrix._texpos, c._start),
                      cpvec3(s._item[a]._matrix._texpos, c._value))
                    : (cpvec3(s._item[a]._matrix._pos, c._start),
                      cpvec3(s._item[a]._matrix._pos, c._value));
                  break;
                case TRANSFORM_TYPE_SCALE:
                  i
                    ? (cpvec3(s._item[a]._matrix._texscale, c._start),
                      cpvec3(s._item[a]._matrix._texscale, c._value))
                    : (cpvec3(s._item[a]._matrix._scale, c._start),
                      cpvec3(s._item[a]._matrix._scale, c._value));
                  break;
                case TRANSFORM_TYPE_ROTATE:
                  i
                    ? (cpvec3(s._item[a]._matrix._texrotate, c._start),
                      cpvec3(s._item[a]._matrix._texrotate, c._value))
                    : (cpvec3(s._item[a]._matrix._rotate, c._start),
                      cpvec3(s._item[a]._matrix._rotate, c._value));
              }
              return (
                (c._isloop = n),
                (c._istexture = i),
                (c._type = r),
                (c._step = t),
                (c._stepcount = 0),
                (c._index = a),
                c._isloop
                  ? (c._unit = c._end)
                  : (c._unit = vec3(
                      (e[0] - c._start[0]) / t,
                      (e[1] - c._start[1]) / t,
                      (e[2] - c._start[2]) / t
                    )),
                m.push(c),
                c
              );
            }
          }),
          (this.TapOrMouseDown = function (e, t) {
            (R = (function (e, t, n) {
              var r, i, a;
              switch (n) {
                case SCRN_UPDOWN:
                  a = t > y / 2 ? 1 : 0;
                  break;
                case SCRN_FOUR:
                  (r = parseInt(e / (O / 2))),
                    (i = parseInt(t / (y / 2))),
                    (a = parseInt(r + 2 * (1 - i)));
                  break;
                default:
                  a = 0;
              }
              return a;
            })(e, t, p)),
              (m = []),
              (v = e),
              (A = t),
              (_ = e),
              (s = t),
              (c = w());
          }),
          (this.TapOrMouseMove = function (e, t) {
            var n, r;
            if (!(v < 0 && A < 0)) {
              var i = new Float32Array(3),
                a = new Float32Array(3),
                o = new Float32Array(3),
                _ = new Float32Array(3),
                c = new Float32Array(3),
                m = new Float32Array(3),
                E = d[p],
                T = P;
              switch (p) {
                case SCRN_NORMAL:
                  (n = e - v),
                    (r = t - A),
                    cpvec3(E._item[0]._matrix._scale, o),
                    o[0] > 1.00001 &&
                      ((l = ((o[0] - 1) * O) / y),
                      (f = -l),
                      (u = o[1] - 1),
                      (h = -u),
                      cpvec3(E._item[0]._matrix._pos, i),
                      (i[0] += (n / O) * 2),
                      (i[1] -= (r / y) * 2),
                      i[0] > l && (i[0] = l),
                      i[0] < f && (i[0] = f),
                      i[1] > u && (i[1] = u),
                      i[1] < h && (i[1] = h),
                      cpvec3(i, E._item[0]._matrix._pos));
                  break;
                case SCRN_HEMISPHERE:
                  cpvec3(E._item[0]._matrix._scale, i),
                    cpvec3(E._item[0]._matrix._rotate, a),
                    T
                      ? ((l = 60 - 60 / i[1] / 2),
                        (f = -l),
                        (u = 30 - 60 / i[0] / 2),
                        (h = -u),
                        (a[0] = a[0] + ((t - A) / y) * 90),
                        (a[1] = a[1] + ((e - v) / O) * 90),
                        a[1] > l + 20 && (a[1] = l + 20),
                        a[1] < f - 20 && (a[1] = f - 20),
                        a[0] > u + 10 && (a[0] = u + 10),
                        a[0] < h - 10 && (a[0] = h - 10),
                        cpvec3(a, E._item[0]._matrix._rotate))
                      : ((u = 90 - 60 / i[1] / 2),
                        (h = 0),
                        (a[0] = a[0] + ((t - A) / y) * 90),
                        (a[2] = a[2] + ((e - v) / O) * 90),
                        a[0] > u + 10 && (a[0] = u + 10),
                        a[0] < h - 10 && (a[0] = h - 10),
                        cpvec3(a, E._item[0]._matrix._rotate));
                  break;
                case SCRN_CYLINDER:
                  cpvec3(E._item[0]._matrix._scale, o),
                    cpvec3(E._item[0]._matrix._rotate, _),
                    cpvec3(E._item[0]._matrix._texscale, c),
                    cpvec3(E._item[0]._matrix._texpos, m),
                    Math.abs(e - v) < 20 &&
                      Math.abs(t - s) > 20 &&
                      ((c[0] += (10 * (A - t)) / y),
                      c[0] < 1 && (c[0] = 1),
                      c[0] > 6 && (c[0] = 6),
                      (_[0] = 6 * (c[0] - 1) - 30),
                      (o = vec3(
                        1 + 0.1 * (c[0] - 1),
                        1 + 0.1 * (c[0] - 1),
                        1 + 0.1 * (c[0] - 1)
                      )),
                      cpvec3(c, E._item[0]._matrix._texscale),
                      cpvec3(_, E._item[0]._matrix._rotate),
                      cpvec3(o, E._item[0]._matrix._scale)),
                    (m[0] -= (e - v) / O),
                    cpvec3(m, E._item[0]._matrix._texpos);
                  break;
                case SCRN_UPDOWN:
                  cpvec3(E._item[R]._matrix._texpos, m),
                    (m[0] -= (2 * (e - v)) / O),
                    cpvec3(m, E._item[R]._matrix._texpos);
                  break;
                case SCRN_FOUR:
                  R >= 0 &&
                    (cpvec3(E._item[R]._matrix._rotate, a),
                    cpvec3(E._item[R]._matrix._scale, i),
                    (u = 90 - (60 - 100 * (i[1] - 1) * 8) / 2),
                    (h = 0),
                    (a[0] = a[0] + ((t - A) / y) * 90),
                    (a[2] = a[2] + ((e - v) / O) * 90),
                    a[0] > u + 10 && (a[0] = u + 10),
                    a[0] < h - 10 && (a[0] = h - 10),
                    cpvec3(a, E._item[R]._matrix._rotate));
              }
              (v = e), (A = t);
            }
          }),
          (this.TapOrMouseUp = function (e, t) {
            new Float32Array(3);
            var n,
              r = new Float32Array(3),
              i = new Float32Array(3),
              a = new Float32Array(3),
              o = new Float32Array(3),
              m = new Float32Array(3),
              T = d[p],
              g = P;
            switch (p) {
              case SCRN_NORMAL:
                cpvec3(T._item[0]._matrix._scale, i),
                  i[0] > 1.00001 &&
                    (cpvec3(T._item[0]._matrix._pos, r),
                    (n = w() - c) < 1500 &&
                      n > 100 &&
                      Math.abs(e - _) > 30 &&
                      ((r[0] += (e - _) / O / (n / 1e3)),
                      (r[1] -= (t - s) / y / (n / 1e3)),
                      r[0] > l && (r[0] = l),
                      r[0] < f && (r[0] = f),
                      r[1] > u && (r[1] = u),
                      r[1] < h && (r[1] = h),
                      E.StartAnimation(
                        r,
                        100,
                        !1,
                        TRANSFORM_TYPE_POSITION,
                        !1,
                        0,
                        !0,
                        null
                      )));
                break;
              case SCRN_HEMISPHERE:
                cpvec3(T._item[0]._matrix._rotate, r),
                  g
                    ? (r[1] > l && (r[1] = l),
                      r[1] < f && (r[1] = f),
                      r[0] > u && (r[0] = u),
                      r[0] < h && (r[0] = h),
                      E.StartAnimation(
                        r,
                        100,
                        !1,
                        TRANSFORM_TYPE_ROTATE,
                        !1,
                        0,
                        !0,
                        null
                      ))
                    : (r[0] > u && (r[0] = u),
                      r[0] < h && (r[0] = h),
                      (n = w() - c),
                      Math.abs(e - _) > 30 &&
                        ((r[2] += ((e - _) / O / (n / 1e3)) * 180),
                        E.StartAnimation(
                          r,
                          100,
                          !1,
                          TRANSFORM_TYPE_ROTATE,
                          !1,
                          0,
                          !0,
                          null
                        )));
                break;
              case SCRN_CYLINDER:
                cpvec3(T._item[0]._matrix._texpos, r),
                  cpvec3(T._item[0]._matrix._scale, i),
                  cpvec3(T._item[0]._matrix._rotate, a),
                  cpvec3(T._item[0]._matrix._texscale, o),
                  cpvec3(T._item[0]._matrix._texpos, m),
                  (n = w() - c) < 1500 &&
                    n > 0 &&
                    (r[0] -= ((e - _) / O / (n / 1e3)) * 2),
                  E.StartAnimation(
                    r,
                    100,
                    !1,
                    TRANSFORM_TYPE_POSITION,
                    !0,
                    0,
                    !0,
                    null
                  ),
                  1 != o[0] &&
                    6 != o[0] &&
                    (o[0] < 1.3
                      ? ((o[0] = 1), (a[0] = -30), (i = vec3(1, 1, 1)))
                      : ((o[0] = 6), (a[0] = 0), (i = vec3(1.5, 1.5, 1.5))),
                    E.StartAnimation(
                      o,
                      100,
                      !1,
                      TRANSFORM_TYPE_SCALE,
                      !0,
                      0,
                      !0,
                      null
                    ),
                    E.StartAnimation(
                      a,
                      100,
                      !1,
                      TRANSFORM_TYPE_ROTATE,
                      !1,
                      0,
                      !0,
                      null
                    ),
                    E.StartAnimation(
                      i,
                      100,
                      !1,
                      TRANSFORM_TYPE_SCALE,
                      !1,
                      0,
                      !0,
                      null
                    ));
                break;
              case SCRN_UPDOWN:
                cpvec3(T._item[R]._matrix._texpos, r),
                  (n = w() - c) < 1500 &&
                    n > 0 &&
                    (r[0] -= ((e - _) / O / (n / 1e3)) * 2),
                  E.StartAnimation(
                    r,
                    100,
                    !1,
                    TRANSFORM_TYPE_POSITION,
                    !0,
                    R,
                    !0,
                    null
                  );
                break;
              case SCRN_FOUR:
                R >= 0 &&
                  (cpvec3(T._item[R]._matrix._rotate, r),
                  r[0] > u && (r[0] = u),
                  r[0] < h && (r[0] = h),
                  (n = w() - c) < 1500 &&
                    n > 0 &&
                    Math.abs(e - _) > 30 &&
                    ((r[2] += ((e - _) / O / (n / 1e3)) * 180),
                    E.StartAnimation(
                      r,
                      100,
                      !1,
                      TRANSFORM_TYPE_ROTATE,
                      !1,
                      R,
                      !0,
                      null
                    )));
            }
            (v = -1), (A = -1), (_ = -1), (s = -1), (c = 0), (R = -1);
          }),
          (this.SetWallmode = function (e) {
            P = e;
          }),
          (this.tick = function () {
            !(function () {
              for (var e = d[p], t = m.length - 1; t >= 0; t--) {
                if (((ani = m[t]), ani._Inertia)) {
                  var n = Math.PI / 180,
                    r =
                      Math.sin(n * ani._stepcount * (90 / ani._step)) *
                      (ani._end[0] - ani._start[0]),
                    i =
                      Math.sin(n * ani._stepcount * (90 / ani._step)) *
                      (ani._end[1] - ani._start[1]),
                    a =
                      Math.sin(n * ani._stepcount * (90 / ani._step)) *
                      (ani._end[2] - ani._start[2]);
                  ani._value = addvec3(ani._start, vec3(r, i, a));
                } else ani._value = addvec3(ani._value, ani._unit);
                switch (ani._type) {
                  case TRANSFORM_TYPE_POSITION:
                    ani._istexture
                      ? cpvec3(ani._value, e._item[ani._index]._matrix._texpos)
                      : cpvec3(ani._value, e._item[ani._index]._matrix._pos);
                    break;
                  case TRANSFORM_TYPE_SCALE:
                    ani._istexture
                      ? cpvec3(
                          ani._value,
                          e._item[ani._index]._matrix._texscale
                        )
                      : cpvec3(ani._value, e._item[ani._index]._matrix._scale);
                    break;
                  case TRANSFORM_TYPE_ROTATE:
                    ani._istexture
                      ? cpvec3(
                          ani._value,
                          e._item[ani._index]._matrix._texrotate
                        )
                      : cpvec3(ani._value, e._item[ani._index]._matrix._rotate);
                }
                if (
                  (ani._stepcount++,
                  ani._stepcount >= ani._step && !ani._isloop)
                ) {
                  null != ani._onEnd && ani._onEnd(ani);
                  var o = m.indexOf(ani);
                  o > -1 && m.splice(o, 1);
                }
              }
            })(),
              E.DrawSelf(),
              global.setTimeout(E.tick, 40);
          }),
          (this.ClearAnimation = function () {
            m = [];
          }),
          global.setTimeout(this.tick, 40);
      };
      const H = [
          -5504, -5248, -6016, -5760, -4480, -4224, -4992, -4736, -7552, -7296,
          -8064, -7808, -6528, -6272, -7040, -6784, -2752, -2624, -3008, -2880,
          -2240, -2112, -2496, -2368, -3776, -3648, -4032, -3904, -3264, -3136,
          -3520, -3392, -22016, -20992, -24064, -23040, -17920, -16896, -19968,
          -18944, -30208, -29184, -32256, -31232, -26112, -25088, -28160,
          -27136, -11008, -10496, -12032, -11520, -8960, -8448, -9984, -9472,
          -15104, -14592, -16128, -15616, -13056, -12544, -14080, -13568, -344,
          -328, -376, -360, -280, -264, -312, -296, -472, -456, -504, -488,
          -408, -392, -440, -424, -88, -72, -120, -104, -24, -8, -56, -40, -216,
          -200, -248, -232, -152, -136, -184, -168, -1376, -1312, -1504, -1440,
          -1120, -1056, -1248, -1184, -1888, -1824, -2016, -1952, -1632, -1568,
          -1760, -1696, -688, -656, -752, -720, -560, -528, -624, -592, -944,
          -912, -1008, -976, -816, -784, -880, -848, 5504, 5248, 6016, 5760,
          4480, 4224, 4992, 4736, 7552, 7296, 8064, 7808, 6528, 6272, 7040,
          6784, 2752, 2624, 3008, 2880, 2240, 2112, 2496, 2368, 3776, 3648,
          4032, 3904, 3264, 3136, 3520, 3392, 22016, 20992, 24064, 23040, 17920,
          16896, 19968, 18944, 30208, 29184, 32256, 31232, 26112, 25088, 28160,
          27136, 11008, 10496, 12032, 11520, 8960, 8448, 9984, 9472, 15104,
          14592, 16128, 15616, 13056, 12544, 14080, 13568, 344, 328, 376, 360,
          280, 264, 312, 296, 472, 456, 504, 488, 408, 392, 440, 424, 88, 72,
          120, 104, 24, 8, 56, 40, 216, 200, 248, 232, 152, 136, 184, 168, 1376,
          1312, 1504, 1440, 1120, 1056, 1248, 1184, 1888, 1824, 2016, 1952,
          1632, 1568, 1760, 1696, 688, 656, 752, 720, 560, 528, 624, 592, 944,
          912, 1008, 976, 816, 784, 880, 848,
        ],
        Y = [
          -32124, -31100, -30076, -29052, -28028, -27004, -25980, -24956,
          -23932, -22908, -21884, -20860, -19836, -18812, -17788, -16764,
          -15996, -15484, -14972, -14460, -13948, -13436, -12924, -12412,
          -11900, -11388, -10876, -10364, -9852, -9340, -8828, -8316, -7932,
          -7676, -7420, -7164, -6908, -6652, -6396, -6140, -5884, -5628, -5372,
          -5116, -4860, -4604, -4348, -4092, -3900, -3772, -3644, -3516, -3388,
          -3260, -3132, -3004, -2876, -2748, -2620, -2492, -2364, -2236, -2108,
          -1980, -1884, -1820, -1756, -1692, -1628, -1564, -1500, -1436, -1372,
          -1308, -1244, -1180, -1116, -1052, -988, -924, -876, -844, -812, -780,
          -748, -716, -684, -652, -620, -588, -556, -524, -492, -460, -428,
          -396, -372, -356, -340, -324, -308, -292, -276, -260, -244, -228,
          -212, -196, -180, -164, -148, -132, -120, -112, -104, -96, -88, -80,
          -72, -64, -56, -48, -40, -32, -24, -16, -8, 0, 32124, 31100, 30076,
          29052, 28028, 27004, 25980, 24956, 23932, 22908, 21884, 20860, 19836,
          18812, 17788, 16764, 15996, 15484, 14972, 14460, 13948, 13436, 12924,
          12412, 11900, 11388, 10876, 10364, 9852, 9340, 8828, 8316, 7932, 7676,
          7420, 7164, 6908, 6652, 6396, 6140, 5884, 5628, 5372, 5116, 4860,
          4604, 4348, 4092, 3900, 3772, 3644, 3516, 3388, 3260, 3132, 3004,
          2876, 2748, 2620, 2492, 2364, 2236, 2108, 1980, 1884, 1820, 1756,
          1692, 1628, 1564, 1500, 1436, 1372, 1308, 1244, 1180, 1116, 1052, 988,
          924, 876, 844, 812, 780, 748, 716, 684, 652, 620, 588, 556, 524, 492,
          460, 428, 396, 372, 356, 340, 324, 308, 292, 276, 260, 244, 228, 212,
          196, 180, 164, 148, 132, 120, 112, 104, 96, 88, 80, 72, 64, 56, 48,
          40, 32, 24, 16, 8, 0,
        ];
      var V = {
        decodeAlaw: function (e) {
          const t = new Uint8Array(2 * e.length);
          let n = 0,
            r = 0;
          for (; n < e.length; ) {
            const i = H[e[n]];
            if (void 0 === i) throw new Error('can not decode g711 alaw data!');
            (t[r] = 255 & i), (t[r + 1] = i >> 8), (n += 1), (r += 2);
          }
          return t;
        },
        decodeUlaw: function (e) {
          const t = new Uint8Array(2 * e.length);
          let n = 0,
            r = 0;
          for (; n < e.length; ) {
            const i = Y[e[n]];
            if (void 0 === i) throw new Error('can not decode g711 ulaw data!');
            (t[r] = 255 & i), (t[r + 1] = i >> 8), (n += 1), (r += 2);
          }
          return t;
        },
      };
      class X {
        constructor(e, t) {
          (this._samples = new Float32Array()),
            (this._flushingTime = 200),
            (this._channels = e),
            (this._sampleRate = t),
            (this._flush = this._flush.bind(this)),
            // (this._audioCtx = new (global.AudioContext ||
            //   global.webkitAudioContext)()),
            // (this._gainNode = this._audioCtx.createGain()),
            // (this._gainNode.gain.value = 1),
            // this._gainNode.connect(this._audioCtx.destination),
            // (this._startTime = this._audioCtx.currentTime),
            (this._interval = setInterval(this._flush, this._flushingTime)),
            (this.pause = !1);
        }
        setVolume(e) {
          this._gainNode.gain.value = e;
        }
        close() {
          this._samples = new Float32Array();
        }
        pauseAudio() {
          this.pause = !0;
        }
        continueAudio() {
          this.pause = !1;
        }
        feed(e) {
          let t = new Float32Array(this._samples.length + e.length);
          t.set(this._samples, 0),
            t.set(e, this._samples.length),
            (this._samples = t);
        }
        _flush() {
          if (
            !this._channels ||
            !this._sampleRate ||
            !this._samples.length ||
            this.pause
          )
            return;
          let e = this._audioCtx.createBufferSource(),
            t = this._samples.length / this._channels,
            n = this._audioCtx.createBuffer(
              this._channels,
              t,
              this._sampleRate
            );
          for (let e = 0; e != this._channels; ++e) {
            let r = n.getChannelData(e),
              i = e,
              a = 50;
            for (let e = 0; e != t; ++e)
              (r[e] = this._samples[i]),
                e < 50 && (r[e] = (r[e] * e) / 50),
                e >= t - 51 && (r[e] = (r[e] * a--) / 50),
                (i += this._channels);
          }
          this._startTime < this._audioCtx.currentTime &&
            // (this._startTime = this._audioCtx.currentTime),
            (e.buffer = n),
            e.connect(this._gainNode),
            e.start(this._startTime),
            (this._startTime += n.duration),
            (this._samples = new Float32Array());
        }
      }
      class K {
        constructor() {}
        static memmem(e, t, n) {
          for (let r = 0; r <= e.byteLength - n.byteLength - t; ++r) {
            let i = 0;
            for (; i != n.byteLength && e[r + i + t] == n[i]; ++i);
            if (i >= n.byteLength) return r + t;
          }
          return -1;
        }
        static memcmp(e, t, n) {
          for (let r = 0; r != n.byteLength; ++r)
            if (e[r + t] != n[r]) return -1;
          return 0;
        }
        static memcpy(e, t, n, r, i) {
          e.set(n.subarray(r, i), t);
        }
        static milliSecondTime() {
          return new Date().getTime();
        }
        static shortToFloatData(e) {
          let t = e.length,
            n = new Float32Array(t);
          for (let r = 0; r != t; ++r) n[r] = e[r] / 32768;
          return n;
        }
        static floatToShortData(e) {
          let t = e.length,
            n = new Int16Array(t);
          for (let r = 0; r != t; ++r) n[r] = 32768 * e[r];
          return n;
        }
        static downsampleBuffer(e, t, n) {
          if (t == n) return e;
          if (t > n) throw 'rate > sampleRate error !!';
          let r = n / t,
            i = 65532 & Math.ceil(e.length / r),
            a = new Float32Array(i),
            o = 0,
            _ = 0;
          for (; o != a.length; ) {
            let t = _ + r,
              n = 0,
              i = 0,
              s = Math.ceil(_),
              c = Math.ceil(t);
            for (let t = s; t != c && t != e.length; ++t) (n += e[t]), ++i;
            (a[o] = n / i), ++o, (_ = t);
          }
          return a;
        }
      }
      class z {
        constructor(e, t, n, r, i = 20) {
          (this.data = e),
            (this.type = t),
            (this.time = n),
            (this.duration = i),
            (this.errorCode = r);
        }
        static makeErrorResult(e) {
          return new z(null, -1, -1, e);
        }
      }
      (z.ErrorCode = class {
        constructor() {}
      }),
        (z.ErrorCode.SUCCESS = 0),
        (z.ErrorCode.PARAM_ERROR = 1e3),
        (z.ErrorCode.PARAM_CHANGE = 2e3),
        (z.ErrorCode.FAIL = 3e3),
        (z.ErrorCode.NO_INIT_ERROR = z.ErrorCode.FAIL + 1),
        (z.ErrorCode.CACHE_MAX_ERROR = z.ErrorCode.FAIL + 2),
        (z.Type = class {
          constructor() {}
        }),
        (z.Type.H264_I_FRAME = 0),
        (z.Type.H264_P_FRAME = 1),
        (z.Type.H264_B_FRAME = 2),
        (z.Type.AUDIO = 3),
        (z.Type.TRANS_DATA = 4),
        (z.Type.FMP4_HEAD = 5),
        (z.Type.FMP4_BODY = 6);
      var G = {
          BIAS: 132,
          CLIP: 32635,
          tables: {
            ulaw: {
              compress: [
                0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4,
                4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
                5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
                5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
                6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
                6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
                6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                7, 7, 7, 7,
              ],
              decompress: [
                -32124, -31100, -30076, -29052, -28028, -27004, -25980, -24956,
                -23932, -22908, -21884, -20860, -19836, -18812, -17788, -16764,
                -15996, -15484, -14972, -14460, -13948, -13436, -12924, -12412,
                -11900, -11388, -10876, -10364, -9852, -9340, -8828, -8316,
                -7932, -7676, -7420, -7164, -6908, -6652, -6396, -6140, -5884,
                -5628, -5372, -5116, -4860, -4604, -4348, -4092, -3900, -3772,
                -3644, -3516, -3388, -3260, -3132, -3004, -2876, -2748, -2620,
                -2492, -2364, -2236, -2108, -1980, -1884, -1820, -1756, -1692,
                -1628, -1564, -1500, -1436, -1372, -1308, -1244, -1180, -1116,
                -1052, -988, -924, -876, -844, -812, -780, -748, -716, -684,
                -652, -620, -588, -556, -524, -492, -460, -428, -396, -372,
                -356, -340, -324, -308, -292, -276, -260, -244, -228, -212,
                -196, -180, -164, -148, -132, -120, -112, -104, -96, -88, -80,
                -72, -64, -56, -48, -40, -32, -24, -16, -8, 0, 32124, 31100,
                30076, 29052, 28028, 27004, 25980, 24956, 23932, 22908, 21884,
                20860, 19836, 18812, 17788, 16764, 15996, 15484, 14972, 14460,
                13948, 13436, 12924, 12412, 11900, 11388, 10876, 10364, 9852,
                9340, 8828, 8316, 7932, 7676, 7420, 7164, 6908, 6652, 6396,
                6140, 5884, 5628, 5372, 5116, 4860, 4604, 4348, 4092, 3900,
                3772, 3644, 3516, 3388, 3260, 3132, 3004, 2876, 2748, 2620,
                2492, 2364, 2236, 2108, 1980, 1884, 1820, 1756, 1692, 1628,
                1564, 1500, 1436, 1372, 1308, 1244, 1180, 1116, 1052, 988, 924,
                876, 844, 812, 780, 748, 716, 684, 652, 620, 588, 556, 524, 492,
                460, 428, 396, 372, 356, 340, 324, 308, 292, 276, 260, 244, 228,
                212, 196, 180, 164, 148, 132, 120, 112, 104, 96, 88, 80, 72, 64,
                56, 48, 40, 32, 24, 16, 8, 0,
              ],
            },
            alaw: {
              compress: [
                1, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5,
                5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
                6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
                6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                7, 7,
              ],
              decompress: [
                -5504, -5248, -6016, -5760, -4480, -4224, -4992, -4736, -7552,
                -7296, -8064, -7808, -6528, -6272, -7040, -6784, -2752, -2624,
                -3008, -2880, -2240, -2112, -2496, -2368, -3776, -3648, -4032,
                -3904, -3264, -3136, -3520, -3392, -22016, -20992, -24064,
                -23040, -17920, -16896, -19968, -18944, -30208, -29184, -32256,
                -31232, -26112, -25088, -28160, -27136, -11008, -10496, -12032,
                -11520, -8960, -8448, -9984, -9472, -15104, -14592, -16128,
                -15616, -13056, -12544, -14080, -13568, -344, -328, -376, -360,
                -280, -264, -312, -296, -472, -456, -504, -488, -408, -392,
                -440, -424, -88, -72, -120, -104, -24, -8, -56, -40, -216, -200,
                -248, -232, -152, -136, -184, -168, -1376, -1312, -1504, -1440,
                -1120, -1056, -1248, -1184, -1888, -1824, -2016, -1952, -1632,
                -1568, -1760, -1696, -688, -656, -752, -720, -560, -528, -624,
                -592, -944, -912, -1008, -976, -816, -784, -880, -848, 5504,
                5248, 6016, 5760, 4480, 4224, 4992, 4736, 7552, 7296, 8064,
                7808, 6528, 6272, 7040, 6784, 2752, 2624, 3008, 2880, 2240,
                2112, 2496, 2368, 3776, 3648, 4032, 3904, 3264, 3136, 3520,
                3392, 22016, 20992, 24064, 23040, 17920, 16896, 19968, 18944,
                30208, 29184, 32256, 31232, 26112, 25088, 28160, 27136, 11008,
                10496, 12032, 11520, 8960, 8448, 9984, 9472, 15104, 14592,
                16128, 15616, 13056, 12544, 14080, 13568, 344, 328, 376, 360,
                280, 264, 312, 296, 472, 456, 504, 488, 408, 392, 440, 424, 88,
                72, 120, 104, 24, 8, 56, 40, 216, 200, 248, 232, 152, 136, 184,
                168, 1376, 1312, 1504, 1440, 1120, 1056, 1248, 1184, 1888, 1824,
                2016, 1952, 1632, 1568, 1760, 1696, 688, 656, 752, 720, 560,
                528, 624, 592, 944, 912, 1008, 976, 816, 784, 880, 848,
              ],
            },
          },
          encode: function (e, t) {
            t = t || {};
            for (
              var n = new ArrayBuffer(e.byteLength / 2),
                r = new Int8Array(n),
                i = t.alaw ? 'alaw' : 'ulaw',
                a = G[i],
                o = 0;
              o < e.byteLength / 2;
              o++
            )
              r[o] = a(e[o]);
            return r;
          },
          decode: function (e, t) {
            for (
              var n,
                r = !!(t = t || {}).floating_point,
                i = new ArrayBuffer(e.byteLength * (r ? 4 : 2)),
                a = r ? new Float32Array(i) : new Int16Array(i),
                o = G[(t.alaw ? 'alaw' : 'ulaw') + '_dec'],
                _ = 0;
              _ < e.byteLength;
              _++
            )
              (n = o(e[_])), (a[_] = r ? n / 32768 : n);
            return a;
          },
          alaw: function (e) {
            var t,
              n,
              r,
              i = new ArrayBuffer(2),
              a = new ArrayBuffer(1),
              o = new Int16Array(i),
              _ = new Int8Array(a);
            return (
              128 != (t = (~e >> 8) & 128) && ((o[0] = -e), (e = o[0])),
              e > G.CLIP && (e = G.CLIP),
              e >= 256
                ? ((r =
                    (e >> ((n = G.tables.alaw.compress[(e >> 8) & 127]) + 3)) &
                    15),
                  (_[0] = (n << 4) | r))
                : (_[0] = e >> 4),
              (_[0] ^= 85 ^ t),
              _[0]
            );
          },
          alaw_dec: function (e) {
            var t = new ArrayBuffer(2),
              n = new Int8Array(t),
              r = G.tables.alaw.decompress[255 & e];
            return (n[0] = r), (n[1] = r >> 8), new Int16Array(n.buffer)[0];
          },
          alawdecode: function (e) {
            for (var t = new Int16Array(e.length), n = 0; n < e.length; n++)
              t[n] = G.alaw_dec(e[n]);
            return t;
          },
          alawencode: function (e) {
            for (var t = new Int8Array(e.length), n = 0; n < e.length; n++)
              t[n] = G.alaw(e[n]);
            return t;
          },
          ulaw: function (e) {
            var t,
              n,
              r = new ArrayBuffer(2),
              i = new ArrayBuffer(1),
              a = new Int16Array(r),
              o = new Int8Array(i);
            return (
              e < 0
                ? ((a[0] = G.BIAS - e), (e = a[0]), (t = 127))
                : ((e += G.BIAS), (t = 255)),
              (n = G.tables.ulaw.compress[(e >> 8) & 127]) >= 8
                ? 127 ^ t
                : ((o[0] = (n << 4) | ((e >> (n + 3)) & 15)), o[0] ^ t)
            );
          },
          ulaw_dec: function (e) {
            var t = new ArrayBuffer(2),
              n = new Int8Array(t),
              r = G.tables.ulaw.decompress[255 & e];
            return (n[0] = r), (n[1] = r >> 8), new Int16Array(n.buffer)[0];
          },
          ulaw_dec_slow: function (e) {
            var n = new ArrayBuffer(2),
              r = new Int16Array(n);
            (r[0] = ~e),
              (e = r[0]),
              (t = ((15 & e) << 3) + G.BIAS),
              (t <<= (112 & e) >> 4);
            var i = !(128 & ~e),
              a = new ArrayBuffer(2),
              o = new Int16Array(a);
            return (o[0] = i ? G.BIAS - t : t - G.BIAS), o[0];
          },
        },
        q = G;
      // (global.URL = global.URL || global.webkitURL),
      //   void 0 === navigator.mediaDevices && (navigator.mediaDevices = {}),
      //   (global.G711 = q),
      //   (global.audioBufferSouceNode = null);
      new X(1, 8e3);
      let W = function (e, t) {
        const n = new (global.AudioContext || global.webkitAudioContext)({
          sampleRate: 8e3,
        });
        ((t = t || {}).channelCount = 1),
          (t.numberOfInputChannels = t.channelCount),
          (t.numberOfOutputChannels = t.channelCount),
          (t.sampleBits = t.sampleBits || 16),
          (t.sampleRate = t.sampleRate || 8e3),
          (t.bufferSize = 4096);
        let r = n.createMediaStreamSource(e),
          i = n.createGain();
        r.connect(i);
        let a = n.createScriptProcessor(
            t.bufferSize,
            t.channelCount,
            t.channelCount
          ),
          o = {
            size: 0,
            buffer: [],
            buffer2: [],
            inputSampleRate: n.sampleRate,
            inputSampleBits: 16,
            outputSampleRate: t.sampleRate,
            oututSampleBits: t.sampleBits,
            input: function (e) {
              let n = K.floatToShortData(new Float32Array(e));
              console.log(e), console.log(n);
              let r = q.encode(n, { alaw: !0 });
              console.log(r);
              let i = q.decode(r, { alaw: !0 }),
                a = i,
                o = K.shortToFloatData(a);
              console.log(i),
                console.log(o),
                t.inputCallback && t.inputCallback(r);
            },
            getRawData: function () {
              let e = new Float32Array(this.size),
                t = 0;
              for (let n = 0; n < this.buffer.length; n++)
                e.set(this.buffer[n], t), (t += this.buffer[n].length);
              let n = parseInt(this.inputSampleRate / this.outputSampleRate),
                r = e.length / n,
                i = new Float32Array(r),
                a = 0,
                o = 0;
              for (; a < r; ) (i[a] = e[o]), (o += n), a++;
              return i;
            },
            covertWav: function () {
              let e = Math.min(this.inputSampleRate, this.outputSampleRate),
                n = Math.min(this.inputSampleBits, this.oututSampleBits),
                r = this.getRawData(),
                i = r.length * (n / 8),
                a = new ArrayBuffer(44 + i),
                o = new DataView(a),
                _ = 0,
                s = function (e) {
                  for (var t = 0; t < e.length; t++)
                    o.setUint8(_ + t, e.charCodeAt(t));
                };
              return (
                s('RIFF'),
                (_ += 4),
                o.setUint32(_, 36 + i, !0),
                (_ += 4),
                s('WAVE'),
                (_ += 4),
                s('fmt '),
                (_ += 4),
                o.setUint32(_, 16, !0),
                (_ += 4),
                o.setUint16(_, 1, !0),
                (_ += 2),
                o.setUint16(_, t.channelCount, !0),
                (_ += 2),
                o.setUint32(_, e, !0),
                (_ += 4),
                o.setUint32(_, t.channelCount * e * (n / 8), !0),
                (_ += 4),
                o.setUint16(_, t.channelCount * (n / 8), !0),
                (_ += 2),
                o.setUint16(_, n, !0),
                (_ += 2),
                s('data'),
                (_ += 4),
                o.setUint32(_, i, !0),
                (_ += 4),
                (o = this.reshapeWavData(n, _, r, o)),
                o
              );
            },
            getFullWavData: function () {
              const e = this.covertWav();
              return new Blob([e], { type: 'audio/wav' });
            },
            closeContext: function () {
              n.close();
            },
            reshapeWavData: function (e, t, n, r) {
              if (8 === e)
                for (let e = 0; e < n.length; e++, t++) {
                  let i = Math.max(-1, Math.min(1, n[e])),
                    a = i < 0 ? 32768 * i : 32767 * i;
                  (a = parseInt(255 / (65535 / (a + 32768)))),
                    r.setInt8(t, a, !0);
                }
              else
                for (let e = 0; e < n.length; e++, t += 2) {
                  let i = Math.max(-1, Math.min(1, n[e]));
                  r.setInt16(t, i < 0 ? 32768 * i : 32767 * i, !0);
                }
              return r;
            },
            getWavBuffer: function () {
              return this.covertWav().buffer;
            },
            getPcmBuffer: function () {
              let e = this.getRawData(),
                t = 0,
                n = this.oututSampleBits,
                r = e.length * (n / 8),
                i = new ArrayBuffer(r),
                a = new DataView(i);
              for (var o = 0; o < e.length; o++, t += 2) {
                var _ = Math.max(-1, Math.min(1, e[o]));
                a.setInt16(t, _ < 0 ? 32768 * _ : 32767 * _, !0);
              }
              return new Blob([a]);
            },
            getPcmData: function () {
              let e = this.getRawData(),
                t = 0,
                n = this.oututSampleBits,
                r = e.length * (n / 8),
                i = new ArrayBuffer(r),
                a = new DataView(i);
              for (var o = 0; o < e.length; o++, t += 2) {
                var _ = Math.max(-1, Math.min(1, e[o]));
                a.setInt16(t, _ < 0 ? 32768 * _ : 32767 * _, !0);
              }
              return a;
            },
            getframeData: function (e) {
              let t = new Float32Array(e.length),
                n = 0;
              t.set(e, n), (n += e.length);
              let r = parseInt(this.inputSampleRate / this.outputSampleRate),
                i = t.length / r,
                a = new Float32Array(i),
                o = 0,
                _ = 0;
              for (; o < i; ) (a[o] = t[_]), (_ += r), o++;
              let s = 0,
                c = this.oututSampleBits,
                l = a.length * (c / 8),
                u = new ArrayBuffer(l),
                f = new DataView(u);
              for (var h = 0; h < a.length; h++, s += 2) {
                var d = Math.max(-1, Math.min(1, a[h]));
                f.setInt16(s, d < 0 ? 32768 * d : 32767 * d, !0);
              }
              return f;
            },
            concatenate(e) {
              let t = 0;
              for (let n of e) t += n.byteLength;
              let n = new Uint8Array(t),
                r = 0;
              for (let t of e) {
                let e = new Uint8Array(t);
                n.set(e, r), (r += t.byteLength);
              }
              return n.buffer;
            },
          };
        (this.start = () => {
          r.connect(a), a.connect(n.destination);
        }),
          (this.getBlob = () => (this.stop(), o.getFullWavData())),
          (this.getBuffer = () => (this.stop(), o.getPcmBuffer())),
          (this.play = (e, t) => {
            (e.src = global.URL.createObjectURL(this.getBlob())),
              e.addEventListener('play', () => {
                this.draw(t);
              });
          }),
          (this.wavSrc = () => global.URL.createObjectURL(this.getBlob())),
          (this.aacSrc = () => o.getPcmData()),
          (this.getWavBuffer = () => o.getWavBuffer()),
          (this.pcmSrc = () => (
            this.stop(), global.URL.createObjectURL(this.getBuffer())
          )),
          (this.stop = () => {
            a.disconnect();
          }),
          (this.close = function () {
            o.closeContext();
            e.getTracks()[0].stop();
          }),
          (this.draw = function (e) {
            const t = o.getWavBuffer();
            n.decodeAudioData(t, (t) => {
              null != global.audioBufferSouceNode &&
                global.audioBufferSouceNode.stop(),
                (global.audioBufferSouceNode = n.createBufferSource()),
                (audioBufferSouceNode.buffer = t),
                (gainNode = n.createGain()),
                (gainNode.gain.value = 2),
                audioBufferSouceNode.connect(gainNode);
              let r = n.createAnalyser();
              (r.fftSize = 256),
                gainNode.connect(r),
                r.connect(n.destination),
                audioBufferSouceNode.start(0);
              let i = new Uint8Array(r.frequencyBinCount),
                a = e.createLinearGradient(0, 0, 4, 200);
              a.addColorStop(1, 'pink'),
                a.addColorStop(0.5, 'blue'),
                a.addColorStop(0, 'red');
              let o = function () {
                let t = new Uint8Array(r.frequencyBinCount);
                r.getByteFrequencyData(t), e.clearRect(0, 0, 600, 200);
                for (let n = 0; n < t.length; n++) {
                  let r = t[n];
                  !i[n] || r > i[n] ? (i[n] = r) : (i[n] -= 1),
                    e.fillRect(20 * n, 200 - r, 4, r),
                    e.fillRect(20 * n, 200 - i[n] - 6.6, 4, 3.3),
                    (e.fillStyle = a);
                }
                requestAnimationFrame(o);
              };
              o();
            });
          }),
          (a.onaudioprocess = (e) => {
            console.log('录音音频流生成'),
              o.input(e.inputBuffer.getChannelData(0));
          });
      };
      // W.get = (e, t) => {
      //   e &&
      //     (navigator.mediaDevices && navigator.mediaDevices.getUserMedia
      //       ? navigator.mediaDevices
      //           .getUserMedia({ audio: !0 })
      //           .then((n) => {
      //             const r = new W(n, t);
      //             e(r);
      //           })
      //           .catch((e) => {
      //             console.log(e);
      //           })
      //       : alert('麦克风获取失败'));
      // };
      var Q = W;
      (global.JARecorder = Q),
        (global.JASplitData = class {
          constructor() {
            (this._samples = new Uint8Array()),
              (this._flushingTime = 20),
              (this.getDataCallback = null),
              (this.outputData = null),
              (this._flush = this._flush.bind(this)),
              (this._interval = setInterval(this._flush, this._flushingTime)),
              (this.pause = !1);
          }
          close() {
            this._samples = new Uint8Array();
          }
          pauseAudio() {
            this.pause = !0;
          }
          continueAudio() {
            this.pause = !1;
          }
          feed(e) {
            let t = new Uint8Array(this._samples.length + e.length);
            t.set(this._samples, 0),
              t.set(e, this._samples.length),
              (this._samples = t);
          }
          _flush() {
            if (this._samples && this._samples.length < 160) return;
            let e = new Uint8Array(this._samples.length - 160),
              t = new Uint8Array(this._samples.subarray(0, 160));
            e.set(this._samples.subarray(160), 0),
              (this._samples = e),
              this.outputData && this.outputData(t);
          }
          setDataCallback(e) {
            this.outputData = e;
          }
        });
      let j = global.AudioContext || global.webkitAudioContext,
        Z = j ? new j({ sampleRate: 8e3, latencyHint: 'interactive' }) : '',
        J = [];
      var $ = class {
        constructor() {
          (this.pcmPlayer = new X(1, 8e3)),
            (this.audioPlay = function (e, t, n, r) {
              if (t.indexOf('G711') > -1) {
                let t = new Uint8Array(e);
                320 != t.length && 160 != t.length && (t = t.subarray(36));
                let n = V.decodeAlaw(t),
                  r = K.shortToFloatData(n);
                this.pcmPlayer.feed(r);
              } else if ((249 == e[1] && (e[1] = 241), J.length))
                if (J[0].length < 8) {
                  let t = new Uint8Array(J[0].buffer),
                    n = new ArrayBuffer(e.length + t.length),
                    r = new Uint8Array(n);
                  for (i = 0; i < t.length; i++) r[i] = t[i];
                  for (i = t.length; i < r.length; i++) r[i] = e[i - t.length];
                  (J[0].buffer = n), (J[0].length = J[0].length + 1);
                } else {
                  let e = J[0].buffer;
                  Z.decodeAudioData(e).then((e) => {
                    let t = e.getChannelData(0);
                    this.pcmPlayer.feed(t);
                  }),
                    (J = []);
                }
              else {
                let t = new ArrayBuffer(e.length),
                  n = new Uint8Array(t);
                for (var i = 0; i < n.length; i++) n[i] = e[i];
                J.push({ buffer: t, length: 1 });
              }
            }),
            (this.audioStop = function () {
              this.pcmPlayer && this.pcmPlayer.close(),
                this.pcmPlayer.setVolume(0);
            }),
            (this.openVolume = function () {
              this.pcmPlayer.setVolume(1);
            });
        }
      };
      class ee {
        constructor(e) {
          (this.db = null),
            (this.dbName = 'windex' + e),
            (this.storeName = 'frameList'),
            this.initDB(this.dbName);
        }
        initDB(e, t = 1) {
          let n;
          const r = (
            global.indexedDB ||
            global.mozIndexedDB ||
            global.webkitIndexedDB ||
            global.msIndexedDB
          ).open(e, t);
          (r.onsuccess = (e) => {
            (this.db = e.target.result), console.log('数据库打开成功');
          }),
            (r.onerror = (e) => {
              console.log('数据库打开报错');
            }),
            (r.onupgradeneeded = (e) => {
              console.log('onupgradeneeded'),
                (n = e.target.result),
                n.createObjectStore(this.storeName, { keyPath: 'index' });
            });
        }
        addData(e) {
          var t = this.db
            .transaction([this.storeName], 'readwrite')
            .objectStore(this.storeName)
            .add(e);
          (t.onsuccess = function (e) {}),
            (t.onerror = function (e) {
              console.log('数据写入失败');
            });
        }
        getFrameValue(e) {
          return new Promise((t, n) => {
            var r = this.db
              .transaction(this.storeName, 'readwrite')
              .objectStore(this.storeName)
              .openCursor();
            (r.onerror = (e) => {
              console.log('getFrameValue打开报错');
            }),
              (r.onsuccess = function (n) {
                var r = n.target.result;
                r ? (t(r.value), e && r.delete()) : t(null);
              });
          });
        }
        clearDate() {
          var e = this.db
            .transaction([this.storeName], 'readwrite')
            .objectStore(this.storeName)
            .clear();
          (e.onsuccess = function () {
            console.log('数据删除成功');
          }),
            (e.onerror = function () {
              console.log('数据删除失败');
            });
        }
      }
      (global.CryptoJS = n()),
        (global.p2papi = B),
        (global.ConnectApi = B),
        (global.kp2pPlayer = function (e, t, n, r, i) {
          (this.fetchController = null),
            (this.httpflv = null),
            this.parsecount,
            this.lastframetime,
            this.flvpts,
            (this.requestUrl = ''),
            (this.playbackPause = !1),
            (this.audioPlayer = new $()),
            (this.db = i ? new ee(n) : null);
          var a = null;
          const o = new Worker('canvasWorker.js');
          var _ = this,
            s = null,
            c = null,
            l = null,
            u = '',
            f = null,
            h = 0,
            d = 0,
            p = 0,
            P = 0,
            m = 0,
            v = 0,
            A = 0,
            R = 0,
            E = 0,
            T = document.createElement('canvas');
          (T.visible = !1),
            (this.OnTooManyFrames = null),
            (this.OnNeedFrames = null);
          var g,
            O,
            y = null,
            w = !1,
            C = !1,
            S = n,
            M = [],
            I = 1,
            x = !0,
            D = 0,
            N = 0,
            k = -1,
            b = null,
            L = 'snapshot.png',
            U = null,
            H = '';
          this.winIndex = n;
          var Y = r,
            V = { callback: null, index: 0 },
            X = null,
            K = null;
          let z = !1,
            G = !1;
          (async () => {
            if ('undefined' != typeof VideoDecoder) {
              const e = {
                  codec: 'hev1.1.6.L120.90',
                  codedWidth: 1080,
                  codedHeight: 720,
                },
                { supported: t } = await VideoDecoder.isConfigSupported(e);
              t && (G = !0);
            }
          })(),
            (this.framePerSecond = 0);
          const q = 'undefined' != typeof ipc;
          (this.width = e.width),
            (this.height = e.height),
            (this.rawWidth = 1980),
            (this.rawHeight = 1080),
            (this.setResolution = function (e, t) {
              (this.width = e), (this.height = t);
            });
          const W = {
            output: (e) => {
              o.postMessage(
                {
                  frame: e,
                  isHidden: z,
                  width: this.width,
                  height: this.height,
                },
                [e]
              );
            },
            error: (e) => {
              console.log(e.message);
            },
          };
          let Q = null,
            j = null;
          if (
            (setTimeout(() => {
              if (G)
                console.log('[Decode Method] webcodecs working...'),
                  (a = e.transferControlToOffscreen()),
                  o.postMessage({ canvas: a, isHidden: z }, [a]),
                  o.addEventListener('message', function (e) {
                    const { data: t } = e;
                    if ('snapshot' == t.message) {
                      const { imgData: e } = t;
                      document.createElement('a');
                      let n = '',
                        r = '';
                      r =
                        L.indexOf('jpg') > -1 || L.indexOf('jpeg') > -1
                          ? 'image/jpeg'
                          : 'image/png';
                      let i = document.createElement('canvas'),
                        a = i.getContext('2d');
                      (i.width = e.width),
                        (i.height = e.height),
                        a.putImageData(e, 0, 0),
                        (n = i.toDataURL(r)),
                        q ? te(n, L, H || '', U) : ne(n, L, U);
                    }
                  });
              else if (
                (console.log('[Decode Method] wasm ffmpeg working...'),
                (a = e),
                r)
              ) {
                var t =
                  e.getContext('webgl', { preserveDrawingBuffer: !0 }) ||
                  e.getContext('experimental-webgl', {
                    preserveDrawingBuffer: !0,
                  });
                null != t
                  ? (s = new F(t))
                  : ((f = e.getContext('2d')), (Y = !1));
              } else f = e.getContext('2d');
              !(function () {
                if (null == s) return;
                a.addEventListener(
                  'mousedown',
                  function (e) {
                    s.TapOrMouseDown(e.offsetX, e.offsetY);
                  },
                  !1
                ),
                  a.addEventListener(
                    'mouseup',
                    function (e) {
                      s.TapOrMouseUp(e.offsetX, e.offsetY);
                    },
                    !1
                  ),
                  a.addEventListener(
                    'mousemove',
                    function (e) {
                      s.TapOrMouseMove(e.offsetX, e.offsetY);
                    },
                    !1
                  );
                var e = {};
                a.addEventListener(
                  'touchstart',
                  function (e) {
                    var t = e.touches[0],
                      n = new MouseEvent('mousedown', {
                        clientX: t.clientX,
                        clientY: t.clientY,
                      });
                    a.dispatchEvent(n);
                  },
                  !1
                ),
                  a.addEventListener(
                    'touchend',
                    function (t) {
                      var n = new MouseEvent('mouseup', e);
                      a.dispatchEvent(n);
                    },
                    !1
                  ),
                  a.addEventListener(
                    'touchmove',
                    function (t) {
                      var n = t.touches[0];
                      (e.clientX = n.clientX), (e.clientY = n.clientY);
                      var r = new MouseEvent('mousemove', {
                        clientX: n.clientX,
                        clientY: n.clientY,
                      });
                      a.dispatchEvent(r);
                    },
                    !1
                  );
              })(),
                J();
            }),
            t)
          )
            (c = new Worker('Decoder.js')).addEventListener(
              'message',
              function (e) {
                var t = e.data;
                t.consoleLog
                  ? console.log(t.consoleLog)
                  : O(new Uint8Array(t.buf), t.width, t.height);
              }
            ),
              c.postMessage({
                type: 'Broadway.js - Worker init',
                options: { rgb: null == s },
              });
          else {
            var Z = this;
            O = function (e, t, n, r, i) {
              0;
              var a = new Date().getTime(),
                o = a - 0;
              d <= o ? (d = o) : (0 == h || h >= o) && (h = o),
                (p += o),
                P++,
                a,
                (0 == t && 0 == n) ||
                  (Z.DrawPicture(e, t, n),
                  Z.setDecodeTime(re() - g),
                  Z.setPlaybackTime(N));
            };
          }
          function J(e) {
            if (!G)
              if (b) {
                const e = document.createElement('canvas');
                (e.width = b.width), (e.height = b.height);
                const t = e.getContext('2d');
                t.drawImage(b, 0, 0);
                const n = t.getImageData(0, 0, e.width, e.height);
                if (r) {
                  new Uint8Array(n.data);
                  return s?.ClearTexture(), 0;
                }
                f.drawImage(
                  b,
                  0,
                  0,
                  b.width,
                  b.height,
                  0,
                  0,
                  a.width,
                  a.height
                );
              } else
                ((b = new Image()).src = e || './logo_bg.png'),
                  (b.onload = function () {
                    const e = document.createElement('canvas');
                    (e.width = b.width), (e.height = b.height);
                    const t = e.getContext('2d');
                    t.drawImage(b, 0, 0);
                    const n = t.getImageData(0, 0, e.width, e.height);
                    if ((console.log('imageonload', b), r)) {
                      new Uint8Array(n.data);
                      return s?.ClearTexture(), 0;
                    }
                    f.drawImage(
                      b,
                      0,
                      0,
                      b.width,
                      b.height,
                      0,
                      0,
                      a.width,
                      a.height
                    );
                  });
          }
          function te(e, t, n, r) {
            ipc.invoke(ipcApiRoute.downloadFileToFolder, {
              fileUrl: e,
              fileName: t,
              savePath: n,
            }),
              ipc.removeAllListeners(ipcApiRoute.downloadFileToFolderResult),
              ipc.on(ipcApiRoute.downloadFileToFolderResult, (e, t) => {
                r && r(t);
              });
          }
          function ne(e, t, n) {
            var r = document.createElement('a');
            (r.href = e),
              (r.download = t),
              document.body.appendChild(r),
              r.click(),
              document.body.removeChild(r),
              n && n({ res: 200 });
          }
          function re() {
            return new Date().valueOf();
          }
          async function ie() {
            if (!x) return console.log('执行关闭码流操作'), void J();
            M.length < 100 &&
              null != y &&
              !w &&
              C &&
              (y(S), (w = !0), (C = !1));
            var e = 40,
              t = 40;
            if (!_.playbackPause && !_.isHidden) {
              var n = new Date().getTime(),
                r = null;
              if ((r = _.db ? await _.db.getFrameValue(1) : M.shift())) {
                n = new Date().getTime();
                if (
                  ((N = r.timestamp),
                  B.onrecplaybacktimestamp(r.timestamp, _.winIndex),
                  (g = re()),
                  (_.codec = r.encode),
                  (u = r.encode),
                  (_.rawWidth = r.frame_width ? r.frame_width : 1980),
                  (_.rawHeight = r.frame_height ? r.frame_height : 1080),
                  G &&
                    (Q
                      ? u != j.encode &&
                        (await ae(u, r.frame_width, r.frame_height))
                      : await ae(u, r.frame_width, r.frame_height)),
                  (G && Q) ||
                    (l
                      ? u != j.encode &&
                        (l.UninitDecoder(),
                        'H264' == r.encode
                          ? l.InitDecoder(!1, !Y)
                          : 'H265' == r.encode && l.InitDecoder(!0, !Y),
                        (u = r.encode))
                      : (((l = new hevcDecoder()).onPictureDecoded = O),
                        'H264' == r.encode
                          ? l.InitDecoder(!1, !Y)
                          : 'H265' == r.encode && l.InitDecoder(!0, !Y),
                        (u = r.encode))),
                  1 == r.frame_type && (j = r),
                  r.index != E && 1 != r.frame_type)
                );
                else {
                  if (Q) {
                    ('closed' !== Q.state && 'unconfigured' !== Q.state) ||
                      (await ae(u, r.frame_width, r.frame_height));
                    const e = new EncodedVideoChunk({
                      timestamp: r.timestamp,
                      type: 'key',
                      data: r.frame,
                    });
                    try {
                      if ((Q.decode(e), se)) {
                        le.push(r.timestamp);
                        let e = new Uint8Array(ce.length + r.frame.length);
                        e.set(ce, 0), e.set(r.frame, ce.length), (ce = e);
                      }
                    } catch (t) {
                      console.error('[sth wrong]', t, e);
                    }
                  } else l.DirectDecode(r.frame);
                  (E = r.index + 1),
                    (t = new Date().getTime() - n) > A
                      ? (A = t)
                      : (t < v || v <= 0) && (v = t),
                    t,
                    k < 0 && (k = re());
                }
              }
              let i = null;
              _.db
                ? (i = await _.db.getFrameValue(0))
                : M.length > 0 && (i = M[0]),
                i && (e = i.timestamp - N - t),
                (e > 100 || e < 0) && (e = 0);
            }
            x
              ? (K =
                  0 == D
                    ? global.setTimeout(ie, 10)
                    : global.setTimeout(ie, e * I))
              : (_.cleanFrame(), null != s && s?.ClearTexture());
          }
          async function ae(e, t, n) {
            const r = {
              codec:
                'H264' == e
                  ? 'avc1.42001e'
                  : 'H265' == e
                  ? 'hev1.1.6.L120.90'
                  : '',
              codedWidth: t || 1980,
              codedHeight: n || 1080,
            };
            if (!r.codec) return;
            const { supported: i } = await VideoDecoder.isConfigSupported(r);
            i && ((Q = new VideoDecoder(W)), Q.configure(r));
          }
          (this.fillframe = function (e, t, n) {
            0 == m && (m = new Date().getTime()),
              l
                ? u != n &&
                  (l.UninitDecoder(),
                  'H264' == n
                    ? l.InitDecoder(!1, !Y)
                    : 'H265' == n && l.InitDecoder(!0, !Y),
                  (u = n))
                : (((l = new hevcDecoder()).onPictureDecoded = O),
                  'H264' == n
                    ? l.InitDecoder(!1, !Y)
                    : 'H265' == n && l.InitDecoder(!0, !Y),
                  (u = n)),
              l.DirectDecode(e);
          }),
            (this.deinit = function () {
              l && (l.UninitDecoder(), (l = null));
            }),
            (this.fillframe_v2 = function (e, t, n, r, i, a, o) {
              x &&
                (this.db
                  ? this.db.addData({
                      frame: e,
                      frame_len: t,
                      encode: n,
                      timestamp: r,
                      index: R,
                      frame_width: i,
                      frame_height: a,
                      frame_type: o,
                    })
                  : (((1 === D && M.length < 15e3) ||
                      (0 === D && M.length < 200)) &&
                      M.push({
                        frame: e,
                        frame_len: t,
                        encode: n,
                        timestamp: r,
                        index: R,
                        frame_width: i,
                        frame_height: a,
                        frame_type: o,
                      }),
                    M.length > 200 &&
                      (null == this.OnTooManyFrames ||
                        C ||
                        (this.OnTooManyFrames(S), (C = !0), (w = !1)))),
                R++);
            }),
            (this.DrawPicture = function (e, t, n) {
              if (null != s) s.LoadTexture(new Uint8Array(e), t, n);
              else {
                T.width != t && (T.width = t), T.height != n && (T.height = n);
                var r = T.getContext('2d'),
                  i = r.createImageData(t, n);
                i.data.set(e),
                  r.putImageData(i, 0, 0),
                  f.drawImage(
                    T,
                    0,
                    0,
                    T.width,
                    T.height,
                    0,
                    0,
                    a.width,
                    a.height
                  );
              }
            }),
            (this.LogPlayInfo = function () {
              0, P > 0 && p / P;
            }),
            (this.pauseDecode = function () {
              !0;
            }),
            (this.continueDecode = function () {
              !1;
            }),
            (this.fast = function () {
              I <= 0 || (I <= 0.125 ? (I = 0) : (I /= 2));
            }),
            (this.slow = function () {
              I >= 4 || (I <= 0 ? (I = 0.25) : (I *= 2));
            }),
            (this.reset = function () {
              I = 1;
            }),
            (this.close = function () {
              (x = !1),
                (M = []),
                console.log('close'),
                G
                  ? (o.postMessage({ message: 'close' }, []),
                    Q && (Q.close(), (Q = null)))
                  : this.deinit(),
                !1,
                (L = 'snapshot.png'),
                0,
                0,
                this.db && this.db.clearDate();
            }),
            (this.cleanFrame = function () {
              console.log('clear frameList'), (M = []);
            }),
            (this.open = function (e = 0) {
              console.log('open方法 kp2p play', D),
                console.log('stream_mode', D),
                this.db && this.db.clearDate(),
                (x = !0),
                (M = []),
                (y = this.OnNeedFrames),
                clearTimeout(K),
                (this.playbackPause = !1),
                ie(this.OnNeedFrames);
            }),
            (this.SetStreamMode = function (e) {
              D = e;
            }),
            (this.GetVersion = function () {
              return '1.0.0.0';
            }),
            (this.LogPlayInfo_v2 = function () {}),
            (this.Snapshot = function (e, t, n, r, i) {
              e && (L = e),
                G
                  ? (function (e, t, n, r) {
                      o.postMessage({
                        message: 'snapshot',
                        snapshotFileName: L,
                        width: _.rawWidth,
                        height: _.rawHeight,
                      }),
                        (H = n || ''),
                        r && (U = r);
                    })(0, 0, r, i)
                  : (function (e, t, n, r) {
                      var i = 'image/png',
                        o = '';
                      if (
                        ((i =
                          L.indexOf('jpg') > -1 || L.indexOf('jpeg') > -1
                            ? 'image/jpeg'
                            : 'image/png'),
                        e && t)
                      ) {
                        var _ = document.createElement('canvas'),
                          s = _.getContext('2d');
                        (_.width = e),
                          (_.height = t),
                          s.drawImage(a, 0, 0, a.width, a.height, 0, 0, e, t),
                          (o = _.toDataURL(i));
                      } else o = a.toDataURL(i);
                      q ? te(o, L, n || '', r) : ne(o, L, r);
                    })(t, n, r, i);
            }),
            (this.renderBackground = function () {
              J();
            }),
            (this.setDecodeTimeCallback = function (e, t) {
              (V.callback = t), (V.index = e);
            }),
            (this.setDecodeTime = function (e) {
              V.callback && V.callback(V.index, e);
            }),
            (this.setPlaybackTimeCallback = function (e) {
              X = e;
            }),
            (this.setPlaybackTime = function (e) {
              X && X(e);
            }),
            document.addEventListener('visibilitychange', async () => {
              'visible' === document.visibilityState
                ? ((this.isHidden = !1),
                  Q &&
                    x &&
                    0 === D &&
                    (this.cleanFrame(),
                    (j.index = R++),
                    M.push(j),
                    clearTimeout(K),
                    ie()))
                : 'hidden' === document.visibilityState && (this.isHidden = !0);
            });
          let oe,
            _e,
            se = !1,
            ce = new Uint8Array(),
            le = [],
            ue = 'video';
          (this.ctrlRecord = function (e = '', t = '', n) {
            (ce = new Uint8Array()),
              (le = []),
              (se = !0),
              (ue = e + '.mp4'),
              (oe = t),
              (_e = n);
          }),
            (this.ctrlRecordOff = function () {
              (se = !1),
                (function () {
                  let e = 'H264' === u ? 0 : 1;
                  console.log('recordChunks', ce);
                  const t = Module.convertNalus2Mp4(ce, le, e),
                    n = new Blob([t], { type: 'video/mp4' });
                  if (q) {
                    const e = new FileReader();
                    (e.onload = function (e) {
                      ipc.invoke(ipcApiRoute.downloadFileToFolder, {
                        fileUrl: e.target.result,
                        fileName: ue,
                        savePath: oe,
                      }),
                        ipc.removeAllListeners(
                          ipcApiRoute.downloadFileToFolderResult
                        ),
                        ipc.on(
                          ipcApiRoute.downloadFileToFolderResult,
                          (e, t) => {
                            _e && _e(t);
                          }
                        );
                    }),
                      e.readAsDataURL(n);
                  } else {
                    const e = URL.createObjectURL(n);
                    ne(e, ue, _e), global.URL.revokeObjectURL(e);
                  }
                })();
            });
        });
      try {
        (global.__h5SDK_builder_os_username__ = '吴灶凯'),
          (global.__h5SDK_builder_os_hostname__ = 'LAPTOP-NF8S96ET'),
          (global.__h5SDK_builder_os_mac__ = '0a:00:27:00:00:0c'),
          (global.__h5SDK_build_time__ = '2024/8/6 17:52:35'),
          (global.__h5SDK_git_commit_id__ =
            '543b64ed1d74659e7b4a546414f664a3a7c0ba73'),
          (global.__h5SDK_version__ = '1.0.0');
      } catch (e) {}
    })();
})();
